{"version":3,"sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/../src/input.js","webpack://core/components/TooltipManager/index.vue","webpack://core/./helpers/mixins/HelpersMixin.js","webpack://core/../src/mark_step.js","webpack://core/../src/replace_step.js","webpack://core/webpack/bootstrap","webpack://core/../src/commands.js","webpack://core/components/Paper/editor.vue","webpack://core/./components/InputBase/components/HelperReveal.vue?bb57","webpack://core/./components/Paper/components/paper-button.vue?011b","webpack://core/./components/ButtonBase/index.vue?721b","webpack://core/./node_modules/fault/index.js","webpack://core/components/Paper/components/paper-popin.vue","webpack://core/../src/map.js","webpack://core/../src/transform.js","webpack://core/../src/step.js","webpack://core/../src/structure.js","webpack://core/../src/replace.js","webpack://core/../src/mark.js","webpack://core/./components/TooltipManager/components/Tooltip.vue?d6f1","webpack://core/./components/Paper/components/paper-popin.vue?e737","webpack://core/../src/gapcursor.js","webpack://core/../src/index.js","webpack://core/./components/Paper/components/paper-select.vue?60ef","webpack://core/components/InputBase/components/HelperReveal.vue","webpack://core/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://core/./components/ButtonBase/index.vue","webpack://core/./components/Paper/plugins/StyledBlock/extension.js","webpack://core/../src/dropcursor.js","webpack://core/./components/Paper/view.vue?bec4","webpack://core/./components/InputBase/index.vue","webpack://core/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://core/components/InputBase/components/HelperErrors.vue","webpack://core/components/InputUpload/index.vue","webpack://core/./components/InputBase/schema.js","webpack://core/../src/diff.js","webpack://core/../src/fragment.js","webpack://core/../src/comparedeep.js","webpack://core/../src/node.js","webpack://core/../src/content.js","webpack://core/../src/schema.js","webpack://core/../src/from_dom.js","webpack://core/../src/to_dom.js","webpack://core/../src/resolvedpos.js","webpack://core/./components/InputBase/components/HelperNumber.vue","webpack://core/./node_modules/lowlight/lib/core.js","webpack://core/./components/PopinBase/index.vue?6e17","webpack://core/./components/Paper/components/paper-popin.vue","webpack://core/./index.js","webpack://core/./components/InputBase/index.vue?e685","webpack://core/../src/collab.js","webpack://core/./components/InputMedia/index.vue?9407","webpack://core/./components/Paper/plugins/StyledBlock/menu.js","webpack://core/./components/InputMedia/index.vue?c912","webpack://core/components/GalleryMosaic/index.vue","webpack://core/../src/selection.js","webpack://core/../src/state.js","webpack://core/../src/plugin.js","webpack://core/../src/transaction.js","webpack://core/./components/PopinBase/index.vue?92b8","webpack://core/../src/tablemap.js","webpack://core/../src/util.js","webpack://core/../src/cellselection.js","webpack://core/../src/copypaste.js","webpack://core/../src/fixtables.js","webpack://core/../src/tableview.js","webpack://core/../src/columnresizing.js","webpack://core/./components/InputBase/components/HelperReset.vue?3857","webpack://core/../src/dom.js","webpack://core/../src/domcoords.js","webpack://core/../src/viewdesc.js","webpack://core/../src/capturekeys.js","webpack://core/../src/domchange.js","webpack://core/../src/clipboard.js","webpack://core/../src/domobserver.js","webpack://core/../src/decoration.js","webpack://core/../src/browser.js","webpack://core/./components/SelectBase/index.vue","webpack://core/./components/Paper/view.vue","webpack://core/./node_modules/format/format.js","webpack://core/./components/InputBase/components/HelperReset.vue","webpack://core/components/InputMedia/index.vue","webpack://core/./components/Paper/editor.vue","webpack://core/./components/Paper/plugins/StyledBlock/index.js","webpack://core/./helpers/mixins/ModifiersMixin.js","webpack://core/../src/schema-list.js","webpack://core/./components/ToggleBase/index.vue?3156","webpack://core/./components/PopinBase/index.vue","webpack://core/./components/InputBase/components/HelperReveal.vue","webpack://core/./components/ButtonBase/schema.js","webpack://core/./components/Paper/plugins/Image/index.js","webpack://core/./components/Paper/plugins/Link/index.js","webpack://core/./components/InputBase/components/HelperErrors.vue","webpack://core/./components/InputMedia/index.vue","webpack://core/components/Paper/view.vue","webpack://core/components/TooltipManager/components/Tooltip.vue","webpack://core/../src/keymap.js","webpack://core/./components/GalleryMosaic/index.vue?34d4","webpack://core/./components/TooltipManager/index.vue","webpack://core/../src/history.js","webpack://core/./components/Paper/components/paper-select.vue?419b","webpack://core/./node_modules/orderedmap/index.es.js","webpack://core/./node_modules/@soda/get-current-script/index.js","webpack://core/./components/Paper/view.vue?4f27","webpack://core/components/Paper/components/paper-select.vue","webpack://core/external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}","webpack://core/./components/GalleryMosaic/index.vue","webpack://core/./components/InputBase/components/HelperNumber.vue?0a8f","webpack://core/./components/InputBase/components/HelperErrors.vue?e18a","webpack://core/./components/SelectBase/index.vue?0ff2","webpack://core/./components/Paper/plugins/Image/menu.js","webpack://core/../src/transforms.js","webpack://core/../src/helpers.js","webpack://core/../src/table.js","webpack://core/./components/Paper/components/paper-button.vue?5b18","webpack://core/./node_modules/w3c-keyname/index.es.js","webpack://core/./node_modules/tiptap-utils/dist/utils.esm.js","webpack://core/./components/ToggleBase/index.vue?309b","webpack://core/components/ToggleBase/index.vue","webpack://core/./node_modules/tiptap-commands/dist/commands.esm.js","webpack://core/components/Paper/components/paper-button.vue","webpack://core/./components/Paper/components/paper-popin.vue?db2d","webpack://core/./components/InputBase/components/HelperErrors.vue?101d","webpack://core/./components/TooltipManager/components/Tooltip.vue","webpack://core/./components/SelectBase/index.vue?d008","webpack://core/./components/TooltipManager/index.vue?aedc","webpack://core/./components/GalleryMosaic/schema.js","webpack://core/./components/Paper/plugins/Link/menu.js","webpack://core/./components/Paper/components/paper-select.vue","webpack://core/./components/InputBase/index.vue?1156","webpack://core/./components/TooltipManager/index.vue?fb19","webpack://core/./components/InputUpload/index.vue?e882","webpack://core/./helpers/InputValidators.js","webpack://core/./node_modules/rope-sequence/dist/index.es.js","webpack://core/./components/ButtonBase/index.vue?f0b9","webpack://core/./components/Paper/plugins/index.js","webpack://core/./components/Paper/editor.vue?381c","webpack://core/./components/InputUpload/index.vue","webpack://core/components/InputBase/components/HelperNumber.vue","webpack://core/./components/GalleryMosaic/index.vue?636c","webpack://core/./node_modules/tiptap/dist/tiptap.esm.js","webpack://core/./components/TooltipManager/components/Tooltip.vue?fc54","webpack://core/components/ButtonBase/index.vue","webpack://core/components/PopinBase/index.vue","webpack://core/components/SelectBase/index.vue","webpack://core/./components/InputBase/components/HelperReveal.vue?2238","webpack://core/./components/Paper/editor.vue?6716","webpack://core/./node_modules/lowlight/node_modules/highlight.js/lib/core.js","webpack://core/./components/Paper/plugins/Link/extension.js","webpack://core/components/InputBase/index.vue","webpack://core/./components/InputBase/components/HelperNumber.vue?150c","webpack://core/./components/Paper/components/paper-button.vue","webpack://core/components/InputBase/components/HelperReset.vue","webpack://core/./node_modules/tiptap-extensions/dist/extensions.esm.js","webpack://core/./components/ToggleBase/index.vue","webpack://core/./components/InputBase/components/HelperReset.vue?b761","webpack://core/./components/InputUpload/index.vue?9653","webpack://core/../src/inputrules.js","webpack://core/../src/rulebuilders.js","webpack://core/../src/rules.js","webpack://core/./node_modules/@vue/cli-service/lib/commands/build/entry-lib-no-default.js","webpack://core/./components/Paper/plugins/Image/extension.js"],"names":["String","fromCharCode","Math","min","max","e","let","l","p","i","t","pos","n","o","s","c","a","r","$from","$to","const","staticClass","format","formatter","FormattedError","EConstructor","require","fault","create","module","Error","call","type","attrs","f","startIndex","endIndex","d","index","Fragment","content","depth","this","deleted","recover","ranges","inverted","JSON","stringify","maps","from","to","mirror","length","setMirror","appendMap","Object","steps","docs","mapping","addStep","push","doc","apply","failed","super","slice","structure","getMap","invert","map","merge","Slice","append","toJSON","stepType","gapFrom","gapTo","insert","insertAt","size","splitting","mark","h","found","prototypeAccessors","g","m","methods","randomBetween","currentIndex","array","randomIndex","temporaryValue","params","$store","commit","element","target","eq","head","getBookmark","search","NodeSelection","$cur","Selection","currentScript","window","getCurrentScript","get","src","__webpack_public_path__","StyledBlock","schema","toggleBlockType","textblockTypeInputRule","tag","default","classes","group","parseDOM","priority","getAttrs","dom","toDOM","node","class","Node","view","editorView","cursorPos","timeout","handlers","name","updateOverlay","state","resolve","nodeDOM","left","right","top","width","bottom","coordsAtPos","document","createElement","className","style","cssText","getComputedStyle","pageYOffset","height","clearTimeout","setTimeout","posAtCoords","clientY","dragging","dropPoint","setCursor","scheduleRemoval","contains","domProps","modifiers","b","Array","offset","start","end","test","value","term","loop","states","next","nodesBetween","descendants","textBetween","cut","cutByIndex","replaceChild","addToStart","addToEnd","child","maybeChild","forEach","findDiffStart","findDiffEnd","findIndex","toString","toStringInner","addToSet","excludes","removeFromSet","isInSet","openEnd","removeBetween","openStart","parentOffset","resolveDepth","indexAfter","path","before","after","parent","posAtIndex","marks","marksAcross","sharedDepth","blockRange","inlineContent","sameParent","re","prototypeAccessors$1","validEnd","wrapCache","matchType","matchFragment","childCount","compatible","fillBefore","findWrapping","computeWrapping","match","via","edge","string","nodeTypes","inline","tokens","pop","unshift","eat","err","prop","rules","tags","styles","normalizeLists","some","parse","parseSlice","matchTag","matchStyle","ul","title","ol","solid","options","activeMarks","stashMarks","contentMatch","finish","exec","popFromStashMark","applyPending","allowsMarkType","pendingMarks","isOpen","nodes","open","find","needsBlock","addDOM","addTextNode","readStyles","addPendingMark","addElement","removePendingMark","insertNode","parser","findInText","ruleFromNode","findInside","addAll","sync","leafFallback","addElementByRule","enter","findAround","findAtPoint","findPlace","enterInner","closeExtra","currentPos","matchesContext","textblockFromContext","serializeFragment","serializeNode","contentDOM","serializeNodeAndMarks","serializeMark","space","high","prefix","__emitter","classPrefix","result","relevance","language","children","rootNode","stack","exports","settings","subset","secondBest","current","languageName","Emitter","tail","openNode","addText","closeNode","results","other","tagName","properties","defaultPrefix","directives","step","version","clientID","init","historyPreserveItems","TextSelection","_origins","origin","unconfirmed","id","icon","component","items","label","time","Date","curSelection","curSelectionFor","storedMarks","updated","meta","setSelection","setStoredMarks","ensureMarks","Mark","selection","addStoredMark","$head","removeStoredMark","setTime","replaceSelection","replaceSelectionWith","deleteSelection","insertText","setMeta","getMeta","scrollIntoView","fields","plugins","config","transactions","hasOwnProperty","prototype","props","spec","key","ref","colspan","rowspan","colwidth","w","cell","role","Decoration","DecorationSet","newRows","row","cells","j","outer","tr","fixTables","table","col","useDeprecatedLogic","rowNode","removeEventListener","setDragging","startX","startWidth","addEventListener","setHandle","attributes","handleDOMEvents","mousemove","mouseleave","mousedown","handleMouseDown","decorations","nodeViews","tableEditingKey","tableRole","table_row","table_cell","table_header","cache","problems","Se","$headCell","$anchorCell","isColSelection","replace","empty","replaceWith","forEachCell","nodeAfter","isRowSelection","anchor","cellMinWidth","appendChild","colgroup","activeHandle","createEvent","clientHeight","refDOM","scrollLeft","preventScroll","browser","box","inside","rect","nodeName","$anchor","focusNode","focusOffset","fromOffset","toOffset","anchorOffset","DOMParser","topNode","topMatch","preserveWhitespace","context","skip","ignore","now","sel","endA","endB","move","DOMSerializer","firstChild","implementation","createHTMLDocument","console","x","y","deco","raw","markCursor","abs","navigator","documentMode","dirty","matchesWidget","matchesMark","matchesNode","matchesHack","parseRule","stopEvent","destroy","pmViewDesc","posBeforeChild","localPosFromDOM","desc","nearestDesc","getDesc","posFromDOM","descAt","domFromPos","childNodes","parseRange","emptyChildAt","border","domAfterPos","ignoreMutation","markDirty","markParentsDirty","widget","textDOM","text","posAtStart","contentElement","outerDeco","innerDeco","updateChildren","createTextNode","protectLocalComposition","updateInner","updateOuterDeco","classList","add","draggable","remove","removeAttribute","nodeValue","selectNode","deselectNode","changed","preMatched","preMatchOffset","getPreMatch","destroyBetween","splice","destroyRest","syncToMarks","findNodeMatch","updateNextNode","lock","addNode","placeWidget","addTextblockHacks","thead","tbody","tfoot","caption","td","th","subtree","anchorNode","set","handleDOMChange","queue","flushingSoon","observer","MutationObserver","currentSelection","onCharData","oldValue","prevValue","onSelectionChange","bind","suppressingSelectionUpdates","flushSoon","forceFlush","flush","observe","connectSelection","stop","disconnect","disconnectSelection","ownerDocument","suppressSelectionUpdates","root","setCurSelection","ignoreSelectionChange","docView","registerMutation","updateState","previousSibling","nextSibling","typeOver","startDoc","event","flushed","allowDefault","mightDrag","addAttr","setUneditable","hasAttribute","domObserver","up","done","mouseDown","domChangeCount","side","valid","inclusiveStart","inclusiveEnd","copy","local","findInner","mapInner","addInner","concat","removeInner","span","forChild","locals","localsInner","members","dispatch","_root","trackWrites","mounted","editable","cursorWrapper","lastSelectedViewDesc","pluginViews","updatePluginViews","_props","update","updateStateInner","setProps","getSelection","scrollTop","someProp","destroyPluginViews","hasFocus","focus","getPrototypeOf","domAtPos","posAtDOM","endOfTextblock","textContent","parentNode","removeChild","dispatchEvent","argIndex","args","fmt","nextArg","slurpNumber","digits","escaped","leadingZero","precision","parseInt","arg","tmp","parseFloat","namespace","computed","$props","canSplit","ordered_list","bullet_list","list_item","order","defining","base","handleKeyDown","redo","historyState","newGroupDelay","eventCount","remapping","remaining","mirrorOffset","undone","prevRanges","prevTime","OrderedMap","self","newKey","addBefore","without","prepend","subtract","define","descriptor","ieStackRegExp","ffStackRegExp","stackDetails","scriptLocation","line","currentLocation","scripts","pageSource","inlineScriptSourceRegExp","RegExp","inlineScriptSource","popin","form","is","transformer","v","replaceParentNodeOfType","count","nodeType","findParentNodeOfType","newTr","replaceNodeAtPos","replaceSelectedNode","isNodeSelection","cloneTr","setTextSelection","nextSelection","isSelectableNode","shouldSelectNode","safeInsert","hasPosition","$insertPos","$pos","equalNodeType","position","canReplace","removeNodeAtPos","tableNodeTypes","roles","canInsert","PMNode","isEmptyParagraph","findTableClosestToPos","predicate","createCell","cellContent","cellType","isRectSelected","TableMap","selectedCells","transpose","convertTableNodeToArrayOfRows","rows","rowIndex","rowCells","seen","colIndex","cellPos","tableNode","convertArrayOfRowsToTableNode","rowsPM","oldCell","newCell","newTable","moveTableColumn","moveTableRow","moveRowInArrayOfRows","direction","indexesOrigin","indexesTarget","rowsExtracted","positionOffset","directionOverride","checkInvalidMovements","originIndex","errorMessage","targets","findParentNode","findParentNodeClosestToPos","findParentDomRef","hasParentNode","findPositionOfNodeBefore","maybeSelection","nodeBefore","findDomRefAtPos","flatten","descend","findChildren","findChildrenByType","findTable","isCellSelection","CellSelection","isTableSelected","getCellsInColumn","indexes","nodePos","getCellsInRow","select","findCellClosestToPos","selRect","cellsInFirstRow","cellsInLastRow","selectColumn","selectRow","cloneRowAt","tableNodes","rowPos","cloneRow","rowWidth","rowSpanCells","foundCells","removeColumnAt","columnIndex","removeColumn","removeRowAt","removeRow","removeTable","setCellAttrs","findCellRectClosestToPos","filterCellsInRow","getSelectionRangeInColumn","maybeEndIndex","maybeCells","firstSelectedColumnCells","firstRowCells","headCell","columnCells","getSelectionRangeInRow","firstSelectedRowCells","firstColumnCells","findParentNodeOfTypeClosestToPos","hasParentNodeOfType","findParentDomRefOfType","findSelectedNodeOfType","findTextNodes","findInlineNodes","findBlockNodes","findChildrenByAttr","findChildrenByMark","markType","getSelectionRect","isColumnSelected","isRowSelected","getCellsInTable","selectTable","emptyCell","addColumnAt","addColumn","moveRow","indexesOriginRow","indexesTargetRow","moveColumn","indexesOriginColumn","indexesTargetColumn","addRowAt","cloneRowIndex","clonePreviousRow","addRow","removeSelectedColumns","pmTableRect","assign","removeSelectedRows","removeColumnClosestToPos","removeRowClosestToPos","forEachCellInColumn","cellTransform","forEachCellInRow","createTable","rowsCount","colsCount","withHeaderRow","headerCells","tableRow","removeParentNodeOfType","removeSelectedNode","setParentNodeMarkup","selectParentNodeOfType","removeNodeBefore","ignoreKey","brokenModifierNames","8","9","10","12","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","44","45","46","59","61","91","92","106","107","108","109","110","111","144","145","160","161","162","163","164","165","173","186","187","188","189","190","191","192","219","220","221","222","229","shift","48","49","50","51","52","53","54","55","56","57","chrome","safari","gecko","mac","ie","markItem","link","startPos","endPos","nodeItem","types","typesAfter","innerType","rest","baseType","InputRule","matchStart","matchEnd","textStart","textEnd","excludedMarks","item","markStart","markEnd","handler","fragment","isLink","regexp","Plugin","transformPasted","range","grandParent","wrap","keepItem","itemType","nextType","isActive","parentList","isList","listType","getMarkRange","slot","on","href","validateWithConstraints","errors","constraints","constraintErrors","boundsNumber","constraint","GOOD_LEAF_SIZE","RopeSequence","sliceInner","forEachInner","forEachInvertedInner","values","Leaf","configurable","Append","leftLen","inner","menu","LinkMenu","styledBlock","StyledBlockMenu","image","ImageMenu","Heading","levels","Bold","Italic","OrderedList","BulletList","ListItem","ImageExtension","History","LinkExtension","StyledBlockExtension","word","PluginKey","rects","object","bias","singleRect","textRange","ComponentView","editor","extension","getPos","isNode","isMark","captureEvents","vm","$refs","Component","Vue","updateAttrs","propsData","updateComponentProps","originalSilent","newAttrs","transaction","mutation","dragHandle","isValidDragHandle","once","isCopy","isPaste","isCut","isDrag","selected","resolvedPos","$destroy","_callbacks","callbacks","callback","arguments","Extension","ExtensionManager","extensions","extensionKeymaps","filter","includes","nodeMarkKeymaps","excludedExtensions","allowedExtensions","extensionInputRules","nodeMarkInputRules","extensionPasteRules","nodeMarkPasteRules","commands","cb","handle","commandName","commandValue","Proxy","Doc","Paragraph","Text","Editor","editorProps","autoFocus","emptyDocument","dropCursor","parseOptions","onInit","onTransaction","onUpdate","onFocus","onBlur","onPaste","onDrop","setOptions","focused","keymaps","inputRules","pasteRules","setActiveNodesAndMarks","injectCSS","events","camelCase","emit","disableInputRules","disablePasteRules","Schema","EditorState","createDocument","keymap","Backspace","undoInputRule","baseKeymap","enableDropCursor","enableGapCursor","tabindex","blur","nodeFromJSON","htmlString","EditorView","handlePaste","handleDrop","dispatchTransaction","initNodeViews","nodeView","newState","getHTML","getJSON","emitUpdate","resolvedFrom","minMax","resolvedEnd","div","setContent","entries","markIsActive","activeMarkAttrs","getMarkAttrs","activeNodes","nodeIsActive","getNodeAttrs","plugin","handlePlugins","reconfigure","EditorContent","watch","$nextTick","Menu","mousedownHandler","handleClick","capture","blurHandler","preventHide","off","EditorMenuBar","MenuBar","$el","$scopedSlots","Menu$1","focusHandler","lastState","el","keepInBounds","sendUpdate","EditorMenuBubble","Boolean","MenuBubble","unregisterPlugin","Menu$2","resizeObserver","ResizeObserver","currentDom","editorBoundings","cursorBoundings","unobserve","EditorFloatingMenu","FloatingMenu","obj","deepFreeze","objects","joined","separator","backreferenceRe","numCaptures","ret","regexps","source","Number","global","mm","mode","response","cmode","keywordPattern","compileKeywords","langRe","expandOrCloneMode","compileMode","matchIndexes","regexes","matchAt","opts","countMatchGroups","terminators","matcherRe","lastIndex","matchData","multiRegexes","regexIndex","matcher","getMatcher","m2","considerAll","inherit","dependencyOnParent","variants","starts","keywordList","pair","keyword","compiledKeywords","scoreForKeyword","splitAndCompile","commonKeyword","COMMON_KEYWORDS","data","detectedLanguage","unknownLanguage","hljs","escapeHTML","hasValueOrEmptyAttribute","innerHTML","highlighted","VuePlugin","deepFreezeEs6","Response","utils","freeze","__proto__","mergeStreams","original","attr","processed","nodeStack","stream","render","emitsWrappingTags","HTMLRenderer","buffer","parseTree","TokenTree","kind","builder","TokenTreeEmitter","emitter","renderer","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","BACKSLASH_ESCAPE","begin","PHRASAL_WORDS_MODE","COMMENT","modeOptions","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","REGEXP_MODE","illegal","MODES","SHEBANG","beginShebang","resp","END_SAME_AS_BEGIN","nodeStream$1","nodeStream","mergeStreams$1","NO_MATCH","Symbol","HLJS","block","getLanguage","LANGUAGE_NOT_FOUND","shouldNotHighlight","fire","_highlight","matchText","buf","modeBuffer","cssClass","languages","continuations","highlightAuto","processKeywords","processSubLanguage","matched","startsWith","endOfMode","lexeme","resumeScanAtSamePosition","newMode","beforeCallbacks","processBuffer","matchPlusRemainder","codeToHighlight","endMode","startNewMode","list","lastMatch","iterations","md","processContinuations","beforeMatch","processedCount","processLexeme","illegalBy","msg","errorRaised","languageSubset","plaintext","sorted","currentLang","prevClassName","originalStream","resultNode","fixMarkup","buildClassName","relavance","userOptions","lang","languageDefinition","registerAliases","aliasList","aliases","ArrayProto","fixMarkupRe","PLAINTEXT_LANGUAGE","noHighlightRe","languageDetectRe","tabReplace","initHighlighting","blocks","vuePlugin","BuildVuePlugin","SAFE_MODE","highlight","Link","u","LinkBase","parseNodes","low","decoration","getDecorations","oldNodeName","oldState","newNodeName","oldNodes","newNodes","decorationSet","char","allowSpaces","startOfLine","$position","escapedChar","suffix","textFrom","textTo","query","appendText","suggestionClass","command","onEnter","onChange","onExit","onKeyDown","onFilter","Plugin$1","PluginKey$1","prev","decorationNode","clientWidth","decorationId","getState","editorState","Blockquote","toggleWrap","wrappingInputRule","toggleList","CodeBlock","setBlockType","CodeBlockHighlight","HighlightPlugin","HardBreak","chainCommands","exitCode","level","HorizontalRule","nodeInputRule","IMAGE_INPUT_REGEX","Image","alt","hasFiles","images","file","coordinates","reader","readerEvent","Enter","Tab","liftListItem","Mention","replaceText","mentionClass","getContent","SuggestionsPlugin","TableNodes","tableGroup","cellAttributes","background","Table","addColumnBefore","addColumnAfter","deleteColumn","addRowBefore","addRowAfter","deleteRow","deleteTable","toggleCellMerge","splitCell","mergeCells","toggleHeaderColumn","toggleHeaderRow","toggleHeaderCell","setCellAttr","goToNextCell","resizable","TableHeader","TableCell","TableRow","TodoItem","nested","template","contenteditable","TodoList","toggleMark","markInputRule","markPasteRule","Code","pasteRule","rel","Strike","Underline","Collaboration","getSendableSteps","debounce","sendable","fn","onSendable","receiveTransaction","Step","collab","Focus","editablePlugin","active","hasAnchor","undo","undoDepth","redoDepth","history","Placeholder","emptyEditorClass","emptyNodeClass","emptyNodeText","showOnlyCurrent","isEditorEmpty","isNodeEmpty","Search","replaceAll","clearSearch","mergedTextNodes","firstResult","lastOffset","nextIndex","currentTo","searchTerm","_updating","findClass","alwaysSearch","old","TrailingNode","notAfter","disabledNodes","insertNodeAtEnd","lastNode","nodeEqualsType","transform","handleTextInput","compositionend","$cursor","isInputRules","canJoin"],"mappings":"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","file":"core.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"core\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {\nreturn ","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\nimport {Slice} from \"prosemirror-model\"\n\nimport browser from \"./browser\"\nimport {captureKeyDown} from \"./capturekeys\"\nimport {readDOMChange} from \"./domchange\"\nimport {parseFromClipboard, serializeForClipboard} from \"./clipboard\"\nimport {DOMObserver} from \"./domobserver\"\nimport {selectionBetween, selectionToDOM, selectionFromDOM} from \"./selection\"\nimport {keyEvent} from \"./dom\"\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {}, editHandlers = {}\n\nexport function initInput(view) {\n  view.shiftKey = false\n  view.mouseDown = null\n  view.lastKeyCode = null\n  view.lastKeyCodeTime = 0\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"}\n  view.lastSelectionOrigin = null\n  view.lastSelectionTime = 0\n\n  view.lastIOSEnter = 0\n  view.lastIOSEnterFallbackTimeout = null\n\n  view.composing = false\n  view.composingTimeout = null\n  view.compositionNodes = []\n  view.compositionEndedAt = -2e8\n\n  view.domObserver = new DOMObserver(view, (from, to, typeOver, added) => readDOMChange(view, from, to, typeOver, added))\n  view.domObserver.start()\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0\n\n  view.eventHandlers = Object.create(null)\n  for (let event in handlers) {\n    let handler = handlers[event]\n    view.dom.addEventListener(event, view.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        handler(view, event)\n    })\n  }\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (browser.safari) view.dom.addEventListener(\"input\", () => null)\n\n  ensureListeners(view)\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin\n  view.lastSelectionTime = Date.now()\n}\n\nexport function destroyInput(view) {\n  view.domObserver.stop()\n  for (let type in view.eventHandlers)\n    view.dom.removeEventListener(type, view.eventHandlers[type])\n  clearTimeout(view.composingTimeout)\n  clearTimeout(view.lastIOSEnterFallbackTimeout)\n}\n\nexport function ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.eventHandlers[type])\n      view.dom.addEventListener(type, view.eventHandlers[type] = event => runCustomHandler(view, event))\n  })\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type]\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node = event.target; node != view.dom; node = node.parentNode)\n    if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      return false\n  return true\n}\n\nexport function dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    handlers[event.type](view, event)\n}\n\neditHandlers.keydown = (view, event) => {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey\n  if (inOrNearComposition(view, event)) return\n  view.domObserver.forceFlush()\n  view.lastKeyCode = event.keyCode\n  view.lastKeyCodeTime = Date.now()\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (browser.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    let now = Date.now()\n    view.lastIOSEnter = now\n    view.lastIOSEnterFallbackTimeout = setTimeout(() => {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))\n        view.lastIOSEnter = 0\n      }\n    }, 200)\n  } else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"key\")\n  }\n}\n\neditHandlers.keyup = (view, e) => {\n  if (e.keyCode == 16) view.shiftKey = false\n}\n\neditHandlers.keypress = (view, event) => {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || browser.mac && event.metaKey) return\n\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault()\n    return\n  }\n\n  let sel = view.state.selection\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode)\n    if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView())\n    event.preventDefault()\n  }\n}\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX, dy = click.y - event.clientY\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n      return true\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus()\n  let tr = view.state.tr.setSelection(selection)\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n  view.dispatch(tr)\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\")\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false\n  let sel = view.state.selection, selectedNode, selectAt\n  if (sel instanceof NodeSelection) selectedNode = sel.node\n\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        selectAt = $pos.before(sel.$from.depth)\n      else\n        selectAt = $pos.before(i)\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\")\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", f => f(view, pos, event))\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n    defaultTripleClick(view, inside)\n}\n\nfunction defaultTripleClick(view, inside) {\n  let doc = view.state.doc\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\")\n      return true\n    }\n    return false\n  }\n\n  let $pos = doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    let nodePos = $pos.before(i)\n    if (node.inlineContent)\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\")\n    else if (NodeSelection.isSelectable(node))\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\")\n    else\n      continue\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nconst selectNodeModifier = browser.mac ? \"metaKey\" : \"ctrlKey\"\n\nhandlers.mousedown = (view, event) => {\n  view.shiftKey = event.shiftKey\n  let flushed = forceDOMFlush(view)\n  let now = Date.now(), type = \"singleClick\"\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") type = \"doubleClick\"\n    else if (view.lastClick.type == \"doubleClick\") type = \"tripleClick\"\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type}\n\n  let pos = view.posAtCoords(eventCoords(event))\n  if (!pos) return\n\n  if (type == \"singleClick\")\n    view.mouseDown = new MouseDown(view, pos, event, flushed)\n  else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event))\n    event.preventDefault()\n  else\n    setSelectionOrigin(view, \"pointer\")\n}\n\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view\n    this.startDoc = view.state.doc\n    this.pos = pos\n    this.event = event\n    this.flushed = flushed\n    this.selectNode = event[selectNodeModifier]\n    this.allowDefault = event.shiftKey\n\n    let targetNode, targetPos\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside)\n      targetPos = pos.inside\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos)\n      targetNode = $pos.parent\n      targetPos = $pos.depth ? $pos.before() : 0\n    }\n\n    this.mightDrag = null\n\n    const target = flushed ? null : event.target\n    const targetDesc = target ? view.docView.nearestDesc(target, true) : null\n    this.target = targetDesc ? targetDesc.dom : null\n\n    if (targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n        view.state.selection instanceof NodeSelection && targetPos == view.state.selection.from)\n      this.mightDrag = {node: targetNode,\n                        pos: targetPos,\n                        addAttr: this.target && !this.target.draggable,\n                        setUneditable: this.target && browser.gecko && !this.target.hasAttribute(\"contentEditable\")}\n\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = true\n      if (this.mightDrag.setUneditable)\n        setTimeout(() => this.target.setAttribute(\"contentEditable\", \"false\"), 20)\n      this.view.domObserver.start()\n    }\n\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    setSelectionOrigin(view, \"pointer\")\n  }\n\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up)\n    this.view.root.removeEventListener(\"mousemove\", this.move)\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.removeAttribute(\"draggable\")\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\")\n      this.view.domObserver.start()\n    }\n    this.view.mouseDown = null\n  }\n\n  up(event) {\n    this.done()\n\n    if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n      return\n\n    let pos = this.pos\n    if (this.view.state.doc != this.startDoc) pos = this.view.posAtCoords(eventCoords(event))\n\n    if (this.allowDefault || !pos) {\n      setSelectionOrigin(this.view, \"pointer\")\n    } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n      event.preventDefault()\n    } else if (this.flushed ||\n               // Safari ignores clicks on draggable elements\n               (browser.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n               // Chrome will sometimes treat a node selection as a\n               // cursor, but still report that the node is selected\n               // when asked through getSelection. You'll then get a\n               // situation where clicking at the point where that\n               // (hidden) cursor is doesn't change the selection, and\n               // thus doesn't get a reaction from ProseMirror. This\n               // works around that.\n               (browser.chrome && !(this.view.state.selection instanceof TextSelection) &&\n                (pos.pos == this.view.state.selection.from || pos.pos == this.view.state.selection.to))) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\")\n      event.preventDefault()\n    } else {\n      setSelectionOrigin(this.view, \"pointer\")\n    }\n  }\n\n  move(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                               Math.abs(this.event.y - event.clientY) > 4))\n      this.allowDefault = true\n    setSelectionOrigin(this.view, \"pointer\")\n  }\n}\n\nhandlers.touchdown = view => {\n  forceDOMFlush(view)\n  setSelectionOrigin(view, \"pointer\")\n}\n\nhandlers.contextmenu = view => forceDOMFlush(view)\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) return true\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (browser.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = browser.android ? 5000 : -1\n\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  if (!view.composing) {\n    view.domObserver.flush()\n    let {state} = view, $pos = state.selection.$from\n    if (state.selection.empty &&\n        (state.storedMarks || (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks()\n      endComposition(view, true)\n      view.markCursor = null\n    } else {\n      endComposition(view)\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (browser.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        let sel = view.root.getSelection()\n        for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1]\n          if (!before) break\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length)\n            break\n          } else {\n            node = before\n            offset = -1\n          }\n        }\n      }\n    }\n    view.composing = true\n  }\n  scheduleComposeEnd(view, timeoutComposition)\n}\n\neditHandlers.compositionend = (view, event) => {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = event.timeStamp\n    scheduleComposeEnd(view, 20)\n  }\n}\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout)\n  if (delay > -1) view.composingTimeout = setTimeout(() => endComposition(view), delay)\n}\n\nexport function clearComposition(view) {\n  view.composing = false\n  while (view.compositionNodes.length > 0) view.compositionNodes.pop().markParentsDirty()\n}\n\nexport function endComposition(view, forceUpdate) {\n  view.domObserver.forceFlush()\n  clearComposition(view)\n  if (forceUpdate || view.docView.dirty) {\n    let sel = selectionFromDOM(view)\n    if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n    else view.updateState(view.state)\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) return\n  let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"))\n  wrap.appendChild(dom)\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  let sel = getSelection(), range = document.createRange()\n  range.selectNodeContents(dom)\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur()\n  sel.removeAllRanges()\n  sel.addRange(range)\n  setTimeout(() => {\n    if (wrap.parentNode) wrap.parentNode.removeChild(wrap)\n    view.focus()\n  }, 50)\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n      (browser.ios && browser.webkit_version < 604)\n\nhandlers.copy = editHandlers.cut = (view, e) => {\n  let sel = view.state.selection, cut = e.type == \"cut\"\n  if (sel.empty) return\n\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let slice = sel.content(), {dom, text} = serializeForClipboard(view, slice)\n  if (data) {\n    e.preventDefault()\n    data.clearData()\n    data.setData(\"text/html\", dom.innerHTML)\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, dom)\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"))\n}\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) return\n  let plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code\n  let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"))\n  if (!plainText) target.contentEditable = \"true\"\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    if (target.parentNode) target.parentNode.removeChild(target)\n    if (plainText) doPaste(view, target.value, null, e)\n    else doPaste(view, target.textContent, target.innerHTML, e)\n  }, 50)\n}\n\nfunction doPaste(view, text, html, e) {\n  let slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from)\n  if (view.someProp(\"handlePaste\", f => f(view, e, slice || Slice.empty)) || !slice) return\n\n  let singleNode = sliceSingleNode(slice)\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice)\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"))\n}\n\neditHandlers.paste = (view, e) => {\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let html = data && data.getData(\"text/html\"), text = data && data.getData(\"text/plain\")\n  if (data && (html || text || data.files.length)) {\n    doPaste(view, text, html, e)\n    e.preventDefault()\n  } else {\n    capturePaste(view, e)\n  }\n}\n\nclass Dragging {\n  constructor(slice, move) {\n    this.slice = slice\n    this.move = move\n  }\n}\n\nconst dragCopyModifier = browser.mac ? \"altKey\" : \"ctrlKey\"\n\nhandlers.dragstart = (view, e) => {\n  let mouseDown = view.mouseDown\n  if (mouseDown) mouseDown.done()\n  if (!e.dataTransfer) return\n\n  let sel = view.state.selection\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(e))\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) {\n    // In selection\n  } else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)))\n  } else if (e.target && e.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(e.target, true)\n    if (!desc || !desc.node.type.spec.draggable || desc == view.docView) return\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)))\n  }\n  let slice = view.state.selection.content(), {dom, text} = serializeForClipboard(view, slice)\n  e.dataTransfer.clearData()\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML)\n  if (!brokenClipboardAPI) e.dataTransfer.setData(\"text/plain\", text)\n  view.dragging = new Dragging(slice, !e[dragCopyModifier])\n}\n\nhandlers.dragend = view => {\n  window.setTimeout(() => view.dragging = null, 50)\n}\n\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault()\n\neditHandlers.drop = (view, e) => {\n  let dragging = view.dragging\n  view.dragging = null\n\n  if (!e.dataTransfer) return\n\n  let eventPos = view.posAtCoords(eventCoords(e))\n  if (!eventPos) return\n  let $mouse = view.state.doc.resolve(eventPos.pos)\n  if (!$mouse) return\n  let slice = dragging && dragging.slice ||\n      parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                         brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse)\n  let move = dragging && !e[dragCopyModifier]\n  if (view.someProp(\"handleDrop\", f => f(view, e, slice || Slice.empty, move))) {\n    e.preventDefault()\n    return\n  }\n  if (!slice) return\n\n  e.preventDefault()\n  let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos\n  if (insertPos == null) insertPos = $mouse.pos\n\n  let tr = view.state.tr\n  if (move) tr.deleteSelection()\n\n  let pos = tr.mapping.map(insertPos)\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1\n  let beforeInsert = tr.doc\n  if (isNode)\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild)\n  else\n    tr.replaceRange(pos, pos, slice)\n  if (tr.doc.eq(beforeInsert)) return\n\n  let $pos = tr.doc.resolve(pos)\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos))\n  } else {\n    let end = tr.mapping.map(insertPos)\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo)\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)))\n  }\n  view.focus()\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"))\n}\n\nhandlers.focus = view => {\n  if (!view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.add(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.focused = true\n    setTimeout(() => {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        selectionToDOM(view)\n    }, 20)\n  }\n}\n\nhandlers.blur = view => {\n  if (view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.remove(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.domObserver.currentSelection.set({})\n    view.focused = false\n  }\n}\n\nhandlers.beforeinput = (view, event) => {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (browser.chrome && browser.android && event.inputType == \"deleteContentBackward\") {\n    let {domChangeCount} = view\n    setTimeout(() => {\n      if (view.domChangeCount != domChangeCount) return // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur()\n      view.focus()\n      if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) return\n      let {$cursor} = view.state.selection\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView())\n    }, 50)\n  }\n}\n\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop]\n","<template>\r\n    <div>\r\n        <tooltip\r\n            v-for=\"tooltip in tooltips\"\r\n            v-bind=\"tooltip\"\r\n            :key=\"tooltip.id\"\r\n        >\r\n            {{ tooltip.content }}\r\n        </tooltip>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Tooltip from './components/Tooltip'\r\n\r\nexport default {\r\n    name: 'TooltipManager',\r\n    components: { Tooltip },\r\n    data: () => ({\r\n        screen: {\r\n            width: 0,\r\n            scroll: 0\r\n        }\r\n    }),\r\n    computed: {\r\n        tooltips () {\r\n            return this.$store.state.tooltips.items.filter(t => t.active).map(tooltip => ({\r\n                ...tooltip,\r\n                style: this.getPosition(tooltip.position)\r\n            }))\r\n        }\r\n    },\r\n    mounted () {\r\n        this.updateScreen()\r\n        window.addEventListener('scroll', () => this.updateScreen())\r\n    },\r\n    methods: {\r\n        updateScreen () {\r\n            this.$set(this.$data.screen, {\r\n                width: window.innerWidth,\r\n                scroll: window.pageYOffset || document.documentElement.scrollTop\r\n            })\r\n        },\r\n        getPosition (tooltip) {\r\n            let position = { top: 0, left: 0 }\r\n\r\n            position.top = Math.round(tooltip.top + tooltip.height)\r\n            position.left = Math.round(tooltip.left)\r\n\r\n            return { top: position.top + 'px', left: position.left + 'px' }\r\n        }\r\n    }\r\n}\r\n</script>","export default {\r\n    methods: {\r\n        randomBetween: (min, max) => {\r\n            return Math.floor(Math.random() * (max - min + 1) + min)\r\n        },\r\n        randomizeArray (array) {\r\n            let currentIndex = array.length, temporaryValue, randomIndex\r\n    \r\n            while (0 !== currentIndex) {\r\n              randomIndex = Math.floor(Math.random() * currentIndex)\r\n              currentIndex -= 1\r\n    \r\n              temporaryValue = array[currentIndex]\r\n              array[currentIndex] = array[randomIndex]\r\n              array[randomIndex] = temporaryValue\r\n            }\r\n          \r\n            return array\r\n        },\r\n        tooltipOpen (content, e, params = {}) {\r\n            this.$store.commit('tooltips/open', {\r\n                content, element: e.target, ...params\r\n            })\r\n        },\r\n        tooltipClose () {\r\n            this.$store.commit('tooltips/close')\r\n        }\r\n    }\r\n}","import {Fragment, Slice} from \"prosemirror-model\"\nimport {Step, StepResult} from \"./step\"\n\nfunction mapFragment(fragment, f, parent) {\n  let mapped = []\n  for (let i = 0; i < fragment.childCount; i++) {\n    let child = fragment.child(i)\n    if (child.content.size) child = child.copy(mapFragment(child.content, f, child))\n    if (child.isInline) child = f(child, parent, i)\n    mapped.push(child)\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nexport class AddMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    this.from = from\n    this.to = to\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from)\n    let parent = $from.node($from.sharedDepth(this.to))\n    let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n      if (!parent.type.allowsMarkType(this.mark.type)) return node\n      return node.mark(this.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\")\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"addMark\", AddMarkStep)\n\n// ::- Remove a mark from all inline content between two positions.\nexport class RemoveMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    this.from = from\n    this.to = to\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to)\n    let slice = new Slice(mapFragment(oldSlice.content, node => {\n      return node.mark(this.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\")\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"removeMark\", RemoveMarkStep)\n","import {Slice} from \"prosemirror-model\"\n\nimport {Step, StepResult} from \"./step\"\nimport {StepMap} from \"./map\"\n\n// ::- Replace a part of the document with a slice of new content.\nexport class ReplaceStep extends Step {\n  // :: (number, number, Slice, ?bool)\n  // The given `slice` should fit the 'gap' between `from` and\n  // `to`—the depths must line up, and the surrounding nodes must be\n  // able to be joined with the open sides of the slice. When\n  // `structure` is true, the step will fail if the content between\n  // from and to is not just a sequence of closing and then opening\n  // tokens (this is to guard against rebased replace steps\n  // overwriting something they weren't supposed to).\n  constructor(from, to, slice, structure) {\n    super()\n    this.from = from\n    this.to = to\n    this.slice = slice\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      return StepResult.fail(\"Structure replace would overwrite content\")\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  }\n\n  invert(doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted) return null\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  }\n\n  merge(other) {\n    if (!(other instanceof ReplaceStep) || other.structure != this.structure) return null\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd)\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd)\n      return new ReplaceStep(other.from, this.to, slice, this.structure)\n    } else {\n      return null\n    }\n  }\n\n  toJSON() {\n    let json = {stepType: \"replace\", from: this.from, to: this.to}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\")\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  }\n}\n\nStep.jsonID(\"replace\", ReplaceStep)\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nexport class ReplaceAroundStep extends Step {\n  // :: (number, number, number, number, Slice, number, ?bool)\n  // Create a replace-around step with the given range and gap.\n  // `insert` should be the point in the slice into which the content\n  // of the gap should be moved. `structure` has the same meaning as\n  // it has in the [`ReplaceStep`](#transform.ReplaceStep) class.\n  constructor(from, to, gapFrom, gapTo, slice, insert, structure) {\n    super()\n    this.from = from\n    this.to = to\n    this.gapFrom = gapFrom\n    this.gapTo = gapTo\n    this.slice = slice\n    this.insert = insert\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      return StepResult.fail(\"Structure gap-replace would overwrite content\")\n\n    let gap = doc.slice(this.gapFrom, this.gapTo)\n    if (gap.openStart || gap.openEnd)\n      return StepResult.fail(\"Gap is not a flat range\")\n    let inserted = this.slice.insertAt(this.insert, gap.content)\n    if (!inserted) return StepResult.fail(\"Content does not fit in gap\")\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  }\n\n  invert(doc) {\n    let gap = this.gapTo - this.gapFrom\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1)\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) return null\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  }\n\n  toJSON() {\n    let json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\")\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  }\n}\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep)\n\nfunction contentBetween(doc, from, to) {\n  let $from = doc.resolve(from), dist = to - from, depth = $from.depth\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--\n    dist--\n  }\n  if (dist > 0) {\n    let next = $from.node(depth).maybeChild($from.indexAfter(depth))\n    while (dist > 0) {\n      if (!next || next.isLeaf) return true\n      next = next.firstChild\n      dist--\n    }\n  }\n  return false\n}\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fae3\");\n","// This file defines a number of table-related commands.\n\nimport {TextSelection} from \"prosemirror-state\"\nimport {Fragment} from \"prosemirror-model\"\n\nimport {Rect, TableMap} from \"./tablemap\"\nimport {CellSelection} from \"./cellselection\"\nimport {\n  addColSpan,\n  cellAround,\n  cellWrapping,\n  columnIsHeader,\n  isInTable,\n  moveCellForward,\n  removeColSpan,\n  selectionCell,\n  setAttr\n} from \"./util\"\nimport {tableNodeTypes} from \"./schema\"\n\n// Helper to get the selected rectangle in a table, if any. Adds table\n// map, table node, and table start offset to the object for\n// convenience.\nexport function selectedRect(state) {\n  let sel = state.selection, $pos = selectionCell(state)\n  let table = $pos.node(-1), tableStart = $pos.start(-1), map = TableMap.get(table)\n  let rect\n  if (sel instanceof CellSelection)\n    rect = map.rectBetween(sel.$anchorCell.pos - tableStart, sel.$headCell.pos - tableStart)\n  else\n    rect = map.findCell($pos.pos - tableStart)\n  rect.tableStart = tableStart\n  rect.map = map\n  rect.table = table\n  return rect\n}\n\n// Add a column at the given position in a table.\nexport function addColumn(tr, {map, tableStart, table}, col) {\n  let refColumn = col > 0 ? -1 : 0\n  if (columnIsHeader(map, table, col + refColumn))\n    refColumn = col == 0 || col == map.width ? null : 0\n\n  for (let row = 0; row < map.height; row++) {\n    let index = row * map.width + col\n    // If this position falls inside a col-spanning cell\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      let pos = map.map[index], cell = table.nodeAt(pos)\n      tr.setNodeMarkup(tr.mapping.map(tableStart + pos), null,\n                       addColSpan(cell.attrs, col - map.colCount(pos)))\n      // Skip ahead if rowspan > 1\n      row += cell.attrs.rowspan - 1\n    } else {\n      let type = refColumn == null ? tableNodeTypes(table.type.schema).cell\n          : table.nodeAt(map.map[index + refColumn]).type\n      let pos = map.positionAt(row, col, table)\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill())\n    }\n  }\n  return tr\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command to add a column before the column with the selection.\nexport function addColumnBefore(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addColumn(state.tr, rect, rect.left))\n  }\n  return true\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command to add a column after the column with the selection.\nexport function addColumnAfter(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addColumn(state.tr, rect, rect.right))\n  }\n  return true\n}\n\nexport function removeColumn(tr, {map, table, tableStart}, col) {\n  let mapStart = tr.mapping.maps.length\n  for (let row = 0; row < map.height;) {\n    let index = row * map.width + col, pos = map.map[index], cell = table.nodeAt(pos)\n    // If this is part of a col-spanning cell\n    if ((col > 0 && map.map[index - 1] == pos) || (col < map.width - 1 && map.map[index + 1] == pos)) {\n      tr.setNodeMarkup(tr.mapping.slice(mapStart).map(tableStart + pos), null,\n                       removeColSpan(cell.attrs, col - map.colCount(pos)))\n    } else {\n      let start = tr.mapping.slice(mapStart).map(tableStart + pos)\n      tr.delete(start, start + cell.nodeSize)\n    }\n    row += cell.attrs.rowspan\n  }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command function that removes the selected columns from a table.\nexport function deleteColumn(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state), tr = state.tr\n    if (rect.left == 0 && rect.right == rect.map.width) return false\n    for (let i = rect.right - 1;; i--) {\n      removeColumn(tr, rect, i)\n      if (i == rect.left) break\n      rect.table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc\n      rect.map = TableMap.get(rect.table)\n    }\n    dispatch(tr)\n  }\n  return true\n}\n\nexport function rowIsHeader(map, table, row) {\n  let headerCell = tableNodeTypes(table.type.schema).header_cell\n  for (let col = 0; col < map.width; col++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false\n  return true\n}\n\nexport function addRow(tr, {map, tableStart, table}, row) {\n  let rowPos = tableStart\n  for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize\n  let cells = [], refRow = row > 0 ? -1 : 0\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    // Covered by a rowspan cell\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      let pos = map.map[index], attrs = table.nodeAt(pos).attrs\n      tr.setNodeMarkup(tableStart + pos, null, setAttr(attrs, \"rowspan\", attrs.rowspan + 1))\n      col += attrs.colspan - 1\n    } else {\n      let type = refRow == null ? tableNodeTypes(table.type.schema).cell\n          : table.nodeAt(map.map[index + refRow * map.width]).type\n      cells.push(type.createAndFill())\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells))\n  return tr\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Add a table row before the selection.\nexport function addRowBefore(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addRow(state.tr, rect, rect.top))\n  }\n  return true\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Add a table row after the selection.\nexport function addRowAfter(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addRow(state.tr, rect, rect.bottom))\n  }\n  return true\n}\n\nexport function removeRow(tr, {map, table, tableStart}, row) {\n  let rowPos = 0\n  for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize\n  let nextRow = rowPos + table.child(row).nodeSize\n\n  let mapFrom = tr.mapping.maps.length\n  tr.delete(rowPos + tableStart, nextRow + tableStart)\n\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    let pos = map.map[index]\n    if (row > 0 && pos == map.map[index - map.width]) {\n      // If this cell starts in the row above, simply reduce its rowspan\n      let attrs = table.nodeAt(pos).attrs\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, setAttr(attrs, \"rowspan\", attrs.rowspan - 1))\n      col += attrs.colspan - 1\n    } else if (row < map.width && pos == map.map[index + map.width]) {\n      // Else, if it continues in the row below, it has to be moved down\n      let cell = table.nodeAt(pos)\n      let copy = cell.type.create(setAttr(cell.attrs, \"rowspan\", cell.attrs.rowspan - 1), cell.content)\n      let newPos = map.positionAt(row + 1, col, table)\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy)\n      col += cell.attrs.colspan - 1\n    }\n  }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Remove the selected rows from a table.\nexport function deleteRow(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state), tr = state.tr\n    if (rect.top == 0 && rect.bottom == rect.map.height) return false\n    for (let i = rect.bottom - 1;; i--) {\n      removeRow(tr, rect, i)\n      if (i == rect.top) break\n      rect.table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc\n      rect.map = TableMap.get(rect.table)\n    }\n    dispatch(tr)\n  }\n  return true\n}\n\nfunction isEmpty(cell) {\n  let c = cell.content\n  return c.childCount == 1 && c.firstChild.isTextblock && c.firstChild.childCount == 0\n}\n\nfunction cellsOverlapRectangle({width, height, map}, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1)\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] ||\n        rect.right < width && map[indexRight] == map[indexRight + 1]) return true\n    indexLeft += width; indexRight += width\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] ||\n        rect.bottom < height && map[indexBottom] == map[indexBottom + width]) return true\n    indexTop++; indexBottom++\n  }\n  return false\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Merge the selected cells into a single cell. Only available when\n// the selected cells' outline forms a rectangle.\nexport function mergeCells(state, dispatch) {\n  let sel = state.selection\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos) return false\n  let rect = selectedRect(state), {map} = rect\n  if (cellsOverlapRectangle(map, rect)) return false\n  if (dispatch) {\n    let tr = state.tr, seen = {}, content = Fragment.empty, mergedPos, mergedCell\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        let cellPos = map.map[row * map.width + col], cell = rect.table.nodeAt(cellPos)\n        if (seen[cellPos]) continue\n        seen[cellPos] = true\n        if (mergedPos == null) {\n          mergedPos = cellPos\n          mergedCell = cell\n        } else {\n          if (!isEmpty(cell)) content = content.append(cell.content)\n          let mapped = tr.mapping.map(cellPos + rect.tableStart)\n          tr.delete(mapped, mapped + cell.nodeSize)\n        }\n      }\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null,\n                     setAttr(addColSpan(mergedCell.attrs, mergedCell.attrs.colspan, (rect.right - rect.left) - mergedCell.attrs.colspan),\n                             \"rowspan\", rect.bottom - rect.top))\n    if (content.size) {\n      let end = mergedPos + 1 + mergedCell.content.size\n      let start = isEmpty(mergedCell) ? mergedPos + 1 : end\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content)\n    }\n    tr.setSelection(new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart)))\n    dispatch(tr)\n  }\n  return true\n}\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Split a selected cell, whose rowpan or colspan is greater than one,\n// into smaller cells. Use the first cell type for the new cells.\nexport function splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({\n    node,\n  }) => {\n    return nodeTypes[node.type.spec.tableRole]\n  })(state, dispatch)\n}\n\n// :: (getCellType: ({ row: number, col: number, node: Node}) → NodeType) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Split a selected cell, whose rowpan or colspan is greater than one,\n// into smaller cells with the cell type (th, td) returned by getType function.\nexport function splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    let sel = state.selection\n    let cellNode, cellPos\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from)\n      if (!cellNode) return false\n      cellPos = cellAround(sel.$from).pos\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos) return false\n      cellNode = sel.$anchorCell.nodeAfter\n      cellPos = sel.$anchorCell.pos\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {return false}\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs, attrs = [], colwidth = baseAttrs.colwidth\n      if (baseAttrs.rowspan > 1) baseAttrs = setAttr(baseAttrs, \"rowspan\", 1)\n      if (baseAttrs.colspan > 1) baseAttrs = setAttr(baseAttrs, \"colspan\", 1)\n      let rect = selectedRect(state), tr = state.tr\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(colwidth ? setAttr(baseAttrs, \"colwidth\", colwidth && colwidth[i] ? [colwidth[i]] : null) : baseAttrs)\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table)\n        if (row == rect.top) pos += cellNode.nodeSize\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top) continue\n          tr.insert(lastCell = tr.mapping.map(pos + rect.tableStart, 1), getCellType({ node: cellNode, row, col}).createAndFill(attrs[i]))\n        }\n      }\n      tr.setNodeMarkup(cellPos, getCellType({ node: cellNode, row: rect.top, col: rect.left}), attrs[0])\n      if (sel instanceof CellSelection)\n        tr.setSelection(new CellSelection(tr.doc.resolve(sel.$anchorCell.pos),\n                                          lastCell && tr.doc.resolve(lastCell)))\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\n// :: (string, any) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that sets the given attribute to the given value,\n// and is only available when the currently selected cell doesn't\n// already have that attribute set to that value.\nexport function setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    let $cell = selectionCell(state)\n    if ($cell.nodeAfter.attrs[name] === value) return false\n    if (dispatch) {\n      let tr = state.tr\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, setAttr(node.attrs, name, value))\n        })\n      else\n        tr.setNodeMarkup($cell.pos, null, setAttr($cell.nodeAfter.attrs, name, value))\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    if (dispatch) {\n      let types = tableNodeTypes(state.schema)\n      let rect = selectedRect(state), tr = state.tr\n      let cells = rect.map.cellsInRect(type == \"column\" ? new Rect(rect.left, 0, rect.right, rect.map.height) :\n                                       type == \"row\" ? new Rect(0, rect.top, rect.map.width, rect.bottom) : rect)\n      let nodes = cells.map(pos => rect.table.nodeAt(pos))\n      for (let i = 0; i < cells.length; i++) // Remove headers, if any\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(rect.tableStart + cells[i], types.cell, nodes[i].attrs)\n      if (tr.steps.length == 0) for (let i = 0; i < cells.length; i++) // No headers removed, add instead\n        tr.setNodeMarkup(rect.tableStart + cells[i], types.header_cell, nodes[i].attrs)\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\nfunction isHeaderEnabledByType(type, rect, types) {\n  // Get cell positions for first row or first column\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1,\n  })\n\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i])\n    if (cell && cell.type !== types.header_cell) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// :: (string, ?{ useDeprecatedLogic: bool }) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles between row/column header and normal cells (Only applies to first row/column).\n// For deprecated behavior pass `useDeprecatedLogic` in options with true.\nexport function toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false }\n\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type)\n\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    if (dispatch) {\n      let types = tableNodeTypes(state.schema)\n      let rect = selectedRect(state), tr = state.tr\n\n      let isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types)\n      let isHeaderColumnEnabled = isHeaderEnabledByType(\"column\", rect, types)\n\n      let isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled :\n                            type === \"row\"    ? isHeaderColumnEnabled : false\n\n      let selectionStartsAt = isHeaderEnabled ? 1 : 0\n\n      let cellsRect = type == \"column\" ? new Rect(0, selectionStartsAt, 1, rect.map.height) :\n                      type == \"row\" ? new Rect(selectionStartsAt, 0, rect.map.width, 1) : rect\n\n      let newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell :\n                    type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell\n\n      rect.map.cellsInRect(cellsRect).forEach(relativeCellPos => {\n        const cellPos = relativeCellPos + rect.tableStart\n        const cell = tr.doc.nodeAt(cellPos)\n\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs)\n        }\n      })\n\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected row contains header cells.\nexport let toggleHeaderRow = toggleHeader(\"row\", { useDeprecatedLogic: true })\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected column contains header cells.\nexport let toggleHeaderColumn = toggleHeader(\"column\", { useDeprecatedLogic: true })\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected cells are header cells.\nexport let toggleHeaderCell = toggleHeader(\"cell\", { useDeprecatedLogic: true })\n\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    let before = $cell.nodeBefore\n    if (before) return $cell.pos - before.nodeSize\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      let rowNode = $cell.node(-1).child(row)\n      if (rowNode.childCount) return rowEnd - 1 - rowNode.lastChild.nodeSize\n      rowEnd -= rowNode.nodeSize\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) return $cell.pos + $cell.nodeAfter.nodeSize\n    let table = $cell.node(-1)\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      let rowNode = table.child(row)\n      if (rowNode.childCount) return rowStart + 1\n      rowStart += rowNode.nodeSize\n    }\n  }\n}\n\n// :: (number) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command for selecting the next (direction=1) or previous\n// (direction=-1) cell in a table.\nexport function goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    let cell = findNextCell(selectionCell(state), direction)\n    if (cell == null) return\n    if (dispatch) {\n      let $cell = state.doc.resolve(cell)\n      dispatch(state.tr.setSelection(TextSelection.between($cell, moveCellForward($cell))).scrollIntoView())\n    }\n    return true\n  }\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Deletes the table around the selection, if any.\nexport function deleteTable(state, dispatch) {\n  let $pos = state.selection.$anchor\n  for (let d = $pos.depth; d > 0; d--) {\n    let node = $pos.node(d)\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch) dispatch(state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView())\n      return true\n    }\n  }\n  return false\n}\n","<template>\r\n    <div class=\"PaperEditor\">\r\n        <editor-menu-bar :editor=\"editor\" v-slot=\"{ commands, isActive, getMarkAttrs, getNodeAttrs }\">\r\n            <div>\r\n                <div class=\"PaperEditor_menu\">\r\n                    <div class=\"PaperEditor_menuGroup\" v-for=\"(group, i) in options\" :key=\"i\">\r\n                        <component\r\n                            v-for=\"option in group\"\r\n                            :is=\"option.component || 'paper-button'\"\r\n                            :is-active=\"isActive[option.id] ? isActive[option.id]() : false\"\r\n                            :icon=\"option.icon\"\r\n                            :current-node=\"option.isNode ? getNodeAttrs(option.id) : (option.isMark ? getMarkAttrs(option.id) : null)\"\r\n                            v-bind=\"option.attrs ? option.attrs : {}\"\r\n\r\n                            @click=\"option.popin ? state.current = option.id : commands[option.id]()\"\r\n                            @input=\"(v) => commands[option.id](v) || undefined\"\r\n\r\n                            :key=\"option.id\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <template v-for=\"group in options\">\r\n                    <paper-popin\r\n                        v-for=\"(option, i) in group.filter(o => o.popin)\"\r\n                        v-bind=\"option.popin\"\r\n                        :is-active=\"option.id == state.current\"\r\n                        :current-node=\"option.isNode ? getNodeAttrs(option.id) : (option.isMark ? getMarkAttrs(option.id) : null)\"\r\n                        @close=\"state.current = ''\"\r\n                        @input=\"(v) => commands[option.id](v)\"\r\n                        :key=\"i\"\r\n                    />\r\n                </template>\r\n            </div>\r\n        </editor-menu-bar>\r\n\r\n        <editor-view class=\"PaperEditor_view\" :editor=\"editor\" :editable=\"true\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Editor, EditorMenuBar } from 'tiptap'\r\nimport EditorView from './view'\r\nimport PaperButton from './components/paper-button'\r\nimport PaperSelect from './components/paper-select'\r\nimport PaperPopin from './components/paper-popin'\r\nimport Extensions from './plugins/index.js'\r\n\r\nexport default {\r\n    name: 'PaperEditor',\r\n    components: { EditorView, EditorMenuBar, PaperButton, PaperSelect, PaperPopin },\r\n    props: {\r\n        value: { type: String, default: 'Hello' },\r\n        config: { type: Object, default: () => ({}) }\r\n    },\r\n    data: () => ({\r\n        state: {\r\n            current: 'styleSelect'\r\n        },\r\n        editor: null,\r\n        options: []\r\n    }),\r\n    async mounted () {\r\n        this.$data.editor = new Editor({\r\n            extensions: Extensions.plugins(),\r\n            content: this.$props.value,\r\n        })\r\n\r\n        this.$data.options = [\r\n            [\r\n                { id: 'undo', label: 'Annuler', icon: 'undo-alt' },\r\n                { id: 'redo', label: 'Rétablir', icon: 'redo-alt' }\r\n            ], [  \r\n                Extensions.menu.styledBlock(this.$props.config['styledBlock'] || undefined)\r\n            ], [\r\n                { id: 'bold', label: 'Gras', icon: 'bold' },\r\n                { id: 'italic', label: 'Italique', icon: 'italic' },\r\n            ], [\r\n                Extensions.menu.link(this.$props.config['link'] || undefined),\r\n                Extensions.menu.image(this.$props.config['styledBlock'] || undefined),\r\n                { id: 'bullet_list', label: 'Liste', icon: 'list-ul' },\r\n                { id: 'ordered_list', label: 'Liste numérotée', icon: 'list-ol' },\r\n            ]\r\n        ]\r\n\r\n        this.$data.editor.on('update', () => this.onUpdate())\r\n        setTimeout(() => this.onUpdate(), 100)\r\n    },\r\n    methods: {\r\n        onUpdate () {\r\n            this.$emit('input', this.$data.editor.getHTML())\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperReveal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperReveal.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"PaperEditor_button\",class:{ 'is-active': _vm.isActive },attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('click')}}},[(_vm.icon)?_c('i',{staticClass:\"fal\",class:[(\"fa-\" + _vm.icon)]}):_vm._e(),(_vm.$slots['list'])?_c('div',{staticClass:\"PaperEditor_buttonList\"},[_vm._t(\"list\")],2):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","'use strict'\n\nvar formatter = require('format')\n\nvar fault = create(Error)\n\nmodule.exports = fault\n\nfault.eval = create(EvalError)\nfault.range = create(RangeError)\nfault.reference = create(ReferenceError)\nfault.syntax = create(SyntaxError)\nfault.type = create(TypeError)\nfault.uri = create(URIError)\n\nfault.create = create\n\n// Create a new `EConstructor`, with the formatted `format` as a first argument.\nfunction create(EConstructor) {\n  FormattedError.displayName = EConstructor.displayName || EConstructor.name\n\n  return FormattedError\n\n  function FormattedError(format) {\n    if (format) {\n      format = formatter.apply(null, arguments)\n    }\n\n    return new EConstructor(format)\n  }\n}\n","<template>\r\n    <div\r\n        class=\"PaperEditor_popin\"\r\n    >\r\n        <popin-base\r\n            :is-active=\"isActive\"\r\n            v-bind=\"attrs\"\r\n            @close=\"$emit('close')\"\r\n        >\r\n            <template slot=\"content\">\r\n                <div class=\"p-30\">\r\n                    {{ content }}\r\n\r\n                    <div v-for=\"(input, id) in form\" class=\"mv-20\" :key=\"id\">\r\n                        <component\r\n                            :is=\"input.is ? input.is : 'input-base'\"\r\n                            v-bind=\"input\"\r\n                            :value=\"input.transformer && input.transformer.get ? input.transformer.get(value[id]) : value[id]\"\r\n                            @input=\"(v) => value[id] = v\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </template>\r\n\r\n            <template slot=\"footer\">\r\n                <div></div>\r\n\r\n                <button-base @click=\"onInput\">\r\n                    Valider\r\n                </button-base>\r\n            </template>\r\n        </popin-base>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport PopinBase from '../../PopinBase'\r\nimport InputBase from '../../InputBase'\r\nimport InputMedia from '../../InputMedia'\r\nimport ToggleBase from '../../ToggleBase'\r\nimport ButtonBase from '../../ButtonBase'\r\n\r\nexport default {\r\n    name: 'PaperPopin',\r\n    components: { PopinBase, ButtonBase, InputBase, ToggleBase, InputMedia },\r\n    props: {\r\n        content: { type: String, default: '' },\r\n        form: { type: Object, default: () => {} },\r\n        isActive: { type: Boolean, default: false },\r\n        attrs: { type: Object, default: () => {} },\r\n        currentNode: { type: Object, default: () => {} }\r\n    },\r\n    data: () => ({\r\n        value: {}\r\n    }),\r\n    watch: {\r\n        form: {\r\n            immediate: true,\r\n            deep: true,\r\n            handler (form) {\r\n                this.$data.value = this.formToValues(form)\r\n            }\r\n        },\r\n        currentNode: {\r\n            immediate: true,\r\n            handler (node) {\r\n                this.$data.value = {\r\n                    ...this.$data.value,\r\n                    ...this.formToValues(this.$props.form),\r\n                    ...(node ? node : {})\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        formToValues (form) {\r\n            let values = {}\r\n\r\n            Object.keys(form).forEach(id => {\r\n                values[id] = form[id].value\r\n            })\r\n\r\n            return values\r\n        },\r\n        onInput () {\r\n            let values = Object.keys(this.$props.form).reduce((prev, key) => {\r\n                let value = this.$data.value[key]\r\n                let form = this.$props.form[key]\r\n\r\n                return {\r\n                    ...prev,\r\n                    [key]: form.transformer && form.transformer.set ? form.transformer.set(value) : value\r\n                }\r\n            }, {})\r\n\r\n            this.$emit('input', values)\r\n\r\n            this.$emit('close')\r\n        }\r\n    }\r\n}\r\n</script>","// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nconst lower16 = 0xffff\nconst factor16 = Math.pow(2, 16)\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nexport class MapResult {\n  constructor(pos, deleted = false, recover = null) {\n    // :: number The mapped version of the position.\n    this.pos = pos\n    // :: bool Tells you whether the position was deleted, that is,\n    // whether the step removed its surroundings from the document.\n    this.deleted = deleted\n    this.recover = recover\n  }\n}\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nexport class StepMap {\n  // :: ([number])\n  // Create a position map. The modifications to the document are\n  // represented as an array of numbers, in which each group of three\n  // represents a modified chunk as `[start, oldSize, newSize]`.\n  constructor(ranges, inverted = false) {\n    this.ranges = ranges\n    this.inverted = inverted\n  }\n\n  recover(value) {\n    let diff = 0, index = recoverIndex(value)\n    if (!this.inverted) for (let i = 0; i < index; i++)\n      diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]\n    return this.ranges[index * 3] + diff + recoverOffset(value)\n  }\n\n  // : (number, ?number) → MapResult\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  // : (number, ?number) → number\n  map(pos, assoc = 1) { return this._map(pos, assoc, true) }\n\n  _map(pos, assoc, simple) {\n    let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize\n      if (pos <= end) {\n        let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc\n        let result = start + diff + (side < 0 ? 0 : newSize)\n        if (simple) return result\n        let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start)\n        return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n      }\n      diff += newSize - oldSize\n    }\n    return simple ? pos + diff : new MapResult(pos + diff)\n  }\n\n  touches(pos, recover) {\n    let diff = 0, index = recoverIndex(recover)\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], end = start + oldSize\n      if (pos <= end && i == index * 3) return true\n      diff += this.ranges[i + newIndex] - oldSize\n    }\n    return false\n  }\n\n  // :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n  // Calls the given function on each of the changed ranges included in\n  // this map.\n  forEach(f) {\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff)\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex]\n      f(oldStart, oldStart + oldSize, newStart, newStart + newSize)\n      diff += newSize - oldSize\n    }\n  }\n\n  // :: () → StepMap\n  // Create an inverted version of this map. The result can be used to\n  // map positions in the post-step document to the pre-step document.\n  invert() {\n    return new StepMap(this.ranges, !this.inverted)\n  }\n\n  toString() {\n    return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n  }\n\n  // :: (n: number) → StepMap\n  // Create a map that moves all positions by offset `n` (which may be\n  // negative). This can be useful when applying steps meant for a\n  // sub-document to a larger document, or vice-versa.\n  static offset(n) {\n    return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n  }\n}\n\nStepMap.empty = new StepMap([])\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nexport class Mapping {\n  // :: (?[StepMap])\n  // Create a new mapping with the given position maps.\n  constructor(maps, mirror, from, to) {\n    // :: [StepMap]\n    // The step maps in this mapping.\n    this.maps = maps || []\n    // :: number\n    // The starting position in the `maps` array, used when `map` or\n    // `mapResult` is called.\n    this.from = from || 0\n    // :: number\n    // The end position in the `maps` array.\n    this.to = to == null ? this.maps.length : to\n    this.mirror = mirror\n  }\n\n  // :: (?number, ?number) → Mapping\n  // Create a mapping that maps only through a part of this one.\n  slice(from = 0, to = this.maps.length) {\n    return new Mapping(this.maps, this.mirror, from, to)\n  }\n\n  copy() {\n    return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n  }\n\n  // :: (StepMap, ?number)\n  // Add a step map to the end of this mapping. If `mirrors` is\n  // given, it should be the index of the step map that is the mirror\n  // image of this one.\n  appendMap(map, mirrors) {\n    this.to = this.maps.push(map)\n    if (mirrors != null) this.setMirror(this.maps.length - 1, mirrors)\n  }\n\n  // :: (Mapping)\n  // Add all the step maps in a given mapping to this one (preserving\n  // mirroring information).\n  appendMapping(mapping) {\n    for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null)\n    }\n  }\n\n  // :: (number) → ?number\n  // Finds the offset of the step map that mirrors the map at the\n  // given offset, in this mapping (as per the second argument to\n  // `appendMap`).\n  getMirror(n) {\n    if (this.mirror) for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n  }\n\n  setMirror(n, m) {\n    if (!this.mirror) this.mirror = []\n    this.mirror.push(n, m)\n  }\n\n  // :: (Mapping)\n  // Append the inverse of the given mapping to this one.\n  appendMappingInverted(mapping) {\n    for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null)\n    }\n  }\n\n  // :: () → Mapping\n  // Create an inverted version of this mapping.\n  invert() {\n    let inverse = new Mapping\n    inverse.appendMappingInverted(this)\n    return inverse\n  }\n\n  // : (number, ?number) → number\n  // Map a position through this mapping.\n  map(pos, assoc = 1) {\n    if (this.mirror) return this._map(pos, assoc, true)\n    for (let i = this.from; i < this.to; i++)\n      pos = this.maps[i].map(pos, assoc)\n    return pos\n  }\n\n  // : (number, ?number) → MapResult\n  // Map a position through this mapping, returning a mapping\n  // result.\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  _map(pos, assoc, simple) {\n    let deleted = false\n\n    for (let i = this.from; i < this.to; i++) {\n      let map = this.maps[i], result = map.mapResult(pos, assoc)\n      if (result.recover != null) {\n        let corr = this.getMirror(i)\n        if (corr != null && corr > i && corr < this.to) {\n          i = corr\n          pos = this.maps[corr].recover(result.recover)\n          continue\n        }\n      }\n\n      if (result.deleted) deleted = true\n      pos = result.pos\n    }\n\n    return simple ? pos : new MapResult(pos, deleted)\n  }\n}\n","import {Mapping} from \"./map\"\n\nexport function TransformError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = TransformError.prototype\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype)\nTransformError.prototype.constructor = TransformError\nTransformError.prototype.name = \"TransformError\"\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nexport class Transform {\n  // :: (Node)\n  // Create a transform that starts with the given document.\n  constructor(doc) {\n    // :: Node\n    // The current document (the result of applying the steps in the\n    // transform).\n    this.doc = doc\n    // :: [Step]\n    // The steps in this transform.\n    this.steps = []\n    // :: [Node]\n    // The documents before each of the steps.\n    this.docs = []\n    // :: Mapping\n    // A mapping with the maps for each of the steps in this transform.\n    this.mapping = new Mapping\n  }\n\n  // :: Node The starting document.\n  get before() { return this.docs.length ? this.docs[0] : this.doc }\n\n  // :: (step: Step) → this\n  // Apply a new step in this transform, saving the result. Throws an\n  // error when the step fails.\n  step(object) {\n    let result = this.maybeStep(object)\n    if (result.failed) throw new TransformError(result.failed)\n    return this\n  }\n\n  // :: (Step) → StepResult\n  // Try to apply a step in this transformation, ignoring it if it\n  // fails. Returns the step result.\n  maybeStep(step) {\n    let result = step.apply(this.doc)\n    if (!result.failed) this.addStep(step, result.doc)\n    return result\n  }\n\n  // :: bool\n  // True when the document has been changed (when there are any\n  // steps).\n  get docChanged() {\n    return this.steps.length > 0\n  }\n\n  addStep(step, doc) {\n    this.docs.push(this.doc)\n    this.steps.push(step)\n    this.mapping.appendMap(step.getMap())\n    this.doc = doc\n  }\n}\n","import {ReplaceError} from \"prosemirror-model\"\n\nimport {StepMap} from \"./map\"\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nconst stepsByID = Object.create(null)\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nexport class Step {\n  // :: (doc: Node) → StepResult\n  // Applies this step to the given document, returning a result\n  // object that either indicates failure, if the step can not be\n  // applied to this document, or indicates success by containing a\n  // transformed document.\n  apply(_doc) { return mustOverride() }\n\n  // :: () → StepMap\n  // Get the step map that represents the changes made by this step,\n  // and which can be used to transform between positions in the old\n  // and the new document.\n  getMap() { return StepMap.empty }\n\n  // :: (doc: Node) → Step\n  // Create an inverted version of this step. Needs the document as it\n  // was before the step as argument.\n  invert(_doc) { return mustOverride() }\n\n  // :: (mapping: Mappable) → ?Step\n  // Map this step through a mappable thing, returning either a\n  // version of that step with its positions adjusted, or `null` if\n  // the step was entirely deleted by the mapping.\n  map(_mapping) { return mustOverride() }\n\n  // :: (other: Step) → ?Step\n  // Try to merge this step with another one, to be applied directly\n  // after it. Returns the merged step when possible, null if the\n  // steps can't be merged.\n  merge(_other) { return null }\n\n  // :: () → Object\n  // Create a JSON-serializeable representation of this step. When\n  // defining this for a custom subclass, make sure the result object\n  // includes the step type's [JSON id](#transform.Step^jsonID) under\n  // the `stepType` property.\n  toJSON() { return mustOverride() }\n\n  // :: (Schema, Object) → Step\n  // Deserialize a step from its JSON representation. Will call\n  // through to the step class' own implementation of this method.\n  static fromJSON(schema, json) {\n    if (!json || !json.stepType) throw new RangeError(\"Invalid input for Step.fromJSON\")\n    let type = stepsByID[json.stepType]\n    if (!type) throw new RangeError(`No step type ${json.stepType} defined`)\n    return type.fromJSON(schema, json)\n  }\n\n  // :: (string, constructor<Step>)\n  // To be able to serialize steps to JSON, each step needs a string\n  // ID to attach to its JSON representation. Use this method to\n  // register an ID for your step classes. Try to pick something\n  // that's unlikely to clash with steps from other modules.\n  static jsonID(id, stepClass) {\n    if (id in stepsByID) throw new RangeError(\"Duplicate use of step JSON ID \" + id)\n    stepsByID[id] = stepClass\n    stepClass.prototype.jsonID = id\n    return stepClass\n  }\n}\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nexport class StepResult {\n  // : (?Node, ?string)\n  constructor(doc, failed) {\n    // :: ?Node The transformed document.\n    this.doc = doc\n    // :: ?string Text providing information about a failed step.\n    this.failed = failed\n  }\n\n  // :: (Node) → StepResult\n  // Create a successful step result.\n  static ok(doc) { return new StepResult(doc, null) }\n\n  // :: (string) → StepResult\n  // Create a failed step result.\n  static fail(message) { return new StepResult(null, message) }\n\n  // :: (Node, number, number, Slice) → StepResult\n  // Call [`Node.replace`](#model.Node.replace) with the given\n  // arguments. Create a successful result if it succeeds, and a\n  // failed one if it throws a `ReplaceError`.\n  static fromReplace(doc, from, to, slice) {\n    try {\n      return StepResult.ok(doc.replace(from, to, slice))\n    } catch (e) {\n      if (e instanceof ReplaceError) return StepResult.fail(e.message)\n      throw e\n    }\n  }\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nexport function liftTarget(range) {\n  let parent = range.parent\n  let content = parent.content.cutByIndex(range.startIndex, range.endIndex)\n  for (let depth = range.depth;; --depth) {\n    let node = range.$from.node(depth)\n    let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth)\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      return depth\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) break\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  let {$from, $to, depth} = range\n\n  let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1)\n  let start = gapStart, end = gapEnd\n\n  let before = Fragment.empty, openStart = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $from.index(d) > 0) {\n      splitting = true\n      before = Fragment.from($from.node(d).copy(before))\n      openStart++\n    } else {\n      start--\n    }\n  let after = Fragment.empty, openEnd = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $to.after(d + 1) < $to.end(d)) {\n      splitting = true\n      after = Fragment.from($to.node(d).copy(after))\n      openEnd++\n    } else {\n      end++\n    }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n}\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nexport function findWrapping(range, nodeType, attrs, innerRange = range) {\n  let around = findWrappingOutside(range, nodeType)\n  let inner = around && findWrappingInside(innerRange, nodeType)\n  if (!inner) return null\n  return around.map(withAttrs).concat({type: nodeType, attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let around = parent.contentMatchAt(startIndex).findWrapping(type)\n  if (!around) return null\n  let outer = around.length ? around[0] : type\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let inner = parent.child(startIndex)\n  let inside = type.contentMatch.findWrapping(inner.type)\n  if (!inside) return null\n  let lastType = inside.length ? inside[inside.length - 1] : type\n  let innerMatch = lastType.contentMatch\n  for (let i = startIndex; innerMatch && i < endIndex; i++)\n    innerMatch = innerMatch.matchType(parent.child(i).type)\n  if (!innerMatch || !innerMatch.validEnd) return null\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  let start = range.start, end = range.end\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n}\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to = from, type, attrs) {\n  if (!type.isTextblock) throw new RangeError(\"Type given to setBlockType should be a textblock\")\n  let mapFrom = this.steps.length\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this.doc, this.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this.clearIncompatible(this.mapping.slice(mapFrom).map(pos, 1), type)\n      let mapping = this.mapping.slice(mapFrom)\n      let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1)\n      this.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true))\n      return false\n    }\n  })\n  return this\n}\n\nfunction canChangeType(doc, pos, type) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  let node = this.doc.nodeAt(pos)\n  if (!node) throw new RangeError(\"No node at given position\")\n  if (!type) type = node.type\n  let newNode = type.create(attrs, null, marks || node.marks)\n  if (node.isLeaf)\n    return this.replaceWith(pos, pos + node.nodeSize, newNode)\n\n  if (!type.validContent(node.content))\n    throw new RangeError(\"Invalid content for node type \" + type.name)\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n}\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nexport function canSplit(doc, pos, depth = 1, typesAfter) {\n  let $pos = doc.resolve(pos), base = $pos.depth - depth\n  let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    return false\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    let node = $pos.node(d), index = $pos.index(d)\n    if (node.type.spec.isolating) return false\n    let rest = node.content.cutByIndex(index, node.childCount)\n    let after = (typesAfter && typesAfter[i]) || node\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs))\n    if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n      return false\n  }\n  let index = $pos.indexAfter(base)\n  let baseType = typesAfter && typesAfter[0]\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth = 1, typesAfter) {\n  let $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty\n  for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before))\n    let typeAfter = typesAfter && typesAfter[i]\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after))\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n}\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nexport function canJoin(doc, pos) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nexport function joinPoint(doc, pos, dir = -1) {\n  let $pos = doc.resolve(pos)\n  for (let d = $pos.depth;; d--) {\n    let before, after, index = $pos.index(d)\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore\n      after = $pos.nodeAfter\n    } else if (dir > 0) {\n      before = $pos.node(d + 1)\n      index++\n      after = $pos.node(d).maybeChild(index)\n    } else {\n      before = $pos.node(d).maybeChild(index - 1)\n      after = $pos.node(d + 1)\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) return pos\n    if (d == 0) break\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d)\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth = 1) {\n  let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true)\n  return this.step(step)\n}\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nexport function insertPoint(doc, pos, nodeType) {\n  let $pos = doc.resolve(pos)\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) return pos\n\n  if ($pos.parentOffset == 0)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.index(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.before(d + 1)\n      if (index > 0) return null\n    }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.indexAfter(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.after(d + 1)\n      if (index < $pos.node(d).childCount) return null\n    }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nexport function dropPoint(doc, pos, slice) {\n  let $pos = doc.resolve(pos)\n  if (!slice.content.size) return pos\n  let content = slice.content\n  for (let i = 0; i < slice.openStart; i++) content = content.firstChild.content\n  for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (let d = $pos.depth; d >= 0; d--) {\n      let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1\n      let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0)\n      if (pass == 1\n          ? $pos.node(d).canReplace(insertPos, insertPos, content)\n          : $pos.node(d).contentMatchAt(insertPos).findWrapping(content.firstChild.type))\n        return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1)\n    }\n  }\n  return null\n}\n","import {Fragment} from \"./fragment\"\n\n// ReplaceError:: class extends Error\n// Error type raised by [`Node.replace`](#model.Node.replace) when\n// given an invalid replacement.\n\nexport function ReplaceError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = ReplaceError.prototype\n  return err\n}\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n\n// ::- A slice represents a piece cut out of a larger document. It\n// stores not only a fragment, but also the depth up to which nodes on\n// both side are ‘open’ (cut through).\nexport class Slice {\n  // :: (Fragment, number, number)\n  // Create a slice. When specifying a non-zero open depth, you must\n  // make sure that there are nodes of at least that depth at the\n  // appropriate side of the fragment—i.e. if the fragment is an empty\n  // paragraph node, `openStart` and `openEnd` can't be greater than 1.\n  //\n  // It is not necessary for the content of open nodes to conform to\n  // the schema's content constraints, though it should be a valid\n  // start/end/middle for such a node, depending on which sides are\n  // open.\n  constructor(content, openStart, openEnd) {\n    // :: Fragment The slice's content.\n    this.content = content\n    // :: number The open depth at the start.\n    this.openStart = openStart\n    // :: number The open depth at the end.\n    this.openEnd = openEnd\n  }\n\n  // :: number\n  // The size this slice would add when inserted into a document.\n  get size() {\n    return this.content.size - this.openStart - this.openEnd\n  }\n\n  insertAt(pos, fragment) {\n    let content = insertInto(this.content, pos + this.openStart, fragment, null)\n    return content && new Slice(content, this.openStart, this.openEnd)\n  }\n\n  removeBetween(from, to) {\n    return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd)\n  }\n\n  // :: (Slice) → bool\n  // Tests whether this slice is equal to another slice.\n  eq(other) {\n    return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd\n  }\n\n  toString() {\n    return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\"\n  }\n\n  // :: () → ?Object\n  // Convert a slice to a JSON-serializable representation.\n  toJSON() {\n    if (!this.content.size) return null\n    let json = {content: this.content.toJSON()}\n    if (this.openStart > 0) json.openStart = this.openStart\n    if (this.openEnd > 0) json.openEnd = this.openEnd\n    return json\n  }\n\n  // :: (Schema, ?Object) → Slice\n  // Deserialize a slice from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) return Slice.empty\n    let openStart = json.openStart || 0, openEnd = json.openEnd || 0\n    if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n      throw new RangeError(\"Invalid input for Slice.fromJSON\")\n    return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd)\n  }\n\n  // :: (Fragment, ?bool) → Slice\n  // Create a slice from a fragment by taking the maximum possible\n  // open value on both side of the fragment.\n  static maxOpen(fragment, openIsolating=true) {\n    let openStart = 0, openEnd = 0\n    for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) openStart++\n    for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild) openEnd++\n    return new Slice(fragment, openStart, openEnd)\n  }\n}\n\nfunction removeRange(content, from, to) {\n  let {index, offset} = content.findIndex(from), child = content.maybeChild(index)\n  let {index: indexTo, offset: offsetTo} = content.findIndex(to)\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) throw new RangeError(\"Removing non-flat range\")\n    return content.cut(0, from).append(content.cut(to))\n  }\n  if (index != indexTo) throw new RangeError(\"Removing non-flat range\")\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)))\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  let {index, offset} = content.findIndex(dist), child = content.maybeChild(index)\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) return null\n    return content.cut(0, dist).append(insert).append(content.cut(dist))\n  }\n  let inner = insertInto(child.content, dist - offset - 1, insert)\n  return inner && content.replaceChild(index, child.copy(inner))\n}\n\n// :: Slice\n// The empty slice.\nSlice.empty = new Slice(Fragment.empty, 0, 0)\n\nexport function replace($from, $to, slice) {\n  if (slice.openStart > $from.depth)\n    throw new ReplaceError(\"Inserted content deeper than insertion position\")\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n    throw new ReplaceError(\"Inconsistent open depths\")\n  return replaceOuter($from, $to, slice, 0)\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  let index = $from.index(depth), node = $from.node(depth)\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    let inner = replaceOuter($from, $to, slice, depth + 1)\n    return node.copy(node.content.replaceChild(index, inner))\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth))\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n    let parent = $from.parent, content = parent.content\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)))\n  } else {\n    let {start, end} = prepareSliceForReplace(slice, $from)\n    return close(node, replaceThreeWay($from, start, end, $to, depth))\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type))\n    throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name)\n}\n\nfunction joinable($before, $after, depth) {\n  let node = $before.node(depth)\n  checkJoin(node, $after.node(depth))\n  return node\n}\n\nfunction addNode(child, target) {\n  let last = target.length - 1\n  if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n    target[last] = child.withText(target[last].text + child.text)\n  else\n    target.push(child)\n}\n\nfunction addRange($start, $end, depth, target) {\n  let node = ($end || $start).node(depth)\n  let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount\n  if ($start) {\n    startIndex = $start.index(depth)\n    if ($start.depth > depth) {\n      startIndex++\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target)\n      startIndex++\n    }\n  }\n  for (let i = startIndex; i < endIndex; i++) addNode(node.child(i), target)\n  if ($end && $end.depth == depth && $end.textOffset)\n    addNode($end.nodeBefore, target)\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content))\n    throw new ReplaceError(\"Invalid content for node \" + node.type.name)\n  return node.copy(content)\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  let openStart = $from.depth > depth && joinable($from, $start, depth + 1)\n  let openEnd = $to.depth > depth && joinable($end, $to, depth + 1)\n\n  let content = []\n  addRange(null, $from, depth, content)\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd)\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content)\n  } else {\n    if (openStart)\n      addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content)\n    addRange($start, $end, depth, content)\n    if (openEnd)\n      addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  let content = []\n  addRange(null, $from, depth, content)\n  if ($from.depth > depth) {\n    let type = joinable($from, $to, depth + 1)\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  let extra = $along.depth - slice.openStart, parent = $along.node(extra)\n  let node = parent.copy(slice.content)\n  for (let i = extra - 1; i >= 0; i--)\n    node = $along.node(i).copy(Fragment.from(node))\n  return {start: node.resolveNoCache(slice.openStart + extra),\n          end: node.resolveNoCache(node.content.size - slice.openEnd - extra)}\n}\n","import {compareDeep} from \"./comparedeep\"\n\n// ::- A mark is a piece of information that can be attached to a node,\n// such as it being emphasized, in code font, or a link. It has a type\n// and optionally a set of attributes that provide further information\n// (such as the target of the link). Marks are created through a\n// `Schema`, which controls which types exist and which\n// attributes they have.\nexport class Mark {\n  constructor(type, attrs) {\n    // :: MarkType\n    // The type of this mark.\n    this.type = type\n    // :: Object\n    // The attributes associated with this mark.\n    this.attrs = attrs\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Given a set of marks, create a new set which contains this one as\n  // well, in the right position. If this mark is already in the set,\n  // the set itself is returned. If any marks that are set to be\n  // [exclusive](#model.MarkSpec.excludes) with this mark are present,\n  // those are replaced by this one.\n  addToSet(set) {\n    let copy, placed = false\n    for (let i = 0; i < set.length; i++) {\n      let other = set[i]\n      if (this.eq(other)) return set\n      if (this.type.excludes(other.type)) {\n        if (!copy) copy = set.slice(0, i)\n      } else if (other.type.excludes(this.type)) {\n        return set\n      } else {\n        if (!placed && other.type.rank > this.type.rank) {\n          if (!copy) copy = set.slice(0, i)\n          copy.push(this)\n          placed = true\n        }\n        if (copy) copy.push(other)\n      }\n    }\n    if (!copy) copy = set.slice()\n    if (!placed) copy.push(this)\n    return copy\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Remove this mark from the given set, returning a new set. If this\n  // mark is not in the set, the set itself is returned.\n  removeFromSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i]))\n        return set.slice(0, i).concat(set.slice(i + 1))\n    return set\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether this mark is in the given set of marks.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i])) return true\n    return false\n  }\n\n  // :: (Mark) → bool\n  // Test whether this mark has the same type and attributes as\n  // another mark.\n  eq(other) {\n    return this == other ||\n      (this.type == other.type && compareDeep(this.attrs, other.attrs))\n  }\n\n  // :: () → Object\n  // Convert this mark to a JSON-serializeable representation.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    return obj\n  }\n\n  // :: (Schema, Object) → Mark\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Mark.fromJSON\")\n    let type = schema.marks[json.type]\n    if (!type) throw new RangeError(`There is no mark type ${json.type} in this schema`)\n    return type.create(json.attrs)\n  }\n\n  // :: ([Mark], [Mark]) → bool\n  // Test whether two sets of marks are identical.\n  static sameSet(a, b) {\n    if (a == b) return true\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++)\n      if (!a[i].eq(b[i])) return false\n    return true\n  }\n\n  // :: (?union<Mark, [Mark]>) → [Mark]\n  // Create a properly sorted mark set from null, a single mark, or an\n  // unsorted array of marks.\n  static setFrom(marks) {\n    if (!marks || marks.length == 0) return Mark.none\n    if (marks instanceof Mark) return [marks]\n    let copy = marks.slice()\n    copy.sort((a, b) => a.type.rank - b.type.rank)\n    return copy\n  }\n}\n\n// :: [Mark] The empty set of marks.\nMark.none = []\n","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltip.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./paper-popin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./paper-popin.vue?vue&type=script&lang=js&\"","import {Selection, NodeSelection} from \"prosemirror-state\"\nimport {Slice} from \"prosemirror-model\"\n\n// ::- Gap cursor selections are represented using this class. Its\n// `$anchor` and `$head` properties both point at the cursor position.\nexport class GapCursor extends Selection {\n  // : (ResolvedPos)\n  constructor($pos) {\n    super($pos, $pos)\n  }\n\n  map(doc, mapping) {\n    let $pos = doc.resolve(mapping.map(this.head))\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n\n  content() { return Slice.empty }\n\n  eq(other) {\n    return other instanceof GapCursor && other.head == this.head\n  }\n\n  toJSON() {\n    return {type: \"gapcursor\", pos: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.pos != \"number\") throw new RangeError(\"Invalid input for GapCursor.fromJSON\")\n    return new GapCursor(doc.resolve(json.pos))\n  }\n\n  getBookmark() { return new GapBookmark(this.anchor) }\n\n  static valid($pos) {\n    let parent = $pos.parent\n    if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos)) return false\n    let override = parent.type.spec.allowGapCursor\n    if (override != null) return override\n    let deflt = parent.contentMatchAt($pos.index()).defaultType\n    return deflt && deflt.isTextblock\n  }\n\n  static findFrom($pos, dir, mustMove) {\n    search: for (;;) {\n      if (!mustMove && GapCursor.valid($pos)) return $pos\n      let pos = $pos.pos, next = null\n      // Scan up from this position\n      for (let d = $pos.depth;; d--) {\n        let parent = $pos.node(d)\n        if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n          next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1)\n          break\n        } else if (d == 0) {\n          return null\n        }\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      // And then down into the next node\n      for (;;) {\n        let inside = dir > 0 ? next.firstChild : next.lastChild\n        if (!inside) {\n          if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n            $pos = $pos.doc.resolve(pos + next.nodeSize * dir)\n            mustMove = false\n            continue search\n          }\n          break\n        }\n        next = inside\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      return null\n    }\n  }\n}\n\nGapCursor.prototype.visible = false\n\nSelection.jsonID(\"gapcursor\", GapCursor)\n\nclass GapBookmark {\n  constructor(pos) {\n    this.pos = pos\n  }\n  map(mapping) {\n    return new GapBookmark(mapping.map(this.pos))\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.pos)\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n}\n\nfunction closedBefore($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.index(d)\n    // At the start of this parent, look at next one\n    if (index == 0) continue\n    // See if the node before (or its first ancestor) is closed\n    for (let before = $pos.node(d).child(index - 1);; before = before.lastChild) {\n      if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating) return true\n      if (before.inlineContent) return false\n    }\n  }\n  // Hit start of document\n  return true\n}\n\nfunction closedAfter($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.indexAfter(d), parent = $pos.node(d)\n    if (index == parent.childCount) continue\n    for (let after = parent.child(index);; after = after.firstChild) {\n      if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating) return true\n      if (after.inlineContent) return false\n    }\n  }\n  return true\n}\n","import {NodeSelection} from \"prosemirror-state\"\n\nimport {scrollRectIntoView, posAtCoords, coordsAtPos, endOfTextblock, storeScrollPos,\n        resetScrollPos, focusPreventScroll} from \"./domcoords\"\nimport {docViewDesc} from \"./viewdesc\"\nimport {initInput, destroyInput, dispatchEvent, ensureListeners, clearComposition} from \"./input\"\nimport {selectionToDOM, anchorInRightPlace, syncNodeSelection} from \"./selection\"\nimport {Decoration, viewDecorations} from \"./decoration\"\nimport browser from \"./browser\"\n\nexport {Decoration, DecorationSet} from \"./decoration\"\n\n// Exported for testing\nexport {serializeForClipboard as __serializeForClipboard, parseFromClipboard as __parseFromClipboard} from \"./clipboard\"\nexport {endComposition as __endComposition} from \"./input\"\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nexport class EditorView {\n  // :: (?union<dom.Node, (dom.Node), {mount: dom.Node}>, DirectEditorProps)\n  // Create a view. `place` may be a DOM node that the editor should\n  // be appended to, a function that will place it into the document,\n  // or an object whose `mount` property holds the node to use as the\n  // document container. If it is `null`, the editor will not be added\n  // to the document.\n  constructor(place, props) {\n    this._props = props\n    // :: EditorState\n    // The view's current [state](#state.EditorState).\n    this.state = props.state\n\n    this.dispatch = this.dispatch.bind(this)\n\n    this._root = null\n    this.focused = false\n    // Kludge used to work around a Chrome bug\n    this.trackWrites = null\n\n    // :: dom.Element\n    // An editable DOM node containing the document. (You probably\n    // should not directly interfere with its content.)\n    this.dom = (place && place.mount) || document.createElement(\"div\")\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom)\n      else if (place.apply) place(this.dom)\n      else if (place.mount) this.mounted = true\n    }\n\n    // :: bool\n    // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n    this.editable = getEditable(this)\n    this.markCursor = null\n    this.cursorWrapper = null\n    updateCursorWrapper(this)\n    this.nodeViews = buildNodeViews(this)\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this)\n\n    this.lastSelectedViewDesc = null\n    // :: ?{slice: Slice, move: bool}\n    // When editor content is being dragged, this object contains\n    // information about the dragged slice and whether it is being\n    // copied or moved. At any other time, it is null.\n    this.dragging = null\n\n    initInput(this)\n\n    this.pluginViews = []\n    this.updatePluginViews()\n  }\n\n  // composing:: boolean\n  // Holds `true` when a\n  // [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n  // is active.\n\n  // :: DirectEditorProps\n  // The view's current [props](#view.EditorProps).\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props\n      this._props = {}\n      for (let name in prev) this._props[name] = prev[name]\n      this._props.state = this.state\n    }\n    return this._props\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view's props. Will immediately cause an update to\n  // the DOM.\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this)\n    this._props = props\n    this.updateStateInner(props.state, true)\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view by updating existing props object with the object\n  // given as argument. Equivalent to `view.update(Object.assign({},\n  // view.props, props))`.\n  setProps(props) {\n    let updated = {}\n    for (let name in this._props) updated[name] = this._props[name]\n    updated.state = this.state\n    for (let name in props) updated[name] = props[name]\n    this.update(updated)\n  }\n\n  // :: (EditorState)\n  // Update the editor's `state` prop, without touching any of the\n  // other props.\n  updateState(state) {\n    this.updateStateInner(state, this.state.plugins != state.plugins)\n  }\n\n  updateStateInner(state, reconfigured) {\n    let prev = this.state, redraw = false, updateSel = false\n    // When stored marks are added, stop composition, so that they can\n    // be displayed.\n    if (state.storedMarks && this.composing) {\n      clearComposition(this)\n      updateSel = true\n    }\n    this.state = state\n    if (reconfigured) {\n      let nodeViews = buildNodeViews(this)\n      if (changedNodeViews(nodeViews, this.nodeViews)) {\n        this.nodeViews = nodeViews\n        redraw = true\n      }\n      ensureListeners(this)\n    }\n\n    this.editable = getEditable(this)\n    updateCursorWrapper(this)\n    let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this)\n\n    let scroll = reconfigured ? \"reset\"\n        : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\"\n    let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco)\n    if (updateDoc || !state.selection.eq(prev.selection)) updateSel = true\n    let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this)\n\n    if (updateSel) {\n      this.domObserver.stop()\n      // Work around an issue in Chrome, IE, and Edge where changing\n      // the DOM around an active selection puts it into a broken\n      // state where the thing the user sees differs from the\n      // selection reported by the Selection object (#710, #973,\n      // #1011, #1013, #1035).\n      let forceSelUpdate = updateDoc && (browser.ie || browser.chrome) && !this.composing &&\n          !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection)\n      if (updateDoc) {\n        // If the node that the selection points into is written to,\n        // Chrome sometimes starts misreporting the selection, so this\n        // tracks that and forces a selection reset when our update\n        // did write to the node.\n        let chromeKludge = browser.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null\n        if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.updateOuterDeco([])\n          this.docView.destroy()\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this)\n        }\n        if (chromeKludge && !this.trackWrites) forceSelUpdate = true\n      }\n      // Work around for an issue where an update arriving right between\n      // a DOM selection change and the \"selectionchange\" event for it\n      // can cause a spurious DOM selection update, disrupting mouse\n      // drag selection.\n      if (forceSelUpdate ||\n          !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n        selectionToDOM(this, forceSelUpdate)\n      } else {\n        syncNodeSelection(this, state.selection)\n        this.domObserver.setCurSelection()\n      }\n      this.domObserver.start()\n    }\n\n    this.updatePluginViews(prev)\n\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0\n    } else if (scroll == \"to selection\") {\n      let startDOM = this.root.getSelection().focusNode\n      if (this.someProp(\"handleScrollToSelection\", f => f(this)))\n        {} // Handled\n      else if (state.selection instanceof NodeSelection)\n        scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM)\n      else\n        scrollRectIntoView(this, this.coordsAtPos(state.selection.head), startDOM)\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos)\n    }\n  }\n\n  destroyPluginViews() {\n    let view\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy()\n  }\n\n  updatePluginViews(prevState) {\n    if (!prevState || prevState.plugins != this.state.plugins) {\n      this.destroyPluginViews()\n      for (let i = 0; i < this.state.plugins.length; i++) {\n        let plugin = this.state.plugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i]\n        if (pluginView.update) pluginView.update(this, prevState)\n      }\n    }\n  }\n\n  // :: (string, ?(prop: *) → *) → *\n  // Goes over the values of a prop, first those provided directly,\n  // then those from plugins (in order), and calls `f` every time a\n  // non-undefined value is found. When `f` returns a truthy value,\n  // that is immediately returned. When `f` isn't provided, it is\n  // treated as the identity function (the prop value is returned\n  // directly).\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName], value\n    if (prop != null && (value = f ? f(prop) : prop)) return value\n    let plugins = this.state.plugins\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n  }\n\n  // :: () → bool\n  // Query whether the view has focus.\n  hasFocus() {\n    return this.root.activeElement == this.dom\n  }\n\n  // :: ()\n  // Focus the editor.\n  focus() {\n    this.domObserver.stop()\n    if (this.editable) focusPreventScroll(this.dom)\n    selectionToDOM(this)\n    this.domObserver.start()\n  }\n\n  // :: union<dom.Document, dom.DocumentFragment>\n  // Get the document root in which the editor exists. This will\n  // usually be the top-level `document`, but might be a [shadow\n  // DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  // root if the editor is inside one.\n  get root() {\n    let cached = this._root\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n        if (!search.getSelection) Object.getPrototypeOf(search).getSelection = () => document.getSelection()\n        return this._root = search\n      }\n    }\n    return cached || document\n  }\n\n  // :: ({left: number, top: number}) → ?{pos: number, inside: number}\n  // Given a pair of viewport coordinates, return the document\n  // position that corresponds to them. May return null if the given\n  // coordinates aren't inside of the editor. When an object is\n  // returned, its `pos` property is the position nearest to the\n  // coordinates, and its `inside` property holds the position of the\n  // inner node that the position falls inside of, or -1 if it is at\n  // the top level, not in any node.\n  posAtCoords(coords) {\n    return posAtCoords(this, coords)\n  }\n\n  // :: (number) → {left: number, right: number, top: number, bottom: number}\n  // Returns the viewport rectangle at a given document position. `left`\n  // and `right` will be the same number, as this returns a flat\n  // cursor-ish rectangle.\n  coordsAtPos(pos) {\n    return coordsAtPos(this, pos)\n  }\n\n  // :: (number) → {node: dom.Node, offset: number}\n  // Find the DOM position that corresponds to the given document\n  // position. Note that you should **not** mutate the editor's\n  // internal DOM, only inspect it (and even that is usually not\n  // necessary).\n  domAtPos(pos) {\n    return this.docView.domFromPos(pos)\n  }\n\n  // :: (number) → ?dom.Node\n  // Find the DOM node that represents the document node after the\n  // given position. May return `null` when the position doesn't point\n  // in front of a node or if the node is inside an opaque node view.\n  //\n  // This is intended to be able to call things like\n  // `getBoundingClientRect` on that DOM node. Do **not** mutate the\n  // editor DOM directly, or add styling this way, since that will be\n  // immediately overriden by the editor as it redraws the node.\n  nodeDOM(pos) {\n    let desc = this.docView.descAt(pos)\n    return desc ? desc.nodeDOM : null\n  }\n\n  // :: (dom.Node, number, ?number) → number\n  // Find the document position that corresponds to a given DOM\n  // position. (Whenever possible, it is preferable to inspect the\n  // document structure directly, rather than poking around in the\n  // DOM, but sometimes—for example when interpreting an event\n  // target—you don't have a choice.)\n  //\n  // The `bias` parameter can be used to influence which side of a DOM\n  // node to use when the position is inside a leaf node.\n  posAtDOM(node, offset, bias = -1) {\n    let pos = this.docView.posFromDOM(node, offset, bias)\n    if (pos == null) throw new RangeError(\"DOM position not inside the editor\")\n    return pos\n  }\n\n  // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n  // Find out whether the selection is at the end of a textblock when\n  // moving in a given direction. When, for example, given `\"left\"`,\n  // it will return true if moving left from the current cursor\n  // position would leave that position's parent textblock. Will apply\n  // to the view's current state by default, but it is possible to\n  // pass a different state.\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir)\n  }\n\n  // :: ()\n  // Removes the editor from the DOM and destroys all [node\n  // views](#view.NodeView).\n  destroy() {\n    if (!this.docView) return\n    destroyInput(this)\n    this.destroyPluginViews()\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this)\n      this.dom.textContent = \"\"\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom)\n    }\n    this.docView.destroy()\n    this.docView = null\n  }\n\n  // Used for testing.\n  dispatchEvent(event) {\n    return dispatchEvent(this, event)\n  }\n\n  // :: (Transaction)\n  // Dispatch a transaction. Will call\n  // [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n  // when given, and otherwise defaults to applying the transaction to\n  // the current state and calling\n  // [`updateState`](#view.EditorView.updateState) with the result.\n  // This method is bound to the view instance, so that it can be\n  // easily passed around.\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction\n    if (dispatchTransaction) dispatchTransaction.call(this, tr)\n    else this.updateState(this.state.apply(tr))\n  }\n}\n\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null)\n  attrs.class = \"ProseMirror\"\n  attrs.contenteditable = String(view.editable)\n\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state)\n    if (value) for (let attr in value) {\n      if (attr == \"class\")\n        attrs.class += \" \" + value[attr]\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        attrs[attr] = String(value[attr])\n    }\n  })\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    let dom = document.createElement(\"img\")\n    dom.setAttribute(\"mark-placeholder\", \"true\")\n    view.cursorWrapper = {dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})}\n  } else {\n    view.cursorWrapper = null\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false)\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head))\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  let result = {}\n  view.someProp(\"nodeViews\", obj => {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop))\n      result[prop] = obj[prop]\n  })\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  let nA = 0, nB = 0\n  for (let prop in a) {\n    if (a[prop] != b[prop]) return true\n    nA++\n  }\n  for (let _ in b) nB++\n  return nA != nB\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration]) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSet\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"PaperEditor_select\"},[_c('select-base',{attrs:{\"options\":_vm.items,\"value\":_vm.selectedId},on:{\"input\":_vm.onInput}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div class=\"InputBase_reveal\">\r\n            <i class=\"fal fa-eye-slash\" v-if=\"isRevealed\"></i>\r\n            <i class=\"fal fa-eye\" v-else></i>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'HelperReveal',\r\n    props: {\r\n        isRevealed: { type: Boolean, default: false }\r\n    }\r\n}\r\n</script>","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=36e66efe&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { Node } from 'tiptap'\r\nimport { toggleBlockType, setBlockType, textblockTypeInputRule } from 'tiptap-commands'\r\n\r\nexport default class StyledBlock extends Node {\r\n\r\n    get name() {\r\n        return 'styledBlock'\r\n    }\r\n\r\n    get schema() {\r\n        return {\r\n            attrs: {\r\n                tag: { default: 'p' },\r\n                classes: { default: [] }\r\n            },\r\n            content: 'text*',\r\n            group: 'block',\r\n            defining: true,\r\n            draggable: false,\r\n            parseDOM: [{\r\n                tag: ['p', 'h1', 'h2', 'h3'],\r\n                priority: 999,\r\n                getAttrs: dom => ({\r\n                    tag: dom.tagName.toLowerCase(),\r\n                    classes: dom.hasAttribute('class') ? dom.getAttribute('class').explode(' ') : []\r\n                })\r\n            }],\r\n            toDOM: node => [node.attrs.tag, {\r\n                class: node.attrs.classes.join(\" \")\r\n            }, 0],\r\n        }\r\n    }\r\n\r\n    commands({ type, schema }) {\r\n        return (attrs) => toggleBlockType(type, schema.nodes.paragraph, attrs)\r\n    }\r\n\r\n    inputRules({ type }) {\r\n        return [\r\n            textblockTypeInputRule(/^```$/, type),\r\n        ]\r\n    }\r\n}","import {Plugin} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\n\n// :: (options: ?Object) → Plugin\n// Create a plugin that, when added to a ProseMirror instance,\n// causes a decoration to show up at the drop position when something\n// is dragged over the editor.\n//\n//   options::- These options are supported:\n//\n//     color:: ?string\n//     The color of the cursor. Defaults to `black`.\n//\n//     width:: ?number\n//     The precise width of the cursor in pixels. Defaults to 1.\n//\n//     class:: ?string\n//     A CSS class name to add to the cursor element.\nexport function dropCursor(options = {}) {\n  return new Plugin({\n    view(editorView) { return new DropCursorView(editorView, options) }\n  })\n}\n\nclass DropCursorView {\n  constructor(editorView, options) {\n    this.editorView = editorView\n    this.width = options.width || 1\n    this.color = options.color || \"black\"\n    this.class = options.class\n    this.cursorPos = null\n    this.element = null\n    this.timeout = null\n\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n      let handler = e => this[name](e)\n      editorView.dom.addEventListener(name, handler)\n      return {name, handler}\n    })\n  }\n\n  destroy() {\n    this.handlers.forEach(({name, handler}) => this.editorView.dom.removeEventListener(name, handler))\n  }\n\n  update(editorView, prevState) {\n    if (this.cursorPos != null && prevState.doc != editorView.state.doc) this.updateOverlay()\n  }\n\n  setCursor(pos) {\n    if (pos == this.cursorPos) return\n    this.cursorPos = pos\n    if (pos == null) {\n      this.element.parentNode.removeChild(this.element)\n      this.element = null\n    } else {\n      this.updateOverlay()\n    }\n  }\n\n  updateOverlay() {\n    let $pos = this.editorView.state.doc.resolve(this.cursorPos), rect\n    if (!$pos.parent.inlineContent) {\n      let before = $pos.nodeBefore, after = $pos.nodeAfter\n      if (before || after) {\n        let nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ?  before.nodeSize : 0)).getBoundingClientRect()\n        let top = before ? nodeRect.bottom : nodeRect.top\n        if (before && after)\n          top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2\n        rect = {left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2}\n      }\n    }\n    if (!rect) {\n      let coords = this.editorView.coordsAtPos(this.cursorPos)\n      rect = {left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom}\n    }\n\n    let parent = this.editorView.dom.offsetParent\n    if (!this.element) {\n      this.element = parent.appendChild(document.createElement(\"div\"))\n      if (this.class) this.element.className = this.class\n      this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color\n    }\n    let parentRect = !parent || parent == document.body && getComputedStyle(parent).position == \"static\"\n        ? {left: -pageXOffset, top: -pageYOffset} : parent.getBoundingClientRect()\n    this.element.style.left = (rect.left - parentRect.left) + \"px\"\n    this.element.style.top = (rect.top - parentRect.top) + \"px\"\n    this.element.style.width = (rect.right - rect.left) + \"px\"\n    this.element.style.height = (rect.bottom - rect.top) + \"px\"\n  }\n\n  scheduleRemoval(timeout) {\n    clearTimeout(this.timeout)\n    this.timeout = setTimeout(() => this.setCursor(null), timeout)\n  }\n\n  dragover(event) {\n    if (!this.editorView.editable) return\n    let pos = this.editorView.posAtCoords({left: event.clientX, top: event.clientY})\n    if (pos) {\n      let target = pos.pos\n      if (this.editorView.dragging && this.editorView.dragging.slice) {\n        target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice)\n        if (target == null) target = pos.pos\n      }\n      this.setCursor(target)\n      this.scheduleRemoval(5000)\n    }\n  }\n\n  dragend() {\n    this.scheduleRemoval(20)\n  }\n\n  drop() {\n    this.scheduleRemoval(20)\n  }\n\n  dragleave(event) {\n    if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n      this.setCursor(null)\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"PaperView\",class:{ 'is-editable': _vm.editable ? true : false }},[(!_vm.initEditor)?_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.value)}}):_vm._e(),(_vm.initEditor)?_c('editor-content',{staticClass:\"Paper_content\",attrs:{\"editor\":_vm.initEditor}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=36c8d9e6&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","<template>\r\n    <div class=\"InputBase_errors\" :class=\"{ 'is-active': isActive }\">\r\n        <i class=\"InputBase_errorValid fal fa-check\" v-show=\"isValid\"></i>\r\n        <i class=\"InputBase_errorInvalid fal fa-times\" v-show=\"!isValid\"></i>\r\n\r\n        <div class=\"InputBase_errorPopin\">\r\n            <template v-for=\"error in errors\">\r\n                {{ error }}\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'HelperErrors',\r\n    props: {\r\n        errors: { type: Array, default: () => [] },\r\n        isValid: { type: Boolean, default: true },\r\n        isActive: { type: Boolean, default: false }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","<template>\r\n    <div class=\"InputUpload\">\r\n        <div class=\"InputUpload_body\">\r\n            <div class=\"InputUpload_input\">\r\n                <input-base class=\"InputUpload_element\" :modifiers=\"['file-upload']\" type=\"file\" :attrs=\"{ multiple: true }\" @input=\"addFiles\" />\r\n\r\n                <div>\r\n                    <p class=\"ft-3xl\">\r\n                        <i class=\"fal fa-cloud-upload color-ft-weak fa-2x mb-10\"></i>\r\n                    </p>\r\n\r\n                    Choisir des fichiers ou les faire glisser\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"InputUpload_upload\" :class=\"{ 'is-active': files.length > 0 }\" v-show=\"files.length > 0\">\r\n                <div\r\n                    v-for=\"(file, i) in files\"\r\n                    class=\"InputUpload_file\"\r\n                    :class=\"{ 'is-loaded': file.loaded, 'is-loading': file.loading }\"\r\n                    :key=\"i\"\r\n                >   \r\n                    <div class=\"InputUpload_title\">\r\n                        <span class=\"ft-l mr-10\">\r\n                            <i class=\"fal\" :class=\"[ getTypeIcon(file.raw.type) ]\"></i>\r\n                        </span>\r\n\r\n                        {{ file.name }}\r\n                    </div>\r\n                    \r\n                    <div class=\"InputUpload_status\">\r\n                        <i class=\"fal fa-times color-ft-weak\" @click.stop=\"deleteFile(file.name)\" v-if=\"!file.loading && !file.loaded && !isLoading\"></i>\r\n                        <i class=\"fal fa-spinner-third spin color-ft-weak\" v-if=\"file.loading && !file.loaded\"></i>\r\n                        <i class=\"fal fa-check color-blueberry\" v-if=\"file.loaded && !file.error\"></i>\r\n                        <i class=\"fal fa-times color-error\" v-if=\"file.error\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"InputUpload_actions\" :class=\"{ 'is-active': queuedFiles.length > 0 && !isLoading }\">\r\n            <div>\r\n                <div class=\"ft-s color-ft-weak p-5\" @click=\"files = []\">Réinitialiser</div>\r\n            </div>\r\n\r\n            <button-base\r\n                :modifiers=\"['s']\"\r\n                @click.stop=\"upload\"\r\n            >\r\n                Uploader {{ queuedFiles.length }} fichier(s)\r\n            </button-base>\r\n        </div>\r\n\r\n        <div class=\"InputUpload_actions\" :class=\"{ 'is-active': !isLoading && loadedFiles.length > 0 && loadedFiles.length == files.length }\">\r\n            <div class=\"text-center ft-s fx-grow color-blueberry ph-20\" v-if=\"status == 'success'\">\r\n                <i class=\"fal fa-check mr-5\"></i> Les fichiers ont été chargés avec succès. Ils se trouvent dans la Bibliothèque de médias.\r\n            </div>\r\n            <div class=\"text-center ft-s fx-grow color-error ph-20\" v-else-if=\"status == 'partial'\">\r\n                <i class=\"fal fa-exclamation-triangle mr-5\"></i> Certains fichiers n'ont pas pu être chargés, veuillez réessayer.\r\n            </div>\r\n            <div class=\"text-center ft-s fx-grow color-error ph-20\" v-else-if=\"status == 'fail'\">\r\n                <i class=\"fal fa-times mr-5\"></i> Les fichiers n'ont pas pu être chargés, veuillez réessayer.\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport InputBase from '../InputBase/index.vue'\r\n\r\nexport default {\r\n    name: 'InputUpload',\r\n    components: { InputBase },\r\n    props: {\r\n        value: { type: Array, default: () => [] },\r\n        isLoading: { type: Boolean, default: false }\r\n    },\r\n    data: () => ({\r\n        files: [],\r\n        state: {\r\n            loading: false\r\n        }\r\n    }),\r\n    computed: {\r\n        queuedFiles () { return this.$data.files.filter(f => !f.loaded && !f.loading) },\r\n        loadedFiles () { return this.$data.files.filter(f => f.loaded) },\r\n        status () {\r\n            let status = 'success'\r\n            if (this.$data.files.filter(f => f.error).length > 0) status = 'partial'\r\n            if (this.$data.files.filter(f => f.error).length >= this.$data.files.length) status = 'fail'\r\n\r\n            return status\r\n        }\r\n    },\r\n    watch: {\r\n        value: {\r\n            immediate: true,\r\n            handler (v) {\r\n                this.$data.files = v\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        getTypeIcon (type) {\r\n            let icon = 'fa-file-alt'\r\n\r\n            if (type.indexOf('image') > -1) icon = 'fa-file-image'\r\n            if (type.indexOf('html') > -1) icon = 'fa-file-code'\r\n\r\n            return icon\r\n        },\r\n        addFiles (files) {\r\n            this.$data.files = [ ...this.queuedFiles, ...files.map(file => ({\r\n                name: file.name,\r\n                raw: file,\r\n                loaded: false,\r\n                loading: false\r\n            }))]\r\n        },\r\n        deleteFile (name) {\r\n            this.$data.files = this.$data.files.filter(i => i.name != name)\r\n        },\r\n        upload () {\r\n            this.$emit('input', this.$data.files)\r\n        }\r\n    }\r\n}\r\n</script>","export default {\r\n    modifiers: ['s', 'light'],\r\n    default: {\r\n        \r\n    }\r\n}","export function findDiffStart(a, b, pos) {\n  for (let i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      return a.childCount == b.childCount ? null : pos\n\n    let childA = a.child(i), childB = b.child(i)\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) return pos\n\n    if (childA.isText && childA.text != childB.text) {\n      for (let j = 0; childA.text[j] == childB.text[j]; j++)\n        pos++\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffStart(childA.content, childB.content, pos + 1)\n      if (inner != null) return inner\n    }\n    pos += childA.nodeSize\n  }\n}\n\nexport function findDiffEnd(a, b, posA, posB) {\n  for (let iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      return iA == iB ? null : {a: posA, b: posB}\n\n    let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize\n    if (childA == childB) {\n      posA -= size; posB -= size\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) return {a: posA, b: posB}\n\n    if (childA.isText && childA.text != childB.text) {\n      let same = 0, minSize = Math.min(childA.text.length, childB.text.length)\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1)\n      if (inner) return inner\n    }\n    posA -= size; posB -= size\n  }\n}\n","import {findDiffStart, findDiffEnd} from \"./diff\"\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nexport class Fragment {\n  constructor(content, size) {\n    this.content = content\n    // :: number\n    // The size of the fragment, which is the total of the size of its\n    // content nodes.\n    this.size = size || 0\n    if (size == null) for (let i = 0; i < content.length; i++)\n      this.size += content[i].nodeSize\n  }\n\n  // :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes between the given two\n  // positions (relative to start of this fragment). Doesn't descend\n  // into a node when the callback returns `false`.\n  nodesBetween(from, to, f, nodeStart = 0, parent) {\n    for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n        let start = pos + 1\n        child.nodesBetween(Math.max(0, from - start),\n                           Math.min(child.content.size, to - start),\n                           f, nodeStart + start)\n      }\n      pos = end\n    }\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. The callback\n  // may return `false` to prevent traversal of a given node's children.\n  descendants(f) {\n    this.nodesBetween(0, this.size, f)\n  }\n\n  // : (number, number, ?string, ?string) → string\n  textBetween(from, to, blockSeparator, leafText) {\n    let text = \"\", separated = true\n    this.nodesBetween(from, to, (node, pos) => {\n      if (node.isText) {\n        text += node.text.slice(Math.max(from, pos) - pos, to - pos)\n        separated = !blockSeparator\n      } else if (node.isLeaf && leafText) {\n        text += leafText\n        separated = !blockSeparator\n      } else if (!separated && node.isBlock) {\n        text += blockSeparator\n        separated = true\n      }\n    }, 0)\n    return text\n  }\n\n  // :: (Fragment) → Fragment\n  // Create a new fragment containing the combined content of this\n  // fragment and the other.\n  append(other) {\n    if (!other.size) return this\n    if (!this.size) return other\n    let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0\n    if (last.isText && last.sameMarkup(first)) {\n      content[content.length - 1] = last.withText(last.text + first.text)\n      i = 1\n    }\n    for (; i < other.content.length; i++) content.push(other.content[i])\n    return new Fragment(content, this.size + other.size)\n  }\n\n  // :: (number, ?number) → Fragment\n  // Cut out the sub-fragment between the two given positions.\n  cut(from, to) {\n    if (to == null) to = this.size\n    if (from == 0 && to == this.size) return this\n    let result = [], size = 0\n    if (to > from) for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from) {\n        if (pos < from || end > to) {\n          if (child.isText)\n            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos))\n          else\n            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1))\n        }\n        result.push(child)\n        size += child.nodeSize\n      }\n      pos = end\n    }\n    return new Fragment(result, size)\n  }\n\n  cutByIndex(from, to) {\n    if (from == to) return Fragment.empty\n    if (from == 0 && to == this.content.length) return this\n    return new Fragment(this.content.slice(from, to))\n  }\n\n  // :: (number, Node) → Fragment\n  // Create a new fragment in which the node at the given index is\n  // replaced by the given node.\n  replaceChild(index, node) {\n    let current = this.content[index]\n    if (current == node) return this\n    let copy = this.content.slice()\n    let size = this.size + node.nodeSize - current.nodeSize\n    copy[index] = node\n    return new Fragment(copy, size)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by prepending the given node to this\n  // fragment.\n  addToStart(node) {\n    return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by appending the given node to this\n  // fragment.\n  addToEnd(node) {\n    return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n  }\n\n  // :: (Fragment) → bool\n  // Compare this fragment to another one.\n  eq(other) {\n    if (this.content.length != other.content.length) return false\n    for (let i = 0; i < this.content.length; i++)\n      if (!this.content[i].eq(other.content[i])) return false\n    return true\n  }\n\n  // :: ?Node\n  // The first child of the fragment, or `null` if it is empty.\n  get firstChild() { return this.content.length ? this.content[0] : null }\n\n  // :: ?Node\n  // The last child of the fragment, or `null` if it is empty.\n  get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null }\n\n  // :: number\n  // The number of child nodes in this fragment.\n  get childCount() { return this.content.length }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raise an error when the\n  // index is out of range.\n  child(index) {\n    let found = this.content[index]\n    if (!found) throw new RangeError(\"Index \" + index + \" out of range for \" + this)\n    return found\n  }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) {\n    return this.content[index]\n  }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) {\n    for (let i = 0, p = 0; i < this.content.length; i++) {\n      let child = this.content[i]\n      f(child, p, i)\n      p += child.nodeSize\n    }\n  }\n\n  // :: (Fragment) → ?number\n  // Find the first position at which this fragment and another\n  // fragment differ, or `null` if they are the same.\n  findDiffStart(other, pos = 0) {\n    return findDiffStart(this, other, pos)\n  }\n\n  // :: (Fragment) → ?{a: number, b: number}\n  // Find the first position, searching from the end, at which this\n  // fragment and the given fragment differ, or `null` if they are the\n  // same. Since this position will not be the same in both nodes, an\n  // object with two separate positions is returned.\n  findDiffEnd(other, pos = this.size, otherPos = other.size) {\n    return findDiffEnd(this, other, pos, otherPos)\n  }\n\n  // : (number, ?number) → {index: number, offset: number}\n  // Find the index and inner offset corresponding to a given relative\n  // position in this fragment. The result object will be reused\n  // (overwritten) the next time the function is called. (Not public.)\n  findIndex(pos, round = -1) {\n    if (pos == 0) return retIndex(0, pos)\n    if (pos == this.size) return retIndex(this.content.length, pos)\n    if (pos > this.size || pos < 0) throw new RangeError(`Position ${pos} outside of fragment (${this})`)\n    for (let i = 0, curPos = 0;; i++) {\n      let cur = this.child(i), end = curPos + cur.nodeSize\n      if (end >= pos) {\n        if (end == pos || round > 0) return retIndex(i + 1, end)\n        return retIndex(i, curPos)\n      }\n      curPos = end\n    }\n  }\n\n  // :: () → string\n  // Return a debugging string that describes this fragment.\n  toString() { return \"<\" + this.toStringInner() + \">\" }\n\n  toStringInner() { return this.content.join(\", \") }\n\n  // :: () → ?Object\n  // Create a JSON-serializeable representation of this fragment.\n  toJSON() {\n    return this.content.length ? this.content.map(n => n.toJSON()) : null\n  }\n\n  // :: (Schema, ?Object) → Fragment\n  // Deserialize a fragment from its JSON representation.\n  static fromJSON(schema, value) {\n    if (!value) return Fragment.empty\n    if (!Array.isArray(value)) throw new RangeError(\"Invalid input for Fragment.fromJSON\")\n    return new Fragment(value.map(schema.nodeFromJSON))\n  }\n\n  // :: ([Node]) → Fragment\n  // Build a fragment from an array of nodes. Ensures that adjacent\n  // text nodes with the same marks are joined together.\n  static fromArray(array) {\n    if (!array.length) return Fragment.empty\n    let joined, size = 0\n    for (let i = 0; i < array.length; i++) {\n      let node = array[i]\n      size += node.nodeSize\n      if (i && node.isText && array[i - 1].sameMarkup(node)) {\n        if (!joined) joined = array.slice(0, i)\n        joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text)\n      } else if (joined) {\n        joined.push(node)\n      }\n    }\n    return new Fragment(joined || array, size)\n  }\n\n  // :: (?union<Fragment, Node, [Node]>) → Fragment\n  // Create a fragment from something that can be interpreted as a set\n  // of nodes. For `null`, it returns the empty fragment. For a\n  // fragment, the fragment itself. For a node or array of nodes, a\n  // fragment containing those nodes.\n  static from(nodes) {\n    if (!nodes) return Fragment.empty\n    if (nodes instanceof Fragment) return nodes\n    if (Array.isArray(nodes)) return this.fromArray(nodes)\n    if (nodes.attrs) return new Fragment([nodes], nodes.nodeSize)\n    throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                         (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n  }\n}\n\nconst found = {index: 0, offset: 0}\nfunction retIndex(index, offset) {\n  found.index = index\n  found.offset = offset\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0)\n","export function compareDeep(a, b) {\n  if (a === b) return true\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) return false\n  let array = Array.isArray(a)\n  if (Array.isArray(b) != array) return false\n  if (array) {\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++) if (!compareDeep(a[i], b[i])) return false\n  } else {\n    for (let p in a) if (!(p in b) || !compareDeep(a[p], b[p])) return false\n    for (let p in b) if (!(p in a)) return false\n  }\n  return true\n}\n","// :: (node: ProseMirrorNode, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Flattens descendants of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const children = flatten(node);\n// ```\nexport const flatten = (node, descend = true) => {\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  }\n  const result = [];\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos });\n    if (!descend) {\n      return false;\n    }\n  });\n  return result;\n};\n\n// :: (node: ProseMirrorNode, predicate: (node: ProseMirrorNode) → boolean, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Iterates over descendants of a given `node`, returning child nodes predicate returns truthy for. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const textNodes = findChildren(node, child => child.isText, false);\n// ```\nexport const findChildren = (node, predicate, descend) => {\n  if (!node) {\n    throw new Error('Invalid \"node\" parameter');\n  } else if (!predicate) {\n    throw new Error('Invalid \"predicate\" parameter');\n  }\n  return flatten(node, descend).filter(child => predicate(child.node));\n};\n\n// :: (node: ProseMirrorNode, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Returns text nodes of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const textNodes = findTextNodes(node);\n// ```\nexport const findTextNodes = (node, descend) => {\n  return findChildren(node, child => child.isText, descend);\n};\n\n// :: (node: ProseMirrorNode, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Returns inline nodes of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const inlineNodes = findInlineNodes(node);\n// ```\nexport const findInlineNodes = (node, descend) => {\n  return findChildren(node, child => child.isInline, descend);\n};\n\n// :: (node: ProseMirrorNode, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Returns block descendants of a given `node`. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const blockNodes = findBlockNodes(node);\n// ```\nexport const findBlockNodes = (node, descend) => {\n  return findChildren(node, child => child.isBlock, descend);\n};\n\n// :: (node: ProseMirrorNode, predicate: (attrs: ?Object) → boolean, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Iterates over descendants of a given `node`, returning child nodes predicate returns truthy for. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const mergedCells = findChildrenByAttr(table, attrs => attrs.colspan === 2);\n// ```\nexport const findChildrenByAttr = (node, predicate, descend) => {\n  return findChildren(node, child => !!predicate(child.attrs), descend);\n};\n\n// :: (node: ProseMirrorNode, nodeType: NodeType, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Iterates over descendants of a given `node`, returning child nodes of a given nodeType. It doesn't descend into a node when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const cells = findChildrenByType(table, schema.nodes.tableCell);\n// ```\nexport const findChildrenByType = (node, nodeType, descend) => {\n  return findChildren(node, child => child.type === nodeType, descend);\n};\n\n// :: (node: ProseMirrorNode, markType: markType, descend: ?boolean) → [{ node: ProseMirrorNode, pos: number }]\n// Iterates over descendants of a given `node`, returning child nodes that have a mark of a given markType. It doesn't descend into a `node` when descend argument is `false` (defaults to `true`).\n//\n// ```javascript\n// const nodes = findChildrenByMark(state.doc, schema.marks.strong);\n// ```\nexport const findChildrenByMark = (node, markType, descend) => {\n  return findChildren(node, child => markType.isInSet(child.marks), descend);\n};\n\n// :: (node: ProseMirrorNode, nodeType: NodeType) → boolean\n// Returns `true` if a given node contains nodes of a given `nodeType`\n//\n// ```javascript\n// if (contains(panel, schema.nodes.listItem)) {\n//   // ...\n// }\n// ```\nexport const contains = (node, nodeType) => {\n  return !!findChildrenByType(node, nodeType).length;\n};\n","import {Fragment} from \"./fragment\"\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nexport class ContentMatch {\n  constructor(validEnd) {\n    // :: bool\n    // True when this match state represents a valid end of the node.\n    this.validEnd = validEnd\n    this.next = []\n    this.wrapCache = []\n  }\n\n  static parse(string, nodeTypes) {\n    let stream = new TokenStream(string, nodeTypes)\n    if (stream.next == null) return ContentMatch.empty\n    let expr = parseExpr(stream)\n    if (stream.next) stream.err(\"Unexpected trailing text\")\n    let match = dfa(nfa(expr))\n    checkForDeadEnds(match, stream)\n    return match\n  }\n\n  // :: (NodeType) → ?ContentMatch\n  // Match a node type, returning a match after that node if\n  // successful.\n  matchType(type) {\n    for (let i = 0; i < this.next.length; i += 2)\n      if (this.next[i] == type) return this.next[i + 1]\n    return null\n  }\n\n  // :: (Fragment, ?number, ?number) → ?ContentMatch\n  // Try to match a fragment. Returns the resulting match when\n  // successful.\n  matchFragment(frag, start = 0, end = frag.childCount) {\n    let cur = this\n    for (let i = start; cur && i < end; i++)\n      cur = cur.matchType(frag.child(i).type)\n    return cur\n  }\n\n  get inlineContent() {\n    let first = this.next[0]\n    return first ? first.isInline : false\n  }\n\n  // :: ?NodeType\n  // Get the first matching node type at this match position that can\n  // be generated.\n  get defaultType() {\n    for (let i = 0; i < this.next.length; i += 2) {\n      let type = this.next[i]\n      if (!(type.isText || type.hasRequiredAttrs())) return type\n    }\n  }\n\n  compatible(other) {\n    for (let i = 0; i < this.next.length; i += 2)\n      for (let j = 0; j < other.next.length; j += 2)\n        if (this.next[i] == other.next[j]) return true\n    return false\n  }\n\n  // :: (Fragment, bool, ?number) → ?Fragment\n  // Try to match the given fragment, and if that fails, see if it can\n  // be made to match by inserting nodes in front of it. When\n  // successful, return a fragment of inserted nodes (which may be\n  // empty if nothing had to be inserted). When `toEnd` is true, only\n  // return a fragment if the resulting match goes to the end of the\n  // content expression.\n  fillBefore(after, toEnd = false, startIndex = 0) {\n    let seen = [this]\n    function search(match, types) {\n      let finished = match.matchFragment(after, startIndex)\n      if (finished && (!toEnd || finished.validEnd))\n        return Fragment.from(types.map(tp => tp.createAndFill()))\n\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i], next = match.next[i + 1]\n        if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n          seen.push(next)\n          let found = search(next, types.concat(type))\n          if (found) return found\n        }\n      }\n    }\n\n    return search(this, [])\n  }\n\n  // :: (NodeType) → ?[NodeType]\n  // Find a set of wrapping node types that would allow a node of the\n  // given type to appear at this position. The result may be empty\n  // (when it fits directly) and will be null when no such wrapping\n  // exists.\n  findWrapping(target) {\n    for (let i = 0; i < this.wrapCache.length; i += 2)\n      if (this.wrapCache[i] == target) return this.wrapCache[i + 1]\n    let computed = this.computeWrapping(target)\n    this.wrapCache.push(target, computed)\n    return computed\n  }\n\n  computeWrapping(target) {\n    let seen = Object.create(null), active = [{match: this, type: null, via: null}]\n    while (active.length) {\n      let current = active.shift(), match = current.match\n      if (match.matchType(target)) {\n        let result = []\n        for (let obj = current; obj.type; obj = obj.via)\n          result.push(obj.type)\n        return result.reverse()\n      }\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i]\n        if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n          active.push({match: type.contentMatch, type, via: current})\n          seen[type.name] = true\n        }\n      }\n    }\n  }\n\n  // :: number\n  // The number of outgoing edges this node has in the finite\n  // automaton that describes the content expression.\n  get edgeCount() {\n    return this.next.length >> 1\n  }\n\n  // :: (number) → {type: NodeType, next: ContentMatch}\n  // Get the _n_​th outgoing edge from this node in the finite\n  // automaton that describes the content expression.\n  edge(n) {\n    let i = n << 1\n    if (i >= this.next.length) throw new RangeError(`There's no ${n}th edge in this content match`)\n    return {type: this.next[i], next: this.next[i + 1]}\n  }\n\n  toString() {\n    let seen = []\n    function scan(m) {\n      seen.push(m)\n      for (let i = 1; i < m.next.length; i += 2)\n        if (seen.indexOf(m.next[i]) == -1) scan(m.next[i])\n    }\n    scan(this)\n    return seen.map((m, i) => {\n      let out = i + (m.validEnd ? \"*\" : \" \") + \" \"\n      for (let i = 0; i < m.next.length; i += 2)\n        out += (i ? \", \" : \"\") + m.next[i].name + \"->\" + seen.indexOf(m.next[i + 1])\n      return out\n    }).join(\"\\n\")\n  }\n}\n\nContentMatch.empty = new ContentMatch(true)\n\nclass TokenStream {\n  constructor(string, nodeTypes) {\n    this.string = string\n    this.nodeTypes = nodeTypes\n    this.inline = null\n    this.pos = 0\n    this.tokens = string.split(/\\s*(?=\\b|\\W|$)/)\n    if (this.tokens[this.tokens.length - 1] == \"\") this.tokens.pop()\n    if (this.tokens[0] == \"\") this.tokens.unshift()\n  }\n\n  get next() { return this.tokens[this.pos] }\n\n  eat(tok) { return this.next == tok && (this.pos++ || true) }\n\n  err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") }\n}\n\nfunction parseExpr(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSeq(stream)) }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n}\n\nfunction parseExprSeq(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSubscript(stream)) }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  let expr = parseExprAtom(stream)\n  for (;;) {\n    if (stream.eat(\"+\"))\n      expr = {type: \"plus\", expr}\n    else if (stream.eat(\"*\"))\n      expr = {type: \"star\", expr}\n    else if (stream.eat(\"?\"))\n      expr = {type: \"opt\", expr}\n    else if (stream.eat(\"{\"))\n      expr = parseExprRange(stream, expr)\n    else break\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) stream.err(\"Expected number, got '\" + stream.next + \"'\")\n  let result = Number(stream.next)\n  stream.pos++\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  let min = parseNum(stream), max = min\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") max = parseNum(stream)\n    else max = -1\n  }\n  if (!stream.eat(\"}\")) stream.err(\"Unclosed braced range\")\n  return {type: \"range\", min, max, expr}\n}\n\nfunction resolveName(stream, name) {\n  let types = stream.nodeTypes, type = types[name]\n  if (type) return [type]\n  let result = []\n  for (let typeName in types) {\n    let type = types[typeName]\n    if (type.groups.indexOf(name) > -1) result.push(type)\n  }\n  if (result.length == 0) stream.err(\"No node type or group '\" + name + \"' found\")\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    let expr = parseExpr(stream)\n    if (!stream.eat(\")\")) stream.err(\"Missing closing paren\")\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    let exprs = resolveName(stream, stream.next).map(type => {\n      if (stream.inline == null) stream.inline = type.isInline\n      else if (stream.inline != type.isInline) stream.err(\"Mixing inline and block content\")\n      return {type: \"name\", value: type}\n    })\n    stream.pos++\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\")\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  let nfa = [[]]\n  connect(compile(expr, 0), node())\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    let edge = {term, to}\n    nfa[from].push(edge)\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(edge => edge.to = to) }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), [])\n    } else if (expr.type == \"seq\") {\n      for (let i = 0;; i++) {\n        let next = compile(expr.exprs[i], from)\n        if (i == expr.exprs.length - 1) return next\n        connect(next, from = node())\n      }\n    } else if (expr.type == \"star\") {\n      let loop = node()\n      edge(from, loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      let loop = node()\n      connect(compile(expr.expr, from), loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      let cur = from\n      for (let i = 0; i < expr.min; i++) {\n        let next = node()\n        connect(compile(expr.expr, cur), next)\n        cur = next\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur)\n      } else {\n        for (let i = expr.min; i < expr.max; i++) {\n          let next = node()\n          edge(cur, next)\n          connect(compile(expr.expr, cur), next)\n          cur = next\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  let result = []\n  scan(node)\n  return result.sort(cmp)\n\n  function scan(node) {\n    let edges = nfa[node]\n    if (edges.length == 1 && !edges[0].term) return scan(edges[0].to)\n    result.push(node)\n    for (let i = 0; i < edges.length; i++) {\n      let {term, to} = edges[i]\n      if (!term && result.indexOf(to) == -1) scan(to)\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  let labeled = Object.create(null)\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    let out = []\n    states.forEach(node => {\n      nfa[node].forEach(({term, to}) => {\n        if (!term) return\n        let known = out.indexOf(term), set = known > -1 && out[known + 1]\n        nullFrom(nfa, to).forEach(node => {\n          if (!set) out.push(term, set = [])\n          if (set.indexOf(node) == -1) set.push(node)\n        })\n      })\n    })\n    let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1)\n    for (let i = 0; i < out.length; i += 2) {\n      let states = out[i + 1].sort(cmp)\n      state.next.push(out[i], labeled[states.join(\",\")] || explore(states))\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (let i = 0, work = [match]; i < work.length; i++) {\n    let state = work[i], dead = !state.validEnd, nodes = []\n    for (let j = 0; j < state.next.length; j += 2) {\n      let node = state.next[j], next = state.next[j + 1]\n      nodes.push(node.name)\n      if (dead && !(node.isText || node.hasRequiredAttrs())) dead = false\n      if (work.indexOf(next) == -1) work.push(next)\n    }\n    if (dead) stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\")\n  }\n}\n","// Helper for creating a schema that supports tables.\n\nfunction getCellAttrs(dom, extraAttrs) {\n  let widthAttr = dom.getAttribute(\"data-colwidth\")\n  let widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map(s => Number(s)) : null\n  let colspan = Number(dom.getAttribute(\"colspan\") || 1)\n  let result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  }\n  for (let prop in extraAttrs) {\n    let getter = extraAttrs[prop].getFromDOM\n    let value = getter && getter(dom)\n    if (value != null) result[prop] = value\n  }\n  return result\n}\n\nfunction setCellAttrs(node, extraAttrs) {\n  let attrs = {}\n  if (node.attrs.colspan != 1) attrs.colspan = node.attrs.colspan\n  if (node.attrs.rowspan != 1) attrs.rowspan = node.attrs.rowspan\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\")\n  for (let prop in extraAttrs) {\n    let setter = extraAttrs[prop].setDOMAttr\n    if (setter) setter(node.attrs[prop], attrs)\n  }\n  return attrs\n}\n\n// :: (Object) → Object\n//\n// This function creates a set of [node\n// specs](http://prosemirror.net/docs/ref/#model.SchemaSpec.nodes) for\n// `table`, `table_row`, and `table_cell` nodes types as used by this\n// module. The result can then be added to the set of nodes when\n// creating a a schema.\n//\n//   options::- The following options are understood:\n//\n//     tableGroup:: ?string\n//     A group name (something like `\"block\"`) to add to the table\n//     node type.\n//\n//     cellContent:: string\n//     The content expression for table cells.\n//\n//     cellAttributes:: ?Object\n//     Additional attributes to add to cells. Maps attribute names to\n//     objects with the following properties:\n//\n//       default:: any\n//       The attribute's default value.\n//\n//       getFromDOM:: ?(dom.Node) → any\n//       A function to read the attribute's value from a DOM node.\n//\n//       setDOMAttr:: ?(value: any, attrs: Object)\n//       A function to add the attribute's value to an attribute\n//       object that's used to render the cell's DOM.\nexport function tableNodes(options) {\n  let extraAttrs = options.cellAttributes || {}\n  let cellAttrs = {\n    colspan: {default: 1},\n    rowspan: {default: 1},\n    colwidth: {default: null}\n  }\n  for (let prop in extraAttrs)\n    cellAttrs[prop] = {default: extraAttrs[prop].default}\n\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{tag: \"table\"}],\n      toDOM() { return [\"table\", [\"tbody\", 0]] }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{tag: \"tr\"}],\n      toDOM() { return [\"tr\", 0] }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [{tag: \"td\", getAttrs: dom => getCellAttrs(dom, extraAttrs)}],\n      toDOM(node) { return [\"td\", setCellAttrs(node, extraAttrs), 0] }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [{tag: \"th\", getAttrs: dom => getCellAttrs(dom, extraAttrs)}],\n      toDOM(node) { return [\"th\", setCellAttrs(node, extraAttrs), 0] }\n    }\n  }\n}\n\nexport function tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {}\n    for (let name in schema.nodes) {\n      let type = schema.nodes[name], role = type.spec.tableRole\n      if (role) result[role] = type\n    }\n  }\n  return result\n}\n","import {Fragment} from \"./fragment\"\nimport {Slice} from \"./replace\"\nimport {Mark} from \"./mark\"\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   propery's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.)\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nexport class DOMParser {\n  // :: (Schema, [ParseRule])\n  // Create a parser that targets the given schema, using the given\n  // parsing rules.\n  constructor(schema, rules) {\n    // :: Schema\n    // The schema into which the parser parses.\n    this.schema = schema\n    // :: [ParseRule]\n    // The set of [parse rules](#model.ParseRule) that the parser\n    // uses, in order of precedence.\n    this.rules = rules\n    this.tags = []\n    this.styles = []\n\n    rules.forEach(rule => {\n      if (rule.tag) this.tags.push(rule)\n      else if (rule.style) this.styles.push(rule)\n    })\n\n    // Only normalize list elements when lists in the schema can't directly contain themselves\n    this.normalizeLists = !this.tags.some(r => {\n      if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) return false\n      let node = schema.nodes[r.node]\n      return node.contentMatch.matchType(node)\n    })\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Node\n  // Parse a document from the content of a DOM node.\n  parse(dom, options = {}) {\n    let context = new ParseContext(this, options, false)\n    context.addAll(dom, null, options.from, options.to)\n    return context.finish()\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Slice\n  // Parses the content of the given DOM node, like\n  // [`parse`](#model.DOMParser.parse), and takes the same set of\n  // options. But unlike that method, which produces a whole node,\n  // this one returns a slice that is open at the sides, meaning that\n  // the schema constraints aren't applied to the start of nodes to\n  // the left of the input and the end of nodes at the end.\n  parseSlice(dom, options = {}) {\n    let context = new ParseContext(this, options, true)\n    context.addAll(dom, null, options.from, options.to)\n    return Slice.maxOpen(context.finish())\n  }\n\n  matchTag(dom, context) {\n    for (let i = 0; i < this.tags.length; i++) {\n      let rule = this.tags[i]\n      if (matches(dom, rule.tag) &&\n          (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n          (!rule.context || context.matchesContext(rule.context))) {\n        if (rule.getAttrs) {\n          let result = rule.getAttrs(dom)\n          if (result === false) continue\n          rule.attrs = result\n        }\n        return rule\n      }\n    }\n  }\n\n  matchStyle(prop, value, context) {\n    for (let i = 0; i < this.styles.length; i++) {\n      let rule = this.styles[i]\n      if (rule.style.indexOf(prop) != 0 ||\n          rule.context && !context.matchesContext(rule.context) ||\n          // Test that the style string either precisely matches the prop,\n          // or has an '=' sign after the prop, followed by the given\n          // value.\n          rule.style.length > prop.length &&\n          (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n        continue\n      if (rule.getAttrs) {\n        let result = rule.getAttrs(value)\n        if (result === false) continue\n        rule.attrs = result\n      }\n      return rule\n    }\n  }\n\n  // : (Schema) → [ParseRule]\n  static schemaRules(schema) {\n    let result = []\n    function insert(rule) {\n      let priority = rule.priority == null ? 50 : rule.priority, i = 0\n      for (; i < result.length; i++) {\n        let next = result[i], nextPriority = next.priority == null ? 50 : next.priority\n        if (nextPriority < priority) break\n      }\n      result.splice(i, 0, rule)\n    }\n\n    for (let name in schema.marks) {\n      let rules = schema.marks[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.mark = name\n      })\n    }\n    for (let name in schema.nodes) {\n      let rules = schema.nodes[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.node = name\n      })\n    }\n    return result\n  }\n\n  // :: (Schema) → DOMParser\n  // Construct a DOM parser using the parsing rules listed in a\n  // schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n  // [priority](#model.ParseRule.priority).\n  static fromSchema(schema) {\n    return schema.cached.domParser ||\n      (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n  }\n}\n\n// : Object<bool> The block-level tags in HTML5\nconst blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n}\n\n// : Object<bool> The tags that we normally ignore.\nconst ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n}\n\n// : Object<bool> List tags.\nconst listTags = {ol: true, ul: true}\n\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4\n\nfunction wsOptionsFor(preserveWhitespace) {\n  return (preserveWhitespace ? OPT_PRESERVE_WS : 0) | (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0)\n}\n\nclass NodeContext {\n  constructor(type, attrs, marks, pendingMarks, solid, match, options) {\n    this.type = type\n    this.attrs = attrs\n    this.solid = solid\n    this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch)\n    this.options = options\n    this.content = []\n    // Marks applied to this node itself\n    this.marks = marks\n    // Marks applied to its children\n    this.activeMarks = Mark.none\n    // Marks that can't apply here, but will be used in children if possible\n    this.pendingMarks = pendingMarks\n    // Nested Marks with same type\n    this.stashMarks = []\n  }\n\n  findWrapping(node) {\n    if (!this.match) {\n      if (!this.type) return []\n      let fill = this.type.contentMatch.fillBefore(Fragment.from(node))\n      if (fill) {\n        this.match = this.type.contentMatch.matchFragment(fill)\n      } else {\n        let start = this.type.contentMatch, wrap\n        if (wrap = start.findWrapping(node.type)) {\n          this.match = start\n          return wrap\n        } else {\n          return null\n        }\n      }\n    }\n    return this.match.findWrapping(node.type)\n  }\n\n  finish(openEnd) {\n    if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n      let last = this.content[this.content.length - 1], m\n      if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n        if (last.text.length == m[0].length) this.content.pop()\n        else this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length))\n      }\n    }\n    let content = Fragment.from(this.content)\n    if (!openEnd && this.match)\n      content = content.append(this.match.fillBefore(Fragment.empty, true))\n    return this.type ? this.type.create(this.attrs, content, this.marks) : content\n  }\n\n  popFromStashMark(markType) {\n    for (let i = this.stashMarks.length - 1; i >= 0; i--)\n      if (this.stashMarks[i].type == markType) return this.stashMarks.splice(i, 1)[0]\n  }\n\n  applyPending(nextType) {\n    for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n      let mark = pending[i]\n      if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n          !mark.isInSet(this.activeMarks)) {\n        let found = findSameTypeInSet(mark, this.activeMarks);\n        if (found) this.stashMarks.push(found)\n        this.activeMarks = mark.addToSet(this.activeMarks)\n        this.pendingMarks = mark.removeFromSet(this.pendingMarks)\n      }\n    }\n  }\n}\n\nclass ParseContext {\n  // : (DOMParser, Object)\n  constructor(parser, options, open) {\n    // : DOMParser The parser we are using.\n    this.parser = parser\n    // : Object The options passed to this parse.\n    this.options = options\n    this.isOpen = open\n    let topNode = options.topNode, topContext\n    let topOptions = wsOptionsFor(options.preserveWhitespace) | (open ? OPT_OPEN_LEFT : 0)\n    if (topNode)\n      topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                   options.topMatch || topNode.type.contentMatch, topOptions)\n    else if (open)\n      topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions)\n    else\n      topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions)\n    this.nodes = [topContext]\n    // : [Mark] The current set of marks\n    this.open = 0\n    this.find = options.findPositions\n    this.needsBlock = false\n  }\n\n  get top() {\n    return this.nodes[this.open]\n  }\n\n  // : (dom.Node)\n  // Add a DOM node to the content. Text is inserted as text node,\n  // otherwise, the node is passed to `addElement` or, if it has a\n  // `style` attribute, `addElementWithStyles`.\n  addDOM(dom) {\n    if (dom.nodeType == 3) {\n      this.addTextNode(dom)\n    } else if (dom.nodeType == 1) {\n      let style = dom.getAttribute(\"style\")\n      let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.addPendingMark(marks[i])\n      this.addElement(dom)\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.removePendingMark(marks[i], top)\n    }\n  }\n\n  addTextNode(dom) {\n    let value = dom.nodeValue\n    let top = this.top\n    if ((top.type ? top.type.inlineContent : top.content.length && top.content[0].isInline) || /[^ \\t\\r\\n\\u000c]/.test(value)) {\n      if (!(top.options & OPT_PRESERVE_WS)) {\n        value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \")\n        // If this starts with whitespace, and there is no node before it, or\n        // a hard break, or a text node that ends with whitespace, strip the\n        // leading space.\n        if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n          let nodeBefore = top.content[top.content.length - 1]\n          let domNodeBefore = dom.previousSibling\n          if (!nodeBefore ||\n              (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n              (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n            value = value.slice(1)\n        }\n      } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n        value = value.replace(/\\r?\\n|\\r/g, \" \")\n      }\n      if (value) this.insertNode(this.parser.schema.text(value))\n      this.findInText(dom)\n    } else {\n      this.findInside(dom)\n    }\n  }\n\n  // : (dom.Element)\n  // Try to find a handler for the given tag and use that to parse. If\n  // none is found, the element's content nodes are added directly.\n  addElement(dom) {\n    let name = dom.nodeName.toLowerCase()\n    if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) normalizeList(dom)\n    let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) || this.parser.matchTag(dom, this)\n    if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n      this.findInside(dom)\n    } else if (!rule || rule.skip || rule.closeParent) {\n      if (rule && rule.closeParent) this.open = Math.max(0, this.open - 1)\n      else if (rule && rule.skip.nodeType) dom = rule.skip\n      let sync, top = this.top, oldNeedsBlock = this.needsBlock\n      if (blockTags.hasOwnProperty(name)) {\n        sync = true\n        if (!top.type) this.needsBlock = true\n      } else if (!dom.firstChild) {\n        this.leafFallback(dom)\n        return\n      }\n      this.addAll(dom)\n      if (sync) this.sync(top)\n      this.needsBlock = oldNeedsBlock\n    } else {\n      this.addElementByRule(dom, rule)\n    }\n  }\n\n  // Called for leaf DOM nodes that would otherwise be ignored\n  leafFallback(dom) {\n    if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n      this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"))\n  }\n\n  // Run any style parser associated with the node's styles. Either\n  // return an array of marks, or null to indicate some of the styles\n  // had a rule with `ignore` set.\n  readStyles(styles) {\n    let marks = Mark.none\n    for (let i = 0; i < styles.length; i += 2) {\n      let rule = this.parser.matchStyle(styles[i], styles[i + 1], this)\n      if (!rule) continue\n      if (rule.ignore) return null\n      marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks)\n    }\n    return marks\n  }\n\n  // : (dom.Element, ParseRule) → bool\n  // Look up a handler for the given node. If none are found, return\n  // false. Otherwise, apply it, use its return value to drive the way\n  // the node's content is wrapped, and return true.\n  addElementByRule(dom, rule) {\n    let sync, nodeType, markType, mark\n    if (rule.node) {\n      nodeType = this.parser.schema.nodes[rule.node]\n      if (!nodeType.isLeaf) {\n        sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace)\n      } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n        this.leafFallback(dom)\n      }\n    } else {\n      markType = this.parser.schema.marks[rule.mark]\n      mark = markType.create(rule.attrs)\n      this.addPendingMark(mark)\n    }\n    let startIn = this.top\n\n    if (nodeType && nodeType.isLeaf) {\n      this.findInside(dom)\n    } else if (rule.getContent) {\n      this.findInside(dom)\n      rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node))\n    } else {\n      let contentDOM = rule.contentElement\n      if (typeof contentDOM == \"string\") contentDOM = dom.querySelector(contentDOM)\n      else if (typeof contentDOM == \"function\") contentDOM = contentDOM(dom)\n      if (!contentDOM) contentDOM = dom\n      this.findAround(dom, contentDOM, true)\n      this.addAll(contentDOM, sync)\n    }\n    if (sync) { this.sync(startIn); this.open-- }\n    if (mark) this.removePendingMark(mark, startIn)\n  }\n\n  // : (dom.Node, ?NodeBuilder, ?number, ?number)\n  // Add all child nodes between `startIndex` and `endIndex` (or the\n  // whole node, if not given). If `sync` is passed, use it to\n  // synchronize after every block element.\n  addAll(parent, sync, startIndex, endIndex) {\n    let index = startIndex || 0\n    for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n             end = endIndex == null ? null : parent.childNodes[endIndex];\n         dom != end; dom = dom.nextSibling, ++index) {\n      this.findAtPoint(parent, index)\n      this.addDOM(dom)\n      if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n        this.sync(sync)\n    }\n    this.findAtPoint(parent, index)\n  }\n\n  // Try to find a way to fit the given node type into the current\n  // context. May add intermediate wrappers and/or leave non-solid\n  // nodes that we're in.\n  findPlace(node) {\n    let route, sync\n    for (let depth = this.open; depth >= 0; depth--) {\n      let cx = this.nodes[depth]\n      let found = cx.findWrapping(node)\n      if (found && (!route || route.length > found.length)) {\n        route = found\n        sync = cx\n        if (!found.length) break\n      }\n      if (cx.solid) break\n    }\n    if (!route) return false\n    this.sync(sync)\n    for (let i = 0; i < route.length; i++)\n      this.enterInner(route[i], null, false)\n    return true\n  }\n\n  // : (Node) → ?Node\n  // Try to insert the given node, adjusting the context when needed.\n  insertNode(node) {\n    if (node.isInline && this.needsBlock && !this.top.type) {\n      let block = this.textblockFromContext()\n      if (block) this.enterInner(block)\n    }\n    if (this.findPlace(node)) {\n      this.closeExtra()\n      let top = this.top\n      top.applyPending(node.type)\n      if (top.match) top.match = top.match.matchType(node.type)\n      let marks = top.activeMarks\n      for (let i = 0; i < node.marks.length; i++)\n        if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n          marks = node.marks[i].addToSet(marks)\n      top.content.push(node.mark(marks))\n      return true\n    }\n    return false\n  }\n\n  // : (NodeType, ?Object) → bool\n  // Try to start a node of the given type, adjusting the context when\n  // necessary.\n  enter(type, attrs, preserveWS) {\n    let ok = this.findPlace(type.create(attrs))\n    if (ok) this.enterInner(type, attrs, true, preserveWS)\n    return ok\n  }\n\n  // Open a node of the given type\n  enterInner(type, attrs, solid, preserveWS) {\n    this.closeExtra()\n    let top = this.top\n    top.applyPending(type)\n    top.match = top.match && top.match.matchType(type, attrs)\n    let options = preserveWS == null ? top.options & ~OPT_OPEN_LEFT : wsOptionsFor(preserveWS)\n    if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) options |= OPT_OPEN_LEFT\n    this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options))\n    this.open++\n  }\n\n  // Make sure all nodes above this.open are finished and added to\n  // their parents\n  closeExtra(openEnd) {\n    let i = this.nodes.length - 1\n    if (i > this.open) {\n      for (; i > this.open; i--) this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd))\n      this.nodes.length = this.open + 1\n    }\n  }\n\n  finish() {\n    this.open = 0\n    this.closeExtra(this.isOpen)\n    return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n  }\n\n  sync(to) {\n    for (let i = this.open; i >= 0; i--) if (this.nodes[i] == to) {\n      this.open = i\n      return\n    }\n  }\n\n  get currentPos() {\n    this.closeExtra()\n    let pos = 0\n    for (let i = this.open; i >= 0; i--) {\n      let content = this.nodes[i].content\n      for (let j = content.length - 1; j >= 0; j--)\n        pos += content[j].nodeSize\n      if (i) pos++\n    }\n    return pos\n  }\n\n  findAtPoint(parent, offset) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == parent && this.find[i].offset == offset)\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findInside(parent) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findAround(parent, content, before) {\n    if (parent != content && this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n        let pos = content.compareDocumentPosition(this.find[i].node)\n        if (pos & (before ? 2 : 4))\n          this.find[i].pos = this.currentPos\n      }\n    }\n  }\n\n  findInText(textNode) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == textNode)\n        this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset)\n    }\n  }\n\n  // : (string) → bool\n  // Determines whether the given [context\n  // string](#ParseRule.context) matches this context.\n  matchesContext(context) {\n    if (context.indexOf(\"|\") > -1)\n      return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this)\n\n    let parts = context.split(\"/\")\n    let option = this.options.context\n    let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type)\n    let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1)\n    let match = (i, depth) => {\n      for (; i >= 0; i--) {\n        let part = parts[i]\n        if (part == \"\") {\n          if (i == parts.length - 1 || i == 0) continue\n          for (; depth >= minDepth; depth--)\n            if (match(i - 1, depth)) return true\n          return false\n        } else {\n          let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n              : option && depth >= minDepth ? option.node(depth - minDepth).type\n              : null\n          if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n            return false\n          depth--\n        }\n      }\n      return true\n    }\n    return match(parts.length - 1, this.open)\n  }\n\n  textblockFromContext() {\n    let $context = this.options.context\n    if ($context) for (let d = $context.depth; d >= 0; d--) {\n      let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType\n      if (deflt && deflt.isTextblock && deflt.defaultAttrs) return deflt\n    }\n    for (let name in this.parser.schema.nodes) {\n      let type = this.parser.schema.nodes[name]\n      if (type.isTextblock && type.defaultAttrs) return type\n    }\n  }\n\n  addPendingMark(mark) {\n    let found = findSameTypeInSet(mark, this.top.pendingMarks)\n    if (found) this.top.stashMarks.push(found)\n    this.top.pendingMarks = mark.addToSet(this.top.pendingMarks)\n  }\n\n  removePendingMark(mark, upto) {\n    for (let depth = this.open; depth >= 0; depth--) {\n      let level = this.nodes[depth]\n      let found = level.pendingMarks.lastIndexOf(mark)\n      if (found > -1) {\n        level.pendingMarks = mark.removeFromSet(level.pendingMarks)\n      } else {\n        level.activeMarks = mark.removeFromSet(level.activeMarks)\n        let stashMark = level.popFromStashMark(mark.type)\n        if (stashMark) level.activeMarks = stashMark.addToSet(level.activeMarks)\n      }\n      if (level == upto) break\n    }\n  }\n}\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child)\n      child = prevItem\n    } else if (name == \"li\") {\n      prevItem = child\n    } else if (name) {\n      prevItem = null\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = []\n  while (m = re.exec(style)) result.push(m[1], m[2].trim())\n  return result\n}\n\nfunction copy(obj) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  let nodes = nodeType.schema.nodes\n  for (let name in nodes) {\n    let parent = nodes[name]\n    if (!parent.allowsMarkType(markType)) continue\n    let seen = [], scan = match => {\n      seen.push(match)\n      for (let i = 0; i < match.edgeCount; i++) {\n        let {type, next} = match.edge(i)\n        if (type == nodeType) return true\n        if (seen.indexOf(next) < 0 && scan(next)) return true\n      }\n    }\n    if (scan(parent.contentMatch)) return true\n  }\n}\n\nfunction findSameTypeInSet(mark, set) {\n  for (let i = 0; i < set.length; i++) {\n    if (mark.type == set[i].type) return set[i]\n  }\n}\n","// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nexport class DOMSerializer {\n  // :: (Object<(node: Node) → DOMOutputSpec>, Object<?(mark: Mark, inline: bool) → DOMOutputSpec>)\n  // Create a serializer. `nodes` should map node names to functions\n  // that take a node and return a description of the corresponding\n  // DOM. `marks` does the same for mark names, but also gets an\n  // argument that tells it whether the mark's content is block or\n  // inline content (for typical use, it'll always be inline). A mark\n  // serializer may be `null` to indicate that marks of that type\n  // should not be serialized.\n  constructor(nodes, marks) {\n    // :: Object<(node: Node) → DOMOutputSpec>\n    // The node serialization functions.\n    this.nodes = nodes || {}\n    // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n    // The mark serialization functions.\n    this.marks = marks || {}\n  }\n\n  // :: (Fragment, ?Object) → dom.DocumentFragment\n  // Serialize the content of this fragment to a DOM fragment. When\n  // not in the browser, the `document` option, containing a DOM\n  // document, should be passed so that the serializer can create\n  // nodes.\n  serializeFragment(fragment, options = {}, target) {\n    if (!target) target = doc(options).createDocumentFragment()\n\n    let top = target, active = null\n    fragment.forEach(node => {\n      if (active || node.marks.length) {\n        if (!active) active = []\n        let keep = 0, rendered = 0\n        while (keep < active.length && rendered < node.marks.length) {\n          let next = node.marks[rendered]\n          if (!this.marks[next.type.name]) { rendered++; continue }\n          if (!next.eq(active[keep]) || next.type.spec.spanning === false) break\n          keep += 2; rendered++\n        }\n        while (keep < active.length) {\n          top = active.pop()\n          active.pop()\n        }\n        while (rendered < node.marks.length) {\n          let add = node.marks[rendered++]\n          let markDOM = this.serializeMark(add, node.isInline, options)\n          if (markDOM) {\n            active.push(add, top)\n            top.appendChild(markDOM.dom)\n            top = markDOM.contentDOM || markDOM.dom\n          }\n        }\n      }\n      top.appendChild(this.serializeNode(node, options))\n    })\n\n    return target\n  }\n\n  // :: (Node, ?Object) → dom.Node\n  // Serialize this node to a DOM node. This can be useful when you\n  // need to serialize a part of a document, as opposed to the whole\n  // document. To serialize a whole document, use\n  // [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n  // its [content](#model.Node.content).\n  serializeNode(node, options = {}) {\n    let {dom, contentDOM} =\n        DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node))\n    if (contentDOM) {\n      if (node.isLeaf)\n        throw new RangeError(\"Content hole not allowed in a leaf node spec\")\n      if (options.onContent)\n        options.onContent(node, contentDOM, options)\n      else\n        this.serializeFragment(node.content, options, contentDOM)\n    }\n    return dom\n  }\n\n  serializeNodeAndMarks(node, options = {}) {\n    let dom = this.serializeNode(node, options)\n    for (let i = node.marks.length - 1; i >= 0; i--) {\n      let wrap = this.serializeMark(node.marks[i], node.isInline, options)\n      if (wrap) {\n        ;(wrap.contentDOM || wrap.dom).appendChild(dom)\n        dom = wrap.dom\n      }\n    }\n    return dom\n  }\n\n  serializeMark(mark, inline, options = {}) {\n    let toDOM = this.marks[mark.type.name]\n    return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n  }\n\n  // :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n  // Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n  // the spec has a hole (zero) in it, `contentDOM` will point at the\n  // node with the hole.\n  static renderSpec(doc, structure, xmlNS = null) {\n    if (typeof structure == \"string\")\n      return {dom: doc.createTextNode(structure)}\n    if (structure.nodeType != null)\n      return {dom: structure}\n    let tagName = structure[0], space = tagName.indexOf(\" \")\n    if (space > 0) {\n      xmlNS = tagName.slice(0, space)\n      tagName = tagName.slice(space + 1)\n    }\n    let contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName)\n    let attrs = structure[1], start = 1\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n      start = 2\n      for (let name in attrs) if (attrs[name] != null) {\n        let space = name.indexOf(\" \")\n        if (space > 0) dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name])\n        else dom.setAttribute(name, attrs[name])\n      }\n    }\n    for (let i = start; i < structure.length; i++) {\n      let child = structure[i]\n      if (child === 0) {\n        if (i < structure.length - 1 || i > start)\n          throw new RangeError(\"Content hole must be the only child of its parent node\")\n        return {dom, contentDOM: dom}\n      } else {\n        let {dom: inner, contentDOM: innerContent} = DOMSerializer.renderSpec(doc, child, xmlNS)\n        dom.appendChild(inner)\n        if (innerContent) {\n          if (contentDOM) throw new RangeError(\"Multiple content holes\")\n          contentDOM = innerContent\n        }\n      }\n    }\n    return {dom, contentDOM}\n  }\n\n  // :: (Schema) → DOMSerializer\n  // Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n  // properties in a schema's node and mark specs.\n  static fromSchema(schema) {\n    return schema.cached.domSerializer ||\n      (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n  }\n\n  // : (Schema) → Object<(node: Node) → DOMOutputSpec>\n  // Gather the serializers in a schema's node specs into an object.\n  // This can be useful as a base to build a custom serializer from.\n  static nodesFromSchema(schema) {\n    let result = gatherToDOM(schema.nodes)\n    if (!result.text) result.text = node => node.text\n    return result\n  }\n\n  // : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n  // Gather the serializers in a schema's mark specs into an object.\n  static marksFromSchema(schema) {\n    return gatherToDOM(schema.marks)\n  }\n}\n\nfunction gatherToDOM(obj) {\n  let result = {}\n  for (let name in obj) {\n    let toDOM = obj[name].spec.toDOM\n    if (toDOM) result[name] = toDOM\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n","import {Mark} from \"./mark\"\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nexport class ResolvedPos {\n  constructor(pos, path, parentOffset) {\n    // :: number The position that was resolved.\n    this.pos = pos\n    this.path = path\n    // :: number\n    // The number of levels the parent node is from the root. If this\n    // position points directly into the root node, it is 0. If it\n    // points into a top-level paragraph, 1, and so on.\n    this.depth = path.length / 3 - 1\n    // :: number The offset this position has into its parent node.\n    this.parentOffset = parentOffset\n  }\n\n  resolveDepth(val) {\n    if (val == null) return this.depth\n    if (val < 0) return this.depth + val\n    return val\n  }\n\n  // :: Node\n  // The parent node that the position points into. Note that even if\n  // a position points into a text node, that node is not considered\n  // the parent—text nodes are ‘flat’ in this model, and have no content.\n  get parent() { return this.node(this.depth) }\n\n  // :: Node\n  // The root node in which the position was resolved.\n  get doc() { return this.node(0) }\n\n  // :: (?number) → Node\n  // The ancestor node at the given level. `p.node(p.depth)` is the\n  // same as `p.parent`.\n  node(depth) { return this.path[this.resolveDepth(depth) * 3] }\n\n  // :: (?number) → number\n  // The index into the ancestor at the given level. If this points at\n  // the 3rd node in the 2nd paragraph on the top level, for example,\n  // `p.index(0)` is 1 and `p.index(1)` is 2.\n  index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1] }\n\n  // :: (?number) → number\n  // The index pointing after this position into the ancestor at the\n  // given level.\n  indexAfter(depth) {\n    depth = this.resolveDepth(depth)\n    return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the start of the node at the given\n  // level.\n  start(depth) {\n    depth = this.resolveDepth(depth)\n    return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the end of the node at the given\n  // level.\n  end(depth) {\n    depth = this.resolveDepth(depth)\n    return this.start(depth) + this.node(depth).content.size\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly before the wrapping node at the\n  // given level, or, when `depth` is `this.depth + 1`, the original\n  // position.\n  before(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position before the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly after the wrapping node at the\n  // given level, or the original position when `depth` is `this.depth + 1`.\n  after(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position after the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n  }\n\n  // :: number\n  // When this position points into a text node, this returns the\n  // distance between the position and the start of the text node.\n  // Will be zero for positions that point between nodes.\n  get textOffset() { return this.pos - this.path[this.path.length - 1] }\n\n  // :: ?Node\n  // Get the node directly after the position, if any. If the position\n  // points into a text node, only the part of that node after the\n  // position is returned.\n  get nodeAfter() {\n    let parent = this.parent, index = this.index(this.depth)\n    if (index == parent.childCount) return null\n    let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index)\n    return dOff ? parent.child(index).cut(dOff) : child\n  }\n\n  // :: ?Node\n  // Get the node directly before the position, if any. If the\n  // position points into a text node, only the part of that node\n  // before the position is returned.\n  get nodeBefore() {\n    let index = this.index(this.depth)\n    let dOff = this.pos - this.path[this.path.length - 1]\n    if (dOff) return this.parent.child(index).cut(0, dOff)\n    return index == 0 ? null : this.parent.child(index - 1)\n  }\n\n  // :: (number, ?number) → number\n  // Get the position at the given index in the parent node at the\n  // given depth (which defaults to `this.depth`).\n  posAtIndex(index, depth) {\n    depth = this.resolveDepth(depth)\n    let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n    for (let i = 0; i < index; i++) pos += node.child(i).nodeSize\n    return pos\n  }\n\n  // :: () → [Mark]\n  // Get the marks at this position, factoring in the surrounding\n  // marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n  // position is at the start of a non-empty node, the marks of the\n  // node after it (if any) are returned.\n  marks() {\n    let parent = this.parent, index = this.index()\n\n    // In an empty parent, return the empty array\n    if (parent.content.size == 0) return Mark.none\n\n    // When inside a text node, just return the text node's marks\n    if (this.textOffset) return parent.child(index).marks\n\n    let main = parent.maybeChild(index - 1), other = parent.maybeChild(index)\n    // If the `after` flag is true of there is no node before, make\n    // the node after this position the main reference.\n    if (!main) { let tmp = main; main = other; other = tmp }\n\n    // Use all marks in the main node, except those that have\n    // `inclusive` set to false and are not present in the other node.\n    let marks = main.marks\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n        marks = marks[i--].removeFromSet(marks)\n\n    return marks\n  }\n\n  // :: (ResolvedPos) → ?[Mark]\n  // Get the marks after the current position, if any, except those\n  // that are non-inclusive and not present at position `$end`. This\n  // is mostly useful for getting the set of marks to preserve after a\n  // deletion. Will return `null` if this position is at the end of\n  // its parent node or its parent node isn't a textblock (in which\n  // case no marks should be preserved).\n  marksAcross($end) {\n    let after = this.parent.maybeChild(this.index())\n    if (!after || !after.isInline) return null\n\n    let marks = after.marks, next = $end.parent.maybeChild($end.index())\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n        marks = marks[i--].removeFromSet(marks)\n    return marks\n  }\n\n  // :: (number) → number\n  // The depth up to which this position and the given (non-resolved)\n  // position share the same parent nodes.\n  sharedDepth(pos) {\n    for (let depth = this.depth; depth > 0; depth--)\n      if (this.start(depth) <= pos && this.end(depth) >= pos) return depth\n    return 0\n  }\n\n  // :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n  // Returns a range based on the place where this position and the\n  // given position diverge around block content. If both point into\n  // the same textblock, for example, a range around that textblock\n  // will be returned. If they point into different blocks, the range\n  // around those blocks in their shared ancestor is returned. You can\n  // pass in an optional predicate that will be called with a parent\n  // node to see if a range into that parent is acceptable.\n  blockRange(other = this, pred) {\n    if (other.pos < this.pos) return other.blockRange(this)\n    for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n      if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n        return new NodeRange(this, other, d)\n  }\n\n  // :: (ResolvedPos) → bool\n  // Query whether the given position shares the same parent node.\n  sameParent(other) {\n    return this.pos - this.parentOffset == other.pos - other.parentOffset\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the greater of this and the given position.\n  max(other) {\n    return other.pos > this.pos ? other : this\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the smaller of this and the given position.\n  min(other) {\n    return other.pos < this.pos ? other : this\n  }\n\n  toString() {\n    let str = \"\"\n    for (let i = 1; i <= this.depth; i++)\n      str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1)\n    return str + \":\" + this.parentOffset\n  }\n\n  static resolve(doc, pos) {\n    if (!(pos >= 0 && pos <= doc.content.size)) throw new RangeError(\"Position \" + pos + \" out of range\")\n    let path = []\n    let start = 0, parentOffset = pos\n    for (let node = doc;;) {\n      let {index, offset} = node.content.findIndex(parentOffset)\n      let rem = parentOffset - offset\n      path.push(node, index, start + offset)\n      if (!rem) break\n      node = node.child(index)\n      if (node.isText) break\n      parentOffset = rem - 1\n      start += offset + 1\n    }\n    return new ResolvedPos(pos, path, parentOffset)\n  }\n\n  static resolveCached(doc, pos) {\n    for (let i = 0; i < resolveCache.length; i++) {\n      let cached = resolveCache[i]\n      if (cached.pos == pos && cached.doc == doc) return cached\n    }\n    let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos)\n    resolveCachePos = (resolveCachePos + 1) % resolveCacheSize\n    return result\n  }\n}\n\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nexport class NodeRange {\n  // :: (ResolvedPos, ResolvedPos, number)\n  // Construct a node range. `$from` and `$to` should point into the\n  // same node until at least the given `depth`, since a node range\n  // denotes an adjacent set of nodes in a single parent node.\n  constructor($from, $to, depth) {\n    // :: ResolvedPos A resolved position along the start of the\n    // content. May have a `depth` greater than this object's `depth`\n    // property, since these are the positions that were used to\n    // compute the range, not re-resolved positions directly at its\n    // boundaries.\n    this.$from = $from\n    // :: ResolvedPos A position along the end of the content. See\n    // caveat for [`$from`](#model.NodeRange.$from).\n    this.$to = $to\n    // :: number The depth of the node that this range points into.\n    this.depth = depth\n  }\n\n  // :: number The position at the start of the range.\n  get start() { return this.$from.before(this.depth + 1) }\n  // :: number The position at the end of the range.\n  get end() { return this.$to.after(this.depth + 1) }\n\n  // :: Node The parent node that the range points into.\n  get parent() { return this.$from.node(this.depth) }\n  // :: number The start index of the range in the parent node.\n  get startIndex() { return this.$from.index(this.depth) }\n  // :: number The end index of the range in the parent node.\n  get endIndex() { return this.$to.indexAfter(this.depth) }\n}\n","import { render, staticRenderFns } from \"./HelperNumber.vue?vue&type=template&id=10b1932a&\"\nimport script from \"./HelperNumber.vue?vue&type=script&lang=js&\"\nexport * from \"./HelperNumber.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict'\n\nvar high = require('highlight.js/lib/core')\nvar fault = require('fault')\n\nexports.highlight = highlight\nexports.highlightAuto = highlightAuto\nexports.registerLanguage = registerLanguage\nexports.listLanguages = listLanguages\nexports.registerAlias = registerAlias\n\nEmitter.prototype.addText = text\nEmitter.prototype.addKeyword = addKeyword\nEmitter.prototype.addSublanguage = addSublanguage\nEmitter.prototype.openNode = open\nEmitter.prototype.closeNode = close\nEmitter.prototype.closeAllNodes = noop\nEmitter.prototype.finalize = noop\nEmitter.prototype.toHTML = toHtmlNoop\n\nvar defaultPrefix = 'hljs-'\n\n// Highlighting `value` in the language `name`.\nfunction highlight(name, value, options) {\n  var before = high.configure({})\n  var settings = options || {}\n  var prefix = settings.prefix\n  var result\n\n  if (typeof name !== 'string') {\n    throw fault('Expected `string` for name, got `%s`', name)\n  }\n\n  if (!high.getLanguage(name)) {\n    throw fault('Unknown language: `%s` is not registered', name)\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  high.configure({__emitter: Emitter, classPrefix: prefix})\n\n  result = high.highlight(name, value, true)\n\n  high.configure(before || {})\n\n  /* istanbul ignore if - Highlight.js seems to use this (currently) for broken\n   * grammars, so let’s keep it in there just to be sure. */\n  if (result.errorRaised) {\n    throw result.errorRaised\n  }\n\n  return {\n    relevance: result.relevance,\n    language: result.language,\n    value: result.emitter.rootNode.children\n  }\n}\n\nfunction highlightAuto(value, options) {\n  var settings = options || {}\n  var subset = settings.subset || high.listLanguages()\n  var prefix = settings.prefix\n  var length = subset.length\n  var index = -1\n  var result\n  var secondBest\n  var current\n  var name\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  secondBest = {relevance: 0, language: null, value: []}\n  result = {relevance: 0, language: null, value: []}\n\n  while (++index < length) {\n    name = subset[index]\n\n    if (!high.getLanguage(name)) {\n      continue\n    }\n\n    current = highlight(name, value, options)\n    current.language = name\n\n    if (current.relevance > secondBest.relevance) {\n      secondBest = current\n    }\n\n    if (current.relevance > result.relevance) {\n      secondBest = result\n      result = current\n    }\n  }\n\n  if (secondBest.language) {\n    result.secondBest = secondBest\n  }\n\n  return result\n}\n\n// Register a language.\nfunction registerLanguage(name, syntax) {\n  high.registerLanguage(name, syntax)\n}\n\n// Get a list of all registered languages.\nfunction listLanguages() {\n  return high.listLanguages()\n}\n\n// Register more aliases for an already registered language.\nfunction registerAlias(name, alias) {\n  var map = name\n  var key\n\n  if (alias) {\n    map = {}\n    map[name] = alias\n  }\n\n  for (key in map) {\n    high.registerAliases(map[key], {languageName: key})\n  }\n}\n\nfunction Emitter(options) {\n  this.options = options\n  this.rootNode = {children: []}\n  this.stack = [this.rootNode]\n}\n\nfunction addKeyword(value, name) {\n  this.openNode(name)\n  this.addText(value)\n  this.closeNode()\n}\n\nfunction addSublanguage(other, name) {\n  var stack = this.stack\n  var current = stack[stack.length - 1]\n  var results = other.rootNode.children\n  var node = name\n    ? {\n        type: 'element',\n        tagName: 'span',\n        properties: {className: [name]},\n        children: results\n      }\n    : results\n\n  current.children = current.children.concat(node)\n}\n\nfunction text(value) {\n  var stack = this.stack\n  var current\n  var tail\n\n  if (value === '') return\n\n  current = stack[stack.length - 1]\n  tail = current.children[current.children.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += value\n  } else {\n    current.children.push({type: 'text', value: value})\n  }\n}\n\nfunction open(name) {\n  var stack = this.stack\n  var className = this.options.classPrefix + name\n  var current = stack[stack.length - 1]\n  var child = {\n    type: 'element',\n    tagName: 'span',\n    properties: {className: [className]},\n    children: []\n  }\n\n  current.children.push(child)\n  stack.push(child)\n}\n\nfunction close() {\n  this.stack.pop()\n}\n\nfunction toHtmlNoop() {\n  return ''\n}\n\nfunction noop() {}\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./paper-popin.vue?vue&type=template&id=b0bfe07a&\"\nimport script from \"./paper-popin.vue?vue&type=script&lang=js&\"\nexport * from \"./paper-popin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export { default as ButtonBase } from './components/ButtonBase/index.vue'\r\nexport { default as InputBase } from './components/InputBase/index.vue'\r\nexport { default as SelectBase } from './components/SelectBase/index.vue'\r\nexport { default as PopinBase } from './components/PopinBase/index.vue'\r\nexport { default as TooltipManager } from './components/TooltipManager/index.vue'\r\nexport { default as PaperEditor } from './components/Paper/editor.vue'\r\nexport { default as PaperView } from './components/Paper/view.vue'\r\nexport { default as ToggleBase } from './components/ToggleBase/index.vue'\r\nexport { default as InputUpload } from './components/InputUpload/index.vue'\r\nexport { default as InputMedia } from './components/InputMedia/index.vue'\r\nexport { default as GalleryMosaic } from './components/GalleryMosaic/index.vue'\r\n\r\nexport { default as HelpersMixin } from './helpers/mixins/HelpersMixin.js'\r\nexport { default as ModifiersMixin } from './helpers/mixins/ModifiersMixin.js'","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"InputBase\",class:[ _vm.$modifiers ].concat( _vm.classes )},[(_vm.label)?_c('label',{staticClass:\"InputBase_label\"},[_vm._v(\" \"+_vm._s(_vm.label)+\" \")]):_vm._e(),(_vm.type == 'file')?[_c('button-base',{staticClass:\"InputBase_fileSelect\"},[_vm._v(\" \"+_vm._s(_vm.label || \"Choisir un fichier\")+\" \")]),_c('label',{staticClass:\"InputBase_fileLabel\"},[_vm._v(\" \"+_vm._s(_vm.value.length > 0 ? (_vm.value.length == 1 ? _vm.value[0].name : _vm.value.length + ' fichiers sélectionnés') : 'Aucun fichier sélectionné')+\" \")]),_c('input',_vm._b({staticClass:\"InputBase_element\",attrs:{\"type\":_vm.type},on:{\"input\":function (e) { return _vm.onInput(Object.keys(e.target.files).map(function (key) { return e.target.files[key]; })); }}},'input',_vm.attrs,false))]:[_c('input',_vm._b({staticClass:\"InputBase_element\",attrs:{\"type\":_vm.computedType},domProps:{\"value\":_vm.value},on:{\"focus\":function($event){_vm.state.isFocused = true},\"blur\":function($event){_vm.state.isFocused = false},\"input\":function (e) { return _vm.onInput(e.target.value); }}},'input',_vm.attrs,false))],(_vm.helpers.length > 0 || Object.keys(_vm.constraints).length > 0)?_c('div',{staticClass:\"Inputbase_helpers\"},[(_vm.helpers.includes('number'))?_c('helper-number',{staticClass:\"Inputbase_helper\",on:{\"increment\":function($event){return _vm.increment(1)},\"decrement\":function($event){return _vm.increment(-1)}}}):_vm._e(),(_vm.helpers.includes('reset'))?_c('helper-reset',{staticClass:\"Inputbase_helper\",attrs:{\"is-active\":_vm.state.isValue},on:{\"click\":_vm.reset}}):_vm._e(),(_vm.helpers.includes('reveal'))?_c('helper-reveal',{staticClass:\"Inputbase_helper\",attrs:{\"is-revealed\":_vm.reveal},nativeOn:{\"click\":function($event){_vm.reveal = !_vm.reveal}}}):_vm._e(),(Object.keys(_vm.constraints).length > 0)?_c('helper-errors',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.state.isValue),expression:\"state.isValue\"}],staticClass:\"Inputbase_helper\",attrs:{\"errors\":_vm.errors,\"is-valid\":_vm.state.isValid,\"is-active\":_vm.errors.length > 0 && _vm.state.isFocused}}):_vm._e()],1):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {Plugin, PluginKey, TextSelection} from \"prosemirror-state\"\n\nclass Rebaseable {\n  constructor(step, inverted, origin) {\n    this.step = step\n    this.inverted = inverted\n    this.origin = origin\n  }\n}\n\n// : ([Rebaseable], [Step], Transform) → [Rebaseable]\n// Undo a given set of steps, apply a set of other steps, and then\n// redo them.\nexport function rebaseSteps(steps, over, transform) {\n  for (let i = steps.length - 1; i >= 0; i--) transform.step(steps[i].inverted)\n  for (let i = 0; i < over.length; i++) transform.step(over[i])\n  let result = []\n  for (let i = 0, mapFrom = steps.length; i < steps.length; i++) {\n    let mapped = steps[i].step.map(transform.mapping.slice(mapFrom))\n    mapFrom--\n    if (mapped && !transform.maybeStep(mapped).failed) {\n      transform.mapping.setMirror(mapFrom, transform.steps.length - 1)\n      result.push(new Rebaseable(mapped, mapped.invert(transform.docs[transform.docs.length - 1]), steps[i].origin))\n    }\n  }\n  return result\n}\n\n// This state field accumulates changes that have to be sent to the\n// central authority in the collaborating group and makes it possible\n// to integrate changes made by peers into our local document. It is\n// defined by the plugin, and will be available as the `collab` field\n// in the resulting editor state.\nclass CollabState {\n  constructor(version, unconfirmed) {\n    // : number\n    // The version number of the last update received from the central\n    // authority. Starts at 0 or the value of the `version` property\n    // in the option object, for the editor's value when the option\n    // was enabled.\n    this.version = version\n\n    // : [Rebaseable]\n    // The local steps that havent been successfully sent to the\n    // server yet.\n    this.unconfirmed = unconfirmed\n  }\n}\n\nfunction unconfirmedFrom(transform) {\n  let result = []\n  for (let i = 0; i < transform.steps.length; i++)\n    result.push(new Rebaseable(transform.steps[i],\n                               transform.steps[i].invert(transform.docs[i]),\n                               transform))\n  return result\n}\n\nconst collabKey = new PluginKey(\"collab\")\n\n// :: (?Object) → Plugin\n//\n// Creates a plugin that enables the collaborative editing framework\n// for the editor.\n//\n//   config::- An optional set of options\n//\n//     version:: ?number\n//     The starting version number of the collaborative editing.\n//     Defaults to 0.\n//\n//     clientID:: ?union<number, string>\n//     This client's ID, used to distinguish its changes from those of\n//     other clients. Defaults to a random 32-bit number.\nexport function collab(config = {}) {\n  config = {version: config.version || 0,\n            clientID: config.clientID == null ? Math.floor(Math.random() * 0xFFFFFFFF) : config.clientID}\n\n  return new Plugin({\n    key: collabKey,\n\n    state: {\n      init: () => new CollabState(config.version, []),\n      apply(tr, collab) {\n        let newState = tr.getMeta(collabKey)\n        if (newState)\n          return newState\n        if (tr.docChanged)\n          return new CollabState(collab.version, collab.unconfirmed.concat(unconfirmedFrom(tr)))\n        return collab\n      }\n    },\n\n    config,\n    // This is used to notify the history plugin to not merge steps,\n    // so that the history can be rebased.\n    historyPreserveItems: true\n  })\n}\n\n// :: (state: EditorState, steps: [Step], clientIDs: [union<number, string>], options: ?Object) → Transaction\n// Create a transaction that represents a set of new steps received from\n// the authority. Applying this transaction moves the state forward to\n// adjust to the authority's view of the document.\n//\n//   options::- Additional options.\n//\n//     mapSelectionBackward:: ?boolean\n//     When enabled (the default is `false`), if the current selection\n//     is a [text selection](#state.TextSelection), its sides are\n//     mapped with a negative bias for this transaction, so that\n//     content inserted at the cursor ends up after the cursor. Users\n//     usually prefer this, but it isn't done by default for reasons\n//     of backwards compatibility.\nexport function receiveTransaction(state, steps, clientIDs, options) {\n  // Pushes a set of steps (received from the central authority) into\n  // the editor state (which should have the collab plugin enabled).\n  // Will recognize its own changes, and confirm unconfirmed steps as\n  // appropriate. Remaining unconfirmed steps will be rebased over\n  // remote steps.\n  let collabState = collabKey.getState(state)\n  let version = collabState.version + steps.length\n  let ourID = collabKey.get(state).spec.config.clientID\n\n  // Find out which prefix of the steps originated with us\n  let ours = 0\n  while (ours < clientIDs.length && clientIDs[ours] == ourID) ++ours\n  let unconfirmed = collabState.unconfirmed.slice(ours)\n  steps = ours ? steps.slice(ours) : steps\n\n  // If all steps originated with us, we're done.\n  if (!steps.length)\n    return state.tr.setMeta(collabKey, new CollabState(version, unconfirmed))\n\n  let nUnconfirmed = unconfirmed.length\n  let tr = state.tr\n  if (nUnconfirmed) {\n    unconfirmed = rebaseSteps(unconfirmed, steps, tr)\n  } else {\n    for (let i = 0; i < steps.length; i++) tr.step(steps[i])\n    unconfirmed = []\n  }\n\n  let newCollabState = new CollabState(version, unconfirmed)\n  if (options && options.mapSelectionBackward && state.selection instanceof TextSelection) {\n    tr.setSelection(TextSelection.between(tr.doc.resolve(tr.mapping.map(state.selection.anchor, -1)),\n                                          tr.doc.resolve(tr.mapping.map(state.selection.head, -1)), -1))\n    tr.updated &= ~1\n  }\n  return tr.setMeta(\"rebased\", nUnconfirmed).setMeta(\"addToHistory\", false).setMeta(collabKey, newCollabState)\n}\n\n// :: (state: EditorState) → ?{version: number, steps: [Step], clientID: union<number, string>, origins: [Transaction]}\n// Provides data describing the editor's unconfirmed steps, which need\n// to be sent to the central authority. Returns null when there is\n// nothing to send.\n//\n// `origins` holds the _original_ transactions that produced each\n// steps. This can be useful for looking up time stamps and other\n// metadata for the steps, but note that the steps may have been\n// rebased, whereas the origin transactions are still the old,\n// unchanged objects.\nexport function sendableSteps(state) {\n  let collabState = collabKey.getState(state)\n  if (collabState.unconfirmed.length == 0) return null\n  return {\n    version: collabState.version,\n    steps: collabState.unconfirmed.map(s => s.step),\n    clientID: collabKey.get(state).spec.config.clientID,\n    get origins() { return this._origins || (this._origins = collabState.unconfirmed.map(s => s.origin)) }\n  }\n}\n\n// :: (EditorState) → number\n// Get the version up to which the collab plugin has synced with the\n// central authority.\nexport function getVersion(state) {\n  return collabKey.getState(state).version\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"InputMedia\"},[_c('input-upload',{attrs:{\"is-loading\":_vm.state.loading},on:{\"input\":_vm.onUpload}}),_c('div',{staticClass:\"mt-20\"},[_c('gallery-mosaic',{attrs:{\"items\":_vm.items,\"selected\":[ _vm.value ],\"selectable\":true},on:{\"input\":_vm.onInput}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function (params = {}) {\r\n\r\n    let options = {\r\n        id: 'styledBlock',\r\n        icon: 'times',\r\n        component: 'paper-select',\r\n        isNode: true,\r\n        attrs: {\r\n            items: params.options ? params.options : [\r\n                { id: 4, label: 'Paragraphe', value: { tag: 'p', classes: [] } },\r\n                { id: 0, label: 'Titre 1', value: { tag: 'h1', classes: [] } },\r\n                { id: 1, label: 'Titre 2', value: { tag: 'h2', classes: [] } },\r\n                { id: 2, label: 'Titre 3', value: { tag: 'h3', classes: [] } },\r\n                { id: 3, label: 'Citation', value: { tag: 'blockquote', classes: [] } },\r\n            ]\r\n        }\r\n    }\r\n\r\n    return options\r\n}","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","<template>\r\n    <div class=\"GalleryMosaic\" :class=\"{ 'is-no-selection': selected.length <= 0 }\">\r\n        <div class=\"GalleryMosaic_row\" v-for=\"(row, i) in imageRows\" :key=\"i\">\r\n            <div\r\n                v-for=\"image in row.images\"\r\n                class=\"GalleryMosaic_imageContainer ActionMenu_hover\" \r\n                :class=\"{ 'is-active': selected.includes(image._id) }\"\r\n                :style=\"{ '--width': image.width + 'px', '--height': image.height + 'px' }\"\r\n                @click=\"$emit('input', image._id)\"\r\n                :key=\"image._id\"\r\n            >\r\n                <img class=\"GalleryMosaic_image\" :width=\"Math.min(image.original.width * 0.8, image.width)\" :height=\"Math.min(image.original.height * 0.8, image.height)\" :src=\"image.src\" />\r\n\r\n                <div class=\"GalleryMosaic_selector\" v-if=\"selectable\">\r\n                    <i class=\"fal fa-check\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport SCHEMA from './schema.js'\r\n\r\nexport default {\r\n    name: 'GalleryMosaic',\r\n    schema: SCHEMA,\r\n    props: {\r\n        items: { type: Array, default: () => [] },\r\n        height: { type: Number, default: 175 },\r\n        selected: { type: Array, default: () => [] },\r\n        selectable: { type: Boolean, default: false },\r\n        multiple: { type: Boolean, default: false }\r\n    },\r\n    data: () => ({\r\n        maxWidth: 0\r\n    }),\r\n    mounted () {\r\n        this.$data.maxWidth = this.$el.offsetWidth\r\n    },\r\n    computed: {\r\n        imageRows () {\r\n            let images = this.$props.items.slice()\r\n            \r\n            let rows = []\r\n            let safeguard = 0\r\n\r\n            while (images.length > 0 && safeguard < 100) {\r\n                safeguard++\r\n\r\n                let currentRow = {\r\n                    width: 0,\r\n                    images: []\r\n                }\r\n\r\n                while (currentRow.width < this.$data.maxWidth && images.length > 0 && safeguard < 100) {\r\n                    safeguard++\r\n                    \r\n                    let current = images[0].sizes['s']\r\n                    let width = (this.$props.height / current.height) * current.width\r\n\r\n                    currentRow.images.push({\r\n                        ...current,\r\n                        _id: images[0]._id,\r\n                        original: current,\r\n                        width: width,\r\n                        height: this.$props.height\r\n                    })\r\n\r\n                    currentRow.width += width\r\n                    images.shift()\r\n                }\r\n\r\n                rows.push(currentRow)\r\n            }\r\n\r\n            rows.forEach((row, i) => {\r\n                if (i == rows.length - 1 && (row.width - 5) < this.$data.maxWidth) return\r\n\r\n                let diff = this.$data.maxWidth / (row.width - 5)\r\n\r\n                row.images = row.images.map(image => ({\r\n                    ...image,\r\n                    width: Math.round(image.width * diff) - 5,\r\n                    height: Math.round(image.height * diff) - 5\r\n                }))\r\n            })\r\n\r\n            return rows\r\n        }\r\n    }\r\n}\r\n</script>","import { Selection } from 'prosemirror-state';\nimport { equalNodeType, isNodeSelection } from './helpers';\n\n// :: (predicate: (node: ProseMirrorNode) → boolean) → (selection: Selection) → ?{pos: number, start: number, depth: number, node: ProseMirrorNode}\n// Iterates over parent nodes, returning the closest node and its start position `predicate` returns truthy for. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const predicate = node => node.type === schema.nodes.blockquote;\n// const parent = findParentNode(predicate)(selection);\n// ```\nexport const findParentNode = predicate => ({ $from }) =>\n  findParentNodeClosestToPos($from, predicate);\n\n// :: ($pos: ResolvedPos, predicate: (node: ProseMirrorNode) → boolean) → ?{pos: number, start: number, depth: number, node: ProseMirrorNode}\n// Iterates over parent nodes starting from the given `$pos`, returning the closest node and its start position `predicate` returns truthy for. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const predicate = node => node.type === schema.nodes.blockquote;\n// const parent = findParentNodeClosestToPos(state.doc.resolve(5), predicate);\n// ```\nexport const findParentNodeClosestToPos = ($pos, predicate) => {\n  for (let i = $pos.depth; i > 0; i--) {\n    const node = $pos.node(i);\n    if (predicate(node)) {\n      return {\n        pos: i > 0 ? $pos.before(i) : 0,\n        start: $pos.start(i),\n        depth: i,\n        node\n      };\n    }\n  }\n};\n\n// :: (predicate: (node: ProseMirrorNode) → boolean, domAtPos: (pos: number) → {node: dom.Node, offset: number}) → (selection: Selection) → ?dom.Node\n// Iterates over parent nodes, returning DOM reference of the closest node `predicate` returns truthy for.\n//\n// ```javascript\n// const domAtPos = view.domAtPos.bind(view);\n// const predicate = node => node.type === schema.nodes.table;\n// const parent = findParentDomRef(predicate, domAtPos)(selection); // <table>\n// ```\nexport const findParentDomRef = (predicate, domAtPos) => selection => {\n  const parent = findParentNode(predicate)(selection);\n  if (parent) {\n    return findDomRefAtPos(parent.pos, domAtPos);\n  }\n};\n\n// :: (predicate: (node: ProseMirrorNode) → boolean) → (selection: Selection) → boolean\n// Checks if there's a parent node `predicate` returns truthy for.\n//\n// ```javascript\n// if (hasParentNode(node => node.type === schema.nodes.table)(selection)) {\n//   // ....\n// }\n// ```\nexport const hasParentNode = predicate => selection => {\n  return !!findParentNode(predicate)(selection);\n};\n\n// :: (nodeType: union<NodeType, [NodeType]>) → (selection: Selection) → ?{pos: number, start: number, depth: number, node: ProseMirrorNode}\n// Iterates over parent nodes, returning closest node of a given `nodeType`. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const parent = findParentNodeOfType(schema.nodes.paragraph)(selection);\n// ```\nexport const findParentNodeOfType = nodeType => selection => {\n  return findParentNode(node => equalNodeType(nodeType, node))(selection);\n};\n\n// :: ($pos: ResolvedPos, nodeType: union<NodeType, [NodeType]>) → ?{pos: number, start: number, depth: number, node: ProseMirrorNode}\n// Iterates over parent nodes starting from the given `$pos`, returning closest node of a given `nodeType`. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const parent = findParentNodeOfTypeClosestToPos(state.doc.resolve(10), schema.nodes.paragraph);\n// ```\nexport const findParentNodeOfTypeClosestToPos = ($pos, nodeType) => {\n  return findParentNodeClosestToPos($pos, node =>\n    equalNodeType(nodeType, node)\n  );\n};\n\n// :: (nodeType: union<NodeType, [NodeType]>) → (selection: Selection) → boolean\n// Checks if there's a parent node of a given `nodeType`.\n//\n// ```javascript\n// if (hasParentNodeOfType(schema.nodes.table)(selection)) {\n//   // ....\n// }\n// ```\nexport const hasParentNodeOfType = nodeType => selection => {\n  return hasParentNode(node => equalNodeType(nodeType, node))(selection);\n};\n\n// :: (nodeType: union<NodeType, [NodeType]>, domAtPos: (pos: number) → {node: dom.Node, offset: number}) → (selection: Selection) → ?dom.Node\n// Iterates over parent nodes, returning DOM reference of the closest node of a given `nodeType`.\n//\n// ```javascript\n// const domAtPos = view.domAtPos.bind(view);\n// const parent = findParentDomRefOfType(schema.nodes.codeBlock, domAtPos)(selection); // <pre>\n// ```\nexport const findParentDomRefOfType = (nodeType, domAtPos) => selection => {\n  return findParentDomRef(node => equalNodeType(nodeType, node), domAtPos)(\n    selection\n  );\n};\n\n// :: (nodeType: union<NodeType, [NodeType]>) → (selection: Selection) → ?{pos: number, start: number, depth: number, node: ProseMirrorNode}\n// Returns a node of a given `nodeType` if it is selected. `start` points to the start position of the node, `pos` points directly before the node.\n//\n// ```javascript\n// const { extension, inlineExtension, bodiedExtension } = schema.nodes;\n// const selectedNode = findSelectedNodeOfType([\n//   extension,\n//   inlineExtension,\n//   bodiedExtension,\n// ])(selection);\n// ```\nexport const findSelectedNodeOfType = nodeType => selection => {\n  if (isNodeSelection(selection)) {\n    const { node, $from } = selection;\n    if (equalNodeType(nodeType, node)) {\n      return { node, pos: $from.pos, depth: $from.depth };\n    }\n  }\n};\n\n// :: (selection: Selection) → ?number\n// Returns position of the previous node.\n//\n// ```javascript\n// const pos = findPositionOfNodeBefore(tr.selection);\n// ```\nexport const findPositionOfNodeBefore = selection => {\n  const { nodeBefore } = selection.$from;\n  const maybeSelection = Selection.findFrom(selection.$from, -1);\n  if (maybeSelection && nodeBefore) {\n    // leaf node\n    const parent = findParentNodeOfType(nodeBefore.type)(maybeSelection);\n    if (parent) {\n      return parent.pos;\n    }\n    return maybeSelection.$from.pos;\n  }\n};\n\n// :: (position: number, domAtPos: (pos: number) → {node: dom.Node, offset: number}) → dom.Node\n// Returns DOM reference of a node at a given `position`. If the node type is of type `TEXT_NODE` it will return the reference of the parent node.\n//\n// ```javascript\n// const domAtPos = view.domAtPos.bind(view);\n// const ref = findDomRefAtPos($from.pos, domAtPos);\n// ```\nexport const findDomRefAtPos = (position, domAtPos) => {\n  const dom = domAtPos(position);\n  const node = dom.node.childNodes[dom.offset];\n\n  if (dom.node.nodeType === Node.TEXT_NODE) {\n    return dom.node.parentNode;\n  }\n\n  if (!node || node.nodeType === Node.TEXT_NODE) {\n    return dom.node;\n  }\n\n  return node;\n};\n","import {Node} from \"prosemirror-model\"\n\nimport {Selection} from \"./selection\"\nimport {Transaction} from \"./transaction\"\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nclass FieldDesc {\n  constructor(name, desc, self) {\n    this.name = name\n    this.init = bind(desc.init, self)\n    this.apply = bind(desc.apply, self)\n  }\n}\n\nconst baseFields = [\n  new FieldDesc(\"doc\", {\n    init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init(config) { return config.storedMarks || null },\n    apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init() { return 0 },\n    apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n]\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n  constructor(schema, plugins) {\n    this.schema = schema\n    this.fields = baseFields.concat()\n    this.plugins = []\n    this.pluginsByKey = Object.create(null)\n    if (plugins) plugins.forEach(plugin => {\n      if (this.pluginsByKey[plugin.key])\n        throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\")\n      this.plugins.push(plugin)\n      this.pluginsByKey[plugin.key] = plugin\n      if (plugin.spec.state)\n        this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin))\n    })\n  }\n}\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nexport class EditorState {\n  constructor(config) {\n    this.config = config\n  }\n\n  // doc:: Node\n  // The current document.\n\n  // selection:: Selection\n  // The selection.\n\n  // storedMarks:: ?[Mark]\n  // A set of marks to apply to the next input. Will be null when\n  // no explicit marks have been set.\n\n  // :: Schema\n  // The schema of the state's document.\n  get schema() {\n    return this.config.schema\n  }\n\n  // :: [Plugin]\n  // The plugins that are active in this state.\n  get plugins() {\n    return this.config.plugins\n  }\n\n  // :: (Transaction) → EditorState\n  // Apply the given transaction to produce a new state.\n  apply(tr) {\n    return this.applyTransaction(tr).state\n  }\n\n  // : (Transaction) → bool\n  filterTransaction(tr, ignore = -1) {\n    for (let i = 0; i < this.config.plugins.length; i++) if (i != ignore) {\n      let plugin = this.config.plugins[i]\n      if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n        return false\n    }\n    return true\n  }\n\n  // :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n  // Verbose variant of [`apply`](#state.EditorState.apply) that\n  // returns the precise transactions that were applied (which might\n  // be influenced by the [transaction\n  // hooks](#state.PluginSpec.filterTransaction) of\n  // plugins) along with the new state.\n  applyTransaction(rootTr) {\n    if (!this.filterTransaction(rootTr)) return {state: this, transactions: []}\n\n    let trs = [rootTr], newState = this.applyInner(rootTr), seen = null\n    // This loop repeatedly gives plugins a chance to respond to\n    // transactions as new transactions are added, making sure to only\n    // pass the transactions the plugin did not see before.\n    outer: for (;;) {\n      let haveNew = false\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        let plugin = this.config.plugins[i]\n        if (plugin.spec.appendTransaction) {\n          let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this\n          let tr = n < trs.length &&\n              plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState)\n          if (tr && newState.filterTransaction(tr, i)) {\n            tr.setMeta(\"appendedTransaction\", rootTr)\n            if (!seen) {\n              seen = []\n              for (let j = 0; j < this.config.plugins.length; j++)\n                seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0})\n            }\n            trs.push(tr)\n            newState = newState.applyInner(tr)\n            haveNew = true\n          }\n          if (seen) seen[i] = {state: newState, n: trs.length}\n        }\n      }\n      if (!haveNew) return {state: newState, transactions: trs}\n    }\n  }\n\n  // : (Transaction) → EditorState\n  applyInner(tr) {\n    if (!tr.before.eq(this.doc)) throw new RangeError(\"Applying a mismatched transaction\")\n    let newInstance = new EditorState(this.config), fields = this.config.fields\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i]\n      newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance)\n    }\n    for (let i = 0; i < applyListeners.length; i++) applyListeners[i](this, tr, newInstance)\n    return newInstance\n  }\n\n  // :: Transaction\n  // Start a [transaction](#state.Transaction) from this state.\n  get tr() { return new Transaction(this) }\n\n  // :: (Object) → EditorState\n  // Create a new state.\n  //\n  //   config::- Configuration options. Must contain `schema` or `doc` (or both).\n  //\n  //      schema:: ?Schema\n  //      The schema to use.\n  //\n  //      doc:: ?Node\n  //      The starting document.\n  //\n  //      selection:: ?Selection\n  //      A valid selection in the document.\n  //\n  //      storedMarks:: ?[Mark]\n  //      The initial set of [stored marks](#state.EditorState.storedMarks).\n  //\n  //      plugins:: ?[Plugin]\n  //      The plugins that should be active in this state.\n  static create(config) {\n    let $config = new Configuration(config.schema || config.doc.type.schema, config.plugins)\n    let instance = new EditorState($config)\n    for (let i = 0; i < $config.fields.length; i++)\n      instance[$config.fields[i].name] = $config.fields[i].init(config, instance)\n    return instance\n  }\n\n  // :: (Object) → EditorState\n  // Create a new state based on this one, but with an adjusted set of\n  // active plugins. State fields that exist in both sets of plugins\n  // are kept unchanged. Those that no longer exist are dropped, and\n  // those that are new are initialized using their\n  // [`init`](#state.StateField.init) method, passing in the new\n  // configuration object..\n  //\n  //   config::- configuration options\n  //\n  //     schema:: ?Schema\n  //     New schema to use.\n  //\n  //     plugins:: ?[Plugin]\n  //     New set of active plugins.\n  reconfigure(config) {\n    let $config = new Configuration(config.schema || this.schema, config.plugins)\n    let fields = $config.fields, instance = new EditorState($config)\n    for (let i = 0; i < fields.length; i++) {\n      let name = fields[i].name\n      instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance)\n    }\n    return instance\n  }\n\n  // :: (?union<Object<Plugin>, string, number>) → Object\n  // Serialize this state to JSON. If you want to serialize the state\n  // of plugins, pass an object mapping property names to use in the\n  // resulting JSON object to plugin objects. The argument may also be\n  // a string or number, in which case it is ignored, to support the\n  // way `JSON.stringify` calls `toString` methods.\n  toJSON(pluginFields) {\n    let result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()}\n    if (this.storedMarks) result.storedMarks = this.storedMarks.map(m => m.toJSON())\n    if (pluginFields && typeof pluginFields == 'object') for (let prop in pluginFields) {\n      if (prop == \"doc\" || prop == \"selection\")\n        throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\")\n      let plugin = pluginFields[prop], state = plugin.spec.state\n      if (state && state.toJSON) result[prop] = state.toJSON.call(plugin, this[plugin.key])\n    }\n    return result\n  }\n\n  // :: (Object, Object, ?Object<Plugin>) → EditorState\n  // Deserialize a JSON representation of a state. `config` should\n  // have at least a `schema` field, and should contain array of\n  // plugins to initialize the state with. `pluginFields` can be used\n  // to deserialize the state of plugins, by associating plugin\n  // instances with the property names they use in the JSON object.\n  //\n  //   config::- configuration options\n  //\n  //     schema:: Schema\n  //     The schema to use.\n  //\n  //     plugins:: ?[Plugin]\n  //     The set of active plugins.\n  static fromJSON(config, json, pluginFields) {\n    if (!json) throw new RangeError(\"Invalid input for EditorState.fromJSON\")\n    if (!config.schema) throw new RangeError(\"Required config field 'schema' missing\")\n    let $config = new Configuration(config.schema, config.plugins)\n    let instance = new EditorState($config)\n    $config.fields.forEach(field => {\n      if (field.name == \"doc\") {\n        instance.doc = Node.fromJSON(config.schema, json.doc)\n      } else if (field.name == \"selection\") {\n        instance.selection = Selection.fromJSON(instance.doc, json.selection)\n      } else if (field.name == \"storedMarks\") {\n        if (json.storedMarks) instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON)\n      } else {\n        if (pluginFields) for (let prop in pluginFields) {\n          let plugin = pluginFields[prop], state = plugin.spec.state\n          if (plugin.key == field.name && state && state.fromJSON &&\n              Object.prototype.hasOwnProperty.call(json, prop)) {\n            // This field belongs to a plugin mapped to a JSON field, read it from there.\n            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance)\n            return\n          }\n        }\n        instance[field.name] = field.init(config, instance)\n      }\n    })\n    return instance\n  }\n\n  // Kludge to allow the view to track mappings between different\n  // instances of a state.\n  //\n  // FIXME this is no longer needed as of prosemirror-view 1.9.0,\n  // though due to backwards-compat we should probably keep it around\n  // for a while (if only as a no-op)\n  static addApplyListener(f) {\n    applyListeners.push(f)\n  }\n  static removeApplyListener(f) {\n    let found = applyListeners.indexOf(f)\n    if (found > -1) applyListeners.splice(found, 1)\n  }\n}\n\nconst applyListeners = []\n","// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (let prop in obj) {\n    let val = obj[prop]\n    if (val instanceof Function) val = val.bind(self)\n    else if (prop == \"handleDOMEvents\") val = bindProps(val, self, {})\n    target[prop] = val\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nexport class Plugin {\n  // :: (PluginSpec)\n  // Create a plugin.\n  constructor(spec) {\n    // :: EditorProps\n    // The [props](#view.EditorProps) exported by this plugin.\n    this.props = {}\n    if (spec.props) bindProps(spec.props, this, this.props)\n    // :: Object\n    // The plugin's [spec object](#state.PluginSpec).\n    this.spec = spec\n    this.key = spec.key ? spec.key.key : createKey(\"plugin\")\n  }\n\n  // :: (EditorState) → any\n  // Extract the plugin's state field from an editor state.\n  getState(state) { return state[this.key] }\n}\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nconst keys = Object.create(null)\n\nfunction createKey(name) {\n  if (name in keys) return name + \"$\" + ++keys[name]\n  keys[name] = 0\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nexport class PluginKey {\n  // :: (?string)\n  // Create a plugin key.\n  constructor(name = \"key\") { this.key = createKey(name) }\n\n  // :: (EditorState) → ?Plugin\n  // Get the active plugin with this key, if any, from an editor\n  // state.\n  get(state) { return state.config.pluginsByKey[this.key] }\n\n  // :: (EditorState) → ?any\n  // Get the plugin's state from an editor state.\n  getState(state) { return state[this.key] }\n}\n","import {Transform} from \"prosemirror-transform\"\nimport {Mark} from \"prosemirror-model\"\nimport {Selection} from \"./selection\"\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nexport class Transaction extends Transform {\n  constructor(state) {\n    super(state.doc)\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now()\n    this.curSelection = state.selection\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null)\n  }\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  get selection() {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor))\n      this.curSelectionFor = this.steps.length\n    }\n    return this.curSelection\n  }\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  setSelection(selection) {\n    if (selection.$from.doc != this.doc)\n      throw new RangeError(\"Selection passed to setSelection must point at the current document\")\n    this.curSelection = selection\n    this.curSelectionFor = this.steps.length\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS\n    this.storedMarks = null\n    return this\n  }\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  get selectionSet() {\n    return (this.updated & UPDATED_SEL) > 0\n  }\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  setStoredMarks(marks) {\n    this.storedMarks = marks\n    this.updated |= UPDATED_MARKS\n    return this\n  }\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  ensureMarks(marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      this.setStoredMarks(marks)\n    return this\n  }\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  addStoredMark(mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  removeStoredMark(mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  get storedMarksSet() {\n    return (this.updated & UPDATED_MARKS) > 0\n  }\n\n  addStep(step, doc) {\n    super.addStep(step, doc)\n    this.updated = this.updated & ~UPDATED_MARKS\n    this.storedMarks = null\n  }\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  setTime(time) {\n    this.time = time\n    return this\n  }\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  replaceSelection(slice) {\n    this.selection.replace(this, slice)\n    return this\n  }\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  replaceSelectionWith(node, inheritMarks) {\n    let selection = this.selection\n    if (inheritMarks !== false)\n      node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)))\n    selection.replaceWith(this, node)\n    return this\n  }\n\n  // :: () → Transaction\n  // Delete the selection.\n  deleteSelection() {\n    this.selection.replace(this)\n    return this\n  }\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  insertText(text, from, to = from) {\n    let schema = this.doc.type.schema\n    if (from == null) {\n      if (!text) return this.deleteSelection()\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) return this.deleteRange(from, to)\n      let marks = this.storedMarks\n      if (!marks) {\n        let $from = this.doc.resolve(from)\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to))\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks))\n      if (!this.selection.empty) this.setSelection(Selection.near(this.selection.$to))\n      return this\n    }\n  }\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  setMeta(key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value\n    return this\n  }\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  getMeta(key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  }\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  get isGeneric() {\n    for (let _ in this.meta) return false\n    return true\n  }\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  scrollIntoView() {\n    this.updated |= UPDATED_SCROLL\n    return this\n  }\n\n  get scrolledIntoView() {\n    return (this.updated & UPDATED_SCROLL) > 0\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"PopinBase\",class:[{ 'is-active': _vm.isActive } ].concat( _vm.$modifiers )},[_c('div',{ref:\"body\",staticClass:\"PopinBase_body\"},[_c('div',{staticClass:\"PopinBase_header\"},[_vm._t(\"header\",[_c('div')]),_vm._t(\"headerClose\",[_c('div',{staticClass:\"PopinBase_close\",on:{\"click\":function($event){return _vm.$emit('close')}}},[_c('i',{staticClass:\"fal fa-times\"})])])],2),_c('div',{staticClass:\"PopinBase_content\"},[_vm._t(\"content\")],2),(_vm.$slots.footer || _vm.$slots.footerLeft || _vm.$slots.footerRight)?_c('div',{staticClass:\"PopinBase_footer\"},[_vm._t(\"footer\"),_vm._t(\"footerLeft\"),_vm._t(\"footerRight\")],2):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// Because working with row and column-spanning cells is not quite\n// trivial, this code builds up a descriptive structure for a given\n// table node. The structures are cached with the (persistent) table\n// nodes as key, so that they only have to be recomputed when the\n// content of the table changes.\n//\n// This does mean that they have to store table-relative, not\n// document-relative positions. So code that uses them will typically\n// compute the start position of the table and offset positions passed\n// to or gotten from this structure by that amount.\n\nlet readFromCache, addToCache\n// Prefer using a weak map to cache table maps. Fall back on a\n// fixed-size cache if that's not supported.\nif (typeof WeakMap != \"undefined\") {\n  let cache = new WeakMap\n  readFromCache = key => cache.get(key)\n  addToCache = (key, value) => {\n    cache.set(key, value)\n    return value\n  }\n} else {\n  let cache = [], cacheSize = 10, cachePos = 0\n  readFromCache = key => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key) return cache[i + 1]\n  }\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize) cachePos = 0\n    cache[cachePos++] = key\n    return cache[cachePos++] = value\n  }\n}\n\nexport class Rect {\n  constructor(left, top, right, bottom) {\n    this.left = left; this.top = top; this.right = right; this.bottom = bottom\n  }\n}\n\n// ::- A table map describes the structore of a given table. To avoid\n// recomputing them all the time, they are cached per table node. To\n// be able to do that, positions saved in the map are relative to the\n// start of the table, rather than the start of the document.\nexport class TableMap {\n  constructor(width, height, map, problems) {\n    // :: number The width of the table\n    this.width = width\n    // :: number The table's height\n    this.height = height\n    // :: [number] A width * height array with the start position of\n    // the cell covering that part of the table in each slot\n    this.map = map\n    // An optional array of problems (cell overlap or non-rectangular\n    // shape) for the table, used by the table normalizer.\n    this.problems = problems\n  }\n\n  // :: (number) → Rect\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      let curPos = this.map[i]\n      if (curPos != pos) continue\n      let left = i % this.width, top = (i / this.width) | 0\n      let right = left + 1, bottom = top + 1\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) right++\n      for (let j = 1; bottom < this.height && this.map[i + (this.width * j)] == curPos; j++) bottom++\n      return new Rect(left, top, right, bottom)\n    }\n    throw new RangeError(\"No cell with offset \" + pos + \" found\")\n  }\n\n  // :: (number) → number\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++)\n      if (this.map[i] == pos) return i % this.width\n    throw new RangeError(\"No cell with offset \" + pos + \" found\")\n  }\n\n  // :: (number, string, number) → ?number\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    let {left, right, top, bottom} = this.findCell(pos)\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width) return null\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)]\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height) return null\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)]\n    }\n  }\n\n  // :: (number, number) → Rect\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    let {left: leftA, right: rightA, top: topA, bottom: bottomA} = this.findCell(a)\n    let {left: leftB, right: rightB, top: topB, bottom: bottomB} = this.findCell(b)\n    return new Rect(Math.min(leftA, leftB), Math.min(topA, topB),\n                    Math.max(rightA, rightB), Math.max(bottomA, bottomB))\n  }\n\n  // :: (Rect) → [number]\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    let result = [], seen = {}\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        let index = row * this.width + col, pos = this.map[index]\n        if (seen[pos]) continue\n        seen[pos] = true\n        if ((col != rect.left || !col || this.map[index - 1] != pos) &&\n            (row != rect.top || !row || this.map[index - this.width] != pos))\n          result.push(pos)\n      }\n    }\n    return result\n  }\n\n  // :: (number, number, Node) → number\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0;; i++) {\n      let rowEnd = rowStart + table.child(i).nodeSize\n      if (i == row) {\n        let index = col + row * this.width, rowEndIndex = (row + 1) * this.width\n        // Skip past cells from previous rows (via rowspan)\n        while (index < rowEndIndex && this.map[index] < rowStart) index++\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index]\n      }\n      rowStart = rowEnd\n    }\n  }\n\n  // :: (Node) → TableMap\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table))\n  }\n}\n\n// Compute a table map.\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\") throw new RangeError(\"Not a table node: \" + table.type.name)\n  let width = findWidth(table), height = table.childCount\n  let map = [], mapPos = 0, problems = null, colWidths = []\n  for (let i = 0, e = width * height; i < e; i++) map[i] = 0\n\n  for (let row = 0, pos = 0; row < height; row++) {\n    let rowNode = table.child(row)\n    pos++\n    for (let i = 0;; i++) {\n      while (mapPos < map.length && map[mapPos] != 0) mapPos++\n      if (i == rowNode.childCount) break\n      let cellNode = rowNode.child(i), {colspan, rowspan, colwidth} = cellNode.attrs\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({type: \"overlong_rowspan\", pos, n: rowspan - h})\n          break\n        }\n        let start = mapPos + (h * width)\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos\n          else\n            (problems || (problems = [])).push({type: \"collision\", row, pos, n: colspan - w})\n          let colW = colwidth && colwidth[w]\n          if (colW) {\n            let widthIndex = ((start + w) % width) * 2, prev = colWidths[widthIndex]\n            if (prev == null || (prev != colW && colWidths[widthIndex + 1] == 1)) {\n              colWidths[widthIndex] = colW\n              colWidths[widthIndex + 1] = 1\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++\n            }\n          }\n        }\n      }\n      mapPos += colspan\n      pos += cellNode.nodeSize\n    }\n    let expectedPos = (row + 1) * width, missing = 0\n    while (mapPos < expectedPos) if (map[mapPos++] == 0) missing++\n    if (missing) (problems || (problems = [])).push({type: \"missing\", row, n: missing})\n    pos++\n  }\n\n  let tableMap = new TableMap(width, height, map, problems), badWidths = false\n\n  // For columns that have defined widths, but whose widths disagree\n  // between rows, fix up the cells whose width doesn't match the\n  // computed one.\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height) badWidths = true\n  if (badWidths) findBadColWidths(tableMap, colWidths, table)\n\n  return tableMap\n}\n\nfunction findWidth(table) {\n  let width = -1, hasRowSpan = false\n  for (let row = 0; row < table.childCount; row++) {\n    let rowNode = table.child(row), rowWidth = 0\n    if (hasRowSpan) for (let j = 0; j < row; j++) {\n      let prevRow = table.child(j)\n      for (let i = 0; i < prevRow.childCount; i++) {\n        let cell = prevRow.child(i)\n        if (j + cell.attrs.rowspan > row) rowWidth += cell.attrs.colspan\n      }\n    }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      let cell = rowNode.child(i)\n      rowWidth += cell.attrs.colspan\n      if (cell.attrs.rowspan > 1) hasRowSpan = true\n    }\n    if (width == -1)\n      width = rowWidth\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth)\n  }\n  return width\n}\n\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems) map.problems = []\n  for (let i = 0, seen = {}; i < map.map.length; i++) {\n    let pos = map.map[i]\n    if (seen[pos]) continue\n    seen[pos] = true\n    let node = table.nodeAt(pos), updated = null\n    for (let j = 0; j < node.attrs.colspan; j++) {\n      let col = (i + j) % map.width, colWidth = colWidths[col * 2]\n      if (colWidth != null && (!node.attrs.colwidth || node.attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(node.attrs)))[j] = colWidth\n    }\n    if (updated) map.problems.unshift({type: \"colwidth mismatch\", pos, colwidth: updated})\n  }\n}\n\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth) return attrs.colwidth.slice()\n  let result = []\n  for (let i = 0; i < attrs.colspan; i++) result.push(0)\n  return result\n}\n","// Various helper function for working with tables\n\nimport {PluginKey} from \"prosemirror-state\"\n\nimport {TableMap} from \"./tablemap\"\nimport {tableNodeTypes} from \"./schema\";\n\nexport const key = new PluginKey(\"selectingCells\")\n\nexport function cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\") return $pos.node(0).resolve($pos.before(d + 1))\n  return null\n}\n\nexport function cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) { // Sometimes the cell can be in the same depth.\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === 'header_cell') return $pos.node(d)\n  }\n  return null\n}\n\nexport function isInTable(state) {\n  let $head = state.selection.$head\n  for (let d = $head.depth; d > 0; d--) if ($head.node(d).type.spec.tableRole == \"row\") return true\n  return false\n}\n\nexport function selectionCell(state) {\n  let sel = state.selection\n  if (sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor\n  }\n  return cellAround(sel.$head) || cellNear(sel.$head)\n}\n\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    let role = after.type.spec.tableRole\n    if (role == \"cell\" || role == \"header_cell\") return $pos.doc.resolve(pos)\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    let role = before.type.spec.tableRole\n    if (role == \"cell\" || role == \"header_cell\") return $pos.doc.resolve(pos - before.nodeSize)\n  }\n}\n\nexport function pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && $pos.nodeAfter\n}\n\nexport function moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize)\n}\n\nexport function inSameTable($a, $b) {\n  return $a.depth == $b.depth && $a.pos >= $b.start(-1) && $a.pos <= $b.end(-1)\n}\n\nexport function findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1))\n}\n\nexport function colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1))\n}\n\nexport function nextCell($pos, axis, dir) {\n  let start = $pos.start(-1), map = TableMap.get($pos.node(-1))\n  let moved = map.nextCell($pos.pos - start, axis, dir)\n  return moved == null ? null : $pos.node(0).resolve(start + moved)\n}\n\nexport function setAttr(attrs, name, value) {\n  let result = {}\n  for (let prop in attrs) result[prop] = attrs[prop]\n  result[name] = value\n  return result\n}\n\nexport function removeColSpan(attrs, pos, n=1) {\n  let result = setAttr(attrs, \"colspan\", attrs.colspan - n)\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice()\n    result.colwidth.splice(pos, n)\n    if (!result.colwidth.some(w => w > 0)) result.colwidth = null\n  }\n  return result\n}\n\nexport function addColSpan(attrs, pos, n=1) {\n  let result = setAttr(attrs, \"colspan\", attrs.colspan + n)\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice()\n    for (let i = 0; i < n; i++) result.colwidth.splice(pos, 0, 0)\n  }\n  return result\n}\n\nexport function columnIsHeader(map, table, col) {\n  let headerCell = tableNodeTypes(table.type.schema).header_cell\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false\n  return true\n}\n","// This file defines a ProseMirror selection subclass that models\n// table cell selections. The table plugin needs to be active to wire\n// in the user interaction part of table selections (so that you\n// actually get such selections when you select across cells).\n\nimport {Selection, TextSelection, NodeSelection, SelectionRange} from \"prosemirror-state\"\nimport {Decoration, DecorationSet} from \"prosemirror-view\"\nimport {Fragment, Slice} from \"prosemirror-model\"\n\n\nimport {inSameTable, pointsAtCell, setAttr, removeColSpan} from \"./util\"\nimport {TableMap} from \"./tablemap\"\n\n// ::- A [`Selection`](http://prosemirror.net/docs/ref/#state.Selection)\n// subclass that represents a cell selection spanning part of a table.\n// With the plugin enabled, these will be created when the user\n// selects across cells, and will be drawn by giving selected cells a\n// `selectedCell` CSS class.\nexport class CellSelection extends Selection {\n  // :: (ResolvedPos, ?ResolvedPos)\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    let table = $anchorCell.node(-1), map = TableMap.get(table), start = $anchorCell.start(-1)\n    let rect = map.rectBetween($anchorCell.pos - start, $headCell.pos - start)\n    let doc = $anchorCell.node(0)\n    let cells = map.cellsInRect(rect).filter(p => p != $headCell.pos - start)\n    // Make the head cell the first range, so that it counts as the\n    // primary part of the selection\n    cells.unshift($headCell.pos - start)\n    let ranges = cells.map(pos => {\n      let cell = table.nodeAt(pos), from = pos + start + 1\n      return new SelectionRange(doc.resolve(from), doc.resolve(from + cell.content.size))\n    })\n    super(ranges[0].$from, ranges[0].$to, ranges)\n    // :: ResolvedPos\n    // A resolved position pointing _in front of_ the anchor cell (the one\n    // that doesn't move when extending the selection).\n    this.$anchorCell = $anchorCell\n    // :: ResolvedPos\n    // A resolved position pointing in front of the head cell (the one\n    // moves when extending the selection).\n    this.$headCell = $headCell\n  }\n\n  map(doc, mapping) {\n    let $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos))\n    let $headCell = doc.resolve(mapping.map(this.$headCell.pos))\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      let tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1)\n      if (tableChanged && this.isRowSelection())\n        return CellSelection.rowSelection($anchorCell, $headCell)\n      else if (tableChanged && this.isColSelection())\n        return CellSelection.colSelection($anchorCell, $headCell)\n      else\n        return new CellSelection($anchorCell, $headCell)\n    }\n    return TextSelection.between($anchorCell, $headCell)\n  }\n\n  // :: () → Slice\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    let table = this.$anchorCell.node(-1), map = TableMap.get(table), start = this.$anchorCell.start(-1)\n    let rect = map.rectBetween(this.$anchorCell.pos - start, this.$headCell.pos - start)\n    let seen = {}, rows = []\n    for (let row = rect.top; row < rect.bottom; row++) {\n      let rowContent = []\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        let pos = map.map[index]\n        if (!seen[pos]) {\n          seen[pos] = true\n          let cellRect = map.findCell(pos), cell = table.nodeAt(pos)\n          let extraLeft = rect.left - cellRect.left, extraRight = cellRect.right - rect.right\n          if (extraLeft > 0 || extraRight > 0) {\n            let attrs = cell.attrs\n            if (extraLeft > 0) attrs = removeColSpan(attrs, 0, extraLeft)\n            if (extraRight > 0) attrs = removeColSpan(attrs, attrs.colspan - extraRight, extraRight)\n            if (cellRect.left < rect.left) cell = cell.type.createAndFill(attrs)\n            else cell = cell.type.create(attrs, cell.content)\n          }\n          if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n            let attrs = setAttr(cell.attrs, \"rowspan\", Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top))\n            if (cellRect.top < rect.top) cell = cell.type.createAndFill(attrs)\n            else cell = cell.type.create(attrs, cell.content)\n          }\n          rowContent.push(cell)\n        }\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)))\n    }\n\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1)\n  }\n\n  replace(tr, content = Slice.empty) {\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      tr.replace(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content)\n    }\n    let sel = Selection.findFrom(tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)), -1)\n    if (sel) tr.setSelection(sel)\n  }\n\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0))\n  }\n\n  forEachCell(f) {\n    let table = this.$anchorCell.node(-1), map = TableMap.get(table), start = this.$anchorCell.start(-1)\n    let cells = map.cellsInRect(map.rectBetween(this.$anchorCell.pos - start, this.$headCell.pos - start))\n    for (let i = 0; i < cells.length; i++)\n      f(table.nodeAt(cells[i]), start + cells[i])\n  }\n\n  // :: () → bool\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    let anchorTop = this.$anchorCell.index(-1), headTop = this.$headCell.index(-1)\n    if (Math.min(anchorTop, headTop) > 0) return false\n    let anchorBot = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan,\n        headBot = headTop + this.$headCell.nodeAfter.attrs.rowspan\n    return Math.max(anchorBot, headBot) == this.$headCell.node(-1).childCount\n  }\n\n  // :: (ResolvedPos, ?ResolvedPos) → CellSelection\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    let map = TableMap.get($anchorCell.node(-1)), start = $anchorCell.start(-1)\n    let anchorRect = map.findCell($anchorCell.pos - start), headRect = map.findCell($headCell.pos - start)\n    let doc = $anchorCell.node(0)\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(start + map.map[anchorRect.left])\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(start + map.map[map.width * (map.height - 1) + headRect.right - 1])\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(start + map.map[headRect.left])\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(start + map.map[map.width * (map.height - 1) + anchorRect.right - 1])\n    }\n    return new CellSelection($anchorCell, $headCell)\n  }\n\n  // :: () → bool\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    let map = TableMap.get(this.$anchorCell.node(-1)), start = this.$anchorCell.start(-1)\n    let anchorLeft = map.colCount(this.$anchorCell.pos - start),\n        headLeft = map.colCount(this.$headCell.pos - start)\n    if (Math.min(anchorLeft, headLeft) > 0) return false\n    let anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan,\n        headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan\n    return Math.max(anchorRight, headRight) == map.width\n  }\n\n  eq(other) {\n    return other instanceof CellSelection && other.$anchorCell.pos == this.$anchorCell.pos &&\n      other.$headCell.pos == this.$headCell.pos\n  }\n\n  // :: (ResolvedPos, ?ResolvedPos) → CellSelection\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    let map = TableMap.get($anchorCell.node(-1)), start = $anchorCell.start(-1)\n    let anchorRect = map.findCell($anchorCell.pos - start), headRect = map.findCell($headCell.pos - start)\n    let doc = $anchorCell.node(0)\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(start + map.map[anchorRect.top * map.width])\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(start + map.map[map.width * (headRect.top + 1) - 1])\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(start + map.map[headRect.top * map.width])\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(start + map.map[map.width * (anchorRect.top + 1) - 1])\n    }\n    return new CellSelection($anchorCell, $headCell)\n  }\n\n  toJSON() {\n    return {type: \"cell\", anchor: this.$anchorCell.pos, head: this.$headCell.pos}\n  }\n\n  static fromJSON(doc, json) {\n    return new CellSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  }\n\n  // :: (Node, number, ?number) → CellSelection\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new CellSelection(doc.resolve(anchorCell), doc.resolve(headCell))\n  }\n\n  getBookmark() { return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos) }\n}\n\nCellSelection.prototype.visible = false\n\nSelection.jsonID(\"cell\", CellSelection)\n\nclass CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor\n    this.head = head\n  }\n  map(mapping) {\n    return new CellBookmark(mapping.map(this.anchor), mapping.map(this.head))\n  }\n  resolve(doc) {\n    let $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head)\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" &&\n        $headCell.parent.type.spec.tableRole == \"row\" &&\n        $anchorCell.index() < $anchorCell.parent.childCount &&\n        $headCell.index() < $headCell.parent.childCount &&\n        inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell)\n    else\n      return Selection.near($headCell, 1)\n  }\n}\n\nexport function drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection)) return null\n  let cells = []\n  state.selection.forEachCell((node, pos) => {\n    cells.push(Decoration.node(pos, pos + node.nodeSize, {class: \"selectedCell\"}))\n  })\n  return DecorationSet.create(state.doc, cells)\n}\n\nfunction isCellBoundarySelection({$from, $to}) {\n  if ($from.pos == $to.pos || $from.pos < $from.pos - 6) return false // Cheap elimination\n  let afterFrom = $from.pos, beforeTo = $to.pos, depth = $from.depth\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth)) break\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d)) break\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole)\n}\n\nfunction isTextSelectionAcrossCells({$from, $to}) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n\n  for (let i = $from.depth; i > 0; i--) {\n    let node = $from.node(i);\n    if (node.type.spec.tableRole === 'cell' || node.type.spec.tableRole === 'header_cell') {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n\n  for (let i = $to.depth; i > 0; i--) {\n    let node = $to.node(i);\n    if (node.type.spec.tableRole === 'cell' || node.type.spec.tableRole === 'header_cell') {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0\n}\n\nexport function normalizeSelection(state, tr, allowTableNodeSelection) {\n  let sel = (tr || state).selection, doc = (tr || state).doc, normalize, role\n  if (sel instanceof NodeSelection && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from)\n    } else if (role == \"row\") {\n      let $cell = doc.resolve(sel.from + 1)\n      normalize = CellSelection.rowSelection($cell, $cell)\n    } else if (!allowTableNodeSelection) {\n      let map = TableMap.get(sel.node), start = sel.from + 1\n      let lastCell = start + map.map[map.width * map.height - 1]\n      normalize = CellSelection.create(doc, start + 1, lastCell)\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from)\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize)\n  return tr\n}\n","// Utilities used for copy/paste handling.\n//\n// This module handles pasting cell content into tables, or pasting\n// anything into a cell selection, as replacing a block of cells with\n// the content of the selection. When pasting cells into a cell, that\n// involves placing the block of pasted content so that its top left\n// aligns with the selection cell, optionally extending the table to\n// the right or bottom to make sure it is large enough. Pasting into a\n// cell selection is different, here the cells in the selection are\n// clipped to the selection's rectangle, optionally repeating the\n// pasted cells when they are smaller than the selection.\n\nimport {Slice, Fragment} from \"prosemirror-model\"\nimport {Transform} from \"prosemirror-transform\"\n\nimport {setAttr, removeColSpan} from \"./util\"\nimport {TableMap} from \"./tablemap\"\nimport {CellSelection} from \"./cellselection\"\nimport {tableNodeTypes} from \"./schema\"\n\n// Utilities to help with copying and pasting table cells\n\n// : (Slice) → ?{width: number, height: number, rows: [Fragment]}\n// Get a rectangular area of cells from a slice, or null if the outer\n// nodes of the slice aren't table cells or rows.\nexport function pastedCells(slice) {\n  if (!slice.size) return null\n  let {content, openStart, openEnd} = slice\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.firstChild.type.spec.tableRole == \"table\")) {\n    openStart--\n    openEnd--\n    content = content.firstChild.content\n  }\n  let first = content.firstChild, role = first.type.spec.tableRole\n  let schema = first.type.schema, rows = []\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content\n      let left = i ? 0 : Math.max(0, openStart - 1)\n      let right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1)\n      if (left || right) cells = fitSlice(tableNodeTypes(schema).row, new Slice(cells, left, right)).content\n      rows.push(cells)\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(openStart || openEnd ? fitSlice(tableNodeTypes(schema).row, new Slice(content, openStart, openEnd)).content : content)\n  } else {\n    return null\n  }\n  return ensureRectangular(schema, rows)\n}\n\n// : (Schema, [Fragment]) → {width: number, height: number, rows: [Fragment]}\n// Compute the width and height of a set of cells, and make sure each\n// row has the same number of cells.\nfunction ensureRectangular(schema, rows) {\n  let widths = []\n  for (let i = 0; i < rows.length; i++) {\n    let row = rows[i]\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      let {rowspan, colspan} = row.child(j).attrs\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan\n    }\n  }\n  let width = 0\n  for (let r = 0; r < widths.length; r++) width = Math.max(width, widths[r])\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length) rows.push(Fragment.empty)\n    if (widths[r] < width) {\n      let empty = tableNodeTypes(schema).cell.createAndFill(), cells = []\n      for (let i = widths[r]; i < width; i++) cells.push(empty)\n      rows[r] = rows[r].append(Fragment.from(cells))\n    }\n  }\n  return {height: rows.length, width, rows}\n}\n\nexport function fitSlice(nodeType, slice) {\n  let node = nodeType.createAndFill()\n  let tr = new Transform(node).replace(0, node.content.size, slice)\n  return tr.doc\n}\n\n// : ({width: number, height: number, rows: [Fragment]}, number, number) → {width: number, height: number, rows: [Fragment]}\n// Clip or extend (repeat) the given set of cells to cover the given\n// width and height. Will clip rowspan/colspan cells at the edges when\n// they stick out.\nexport function clipCells({width, height, rows}, newWidth, newHeight) {\n  if (width != newWidth) {\n    let added = [], newRows = []\n    for (let row = 0; row < rows.length; row++) {\n      let frag = rows[row], cells = []\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount)\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.create(removeColSpan(cell.attrs, cell.attrs.colspan, col + cell.attrs.colspan - newWidth), cell.content)\n        cells.push(cell)\n        col += cell.attrs.colspan\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan\n      }\n      newRows.push(Fragment.from(cells))\n    }\n    rows = newRows\n    width = newWidth\n  }\n\n  if (height != newHeight) {\n    let newRows = []\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      let cells = [], source = rows[i % height]\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j)\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(setAttr(cell.attrs, \"rowspan\", Math.max(1, newHeight - cell.attrs.rowspan)), cell.content)\n        cells.push(cell)\n      }\n      newRows.push(Fragment.from(cells))\n    }\n    rows = newRows\n    height = newHeight\n  }\n\n  return {width, height, rows}\n}\n\n// Make sure a table has at least the given width and height. Return\n// true if something was changed.\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  let schema = tr.doc.type.schema, types = tableNodeTypes(schema), empty, emptyHead\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      let rowNode = table.child(row)\n      rowEnd += rowNode.nodeSize\n      let cells = [], add\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill())\n      else\n        add = emptyHead || (emptyHead = types.header_cell.createAndFill())\n      for (let i = map.width; i < width; i++) cells.push(add)\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells)\n    }\n  }\n  if (height > map.height) {\n    let cells = []\n    for (let i = 0, start = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      let header = i >= map.width ? false :\n          table.nodeAt(map.map[start + i]).type == types.header_cell\n      cells.push(header\n                 ? (emptyHead || (emptyHead = types.header_cell.createAndFill()))\n                 : (empty || (empty = types.cell.createAndFill())))\n    }\n\n    let emptyRow = types.row.create(null, Fragment.from(cells)), rows = []\n    for (let i = map.height; i < height; i++) rows.push(emptyRow)\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows)\n  }\n  return !!(empty || emptyHead)\n}\n\n// Make sure the given line (left, top) to (right, top) doesn't cross\n// any rowspan cells by splitting cells that cross it. Return true if\n// something changed.\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height) return false\n  let found = false\n  for (let col = left; col < right; col++) {\n    let index = top * map.width + col, pos = map.map[index]\n    if (map.map[index - map.width] == pos) {\n      found = true\n      let cell = table.nodeAt(pos)\n      let {top: cellTop, left: cellLeft} = map.findCell(pos)\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, setAttr(cell.attrs, \"rowspan\", top - cellTop))\n      tr.insert(tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n                cell.type.createAndFill(setAttr(cell.attrs, \"rowspan\", (cellTop + cell.attrs.rowspan) - top)))\n      col += cell.attrs.colspan - 1\n    }\n  }\n  return found\n}\n\n// Make sure the given line (left, top) to (left, bottom) doesn't\n// cross any colspan cells by splitting cells that cross it. Return\n// true if something changed.\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width) return false\n  let found = false\n  for (let row = top; row < bottom; row++) {\n    let index = row * map.width + left, pos = map.map[index]\n    if (map.map[index - 1] == pos) {\n      found = true\n      let cell = table.nodeAt(pos), cellLeft = map.colCount(pos)\n      let updatePos = tr.mapping.slice(mapFrom).map(pos + start)\n      tr.setNodeMarkup(updatePos, null, removeColSpan(cell.attrs, left - cellLeft, cell.attrs.colspan - (left - cellLeft)))\n      tr.insert(updatePos + cell.nodeSize, cell.type.createAndFill(removeColSpan(cell.attrs, 0, left - cellLeft)))\n      row += cell.attrs.rowspan - 1\n    }\n  }\n  return found\n}\n\n// Insert the given set of cells (as returned by `pastedCells`) into a\n// table, at the position pointed at by rect.\nexport function insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc, map = TableMap.get(table)\n  let {top, left} = rect\n  let right = left + cells.width, bottom = top + cells.height\n  let tr = state.tr, mapFrom = 0\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc\n    map = TableMap.get(table)\n    mapFrom = tr.mapping.maps.length\n  }\n  // Prepare the table to be large enough and not have any cells\n  // crossing the boundaries of the rectangle that we want to\n  // insert into. If anything about it changes, recompute the table\n  // map so that subsequent operations can see the current shape.\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom)) recomp()\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom)) recomp()\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom)) recomp()\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom)) recomp()\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom)) recomp()\n\n  for (let row = top; row < bottom; row++) {\n    let from = map.positionAt(row, left, table), to = map.positionAt(row, right, table)\n    tr.replace(tr.mapping.slice(mapFrom).map(from + tableStart), tr.mapping.slice(mapFrom).map(to + tableStart),\n               new Slice(cells.rows[row - top], 0, 0))\n  }\n  recomp()\n  tr.setSelection(new CellSelection(tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n                                    tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))))\n  dispatch(tr)\n}\n","// This file defines helpers for normalizing tables, making sure no\n// cells overlap (which can happen, if you have the wrong col- and\n// rowspans) and that each row has the same width. Uses the problems\n// reported by `TableMap`.\n\nimport {PluginKey} from \"prosemirror-state\"\nimport {TableMap} from \"./tablemap\"\nimport {setAttr, removeColSpan} from \"./util\"\nimport {tableNodeTypes} from \"./schema\"\nimport {key} from \"./util\"\n\nexport const fixTablesKey = new PluginKey(\"fix-tables\")\n\n// Helper for iterating through the nodes in a document that changed\n// compared to the given previous document. Useful for avoiding\n// duplicate work on each transaction.\nfunction changedDescendants(old, cur, offset, f) {\n  let oldSize = old.childCount, curSize = cur.childCount\n  outer: for (let i = 0, j = 0; i < curSize; i++) {\n    let child = cur.child(i)\n    for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n      if (old.child(scan) == child) {\n        j = scan + 1\n        offset += child.nodeSize\n        continue outer\n      }\n    }\n    f(child, offset)\n    if (j < oldSize && old.child(j).sameMarkup(child))\n      changedDescendants(old.child(j), child, offset + 1, f)\n    else\n      child.nodesBetween(0, child.content.size, f, offset + 1)\n    offset += child.nodeSize\n  }\n}\n\n// :: (EditorState, ?EditorState) → ?Transaction\n// Inspect all tables in the given state's document and return a\n// transaction that fixes them, if necessary. If `oldState` was\n// provided, that is assumed to hold a previous, known-good state,\n// which will be used to avoid re-scanning unchanged parts of the\n// document.\nexport function fixTables(state, oldState) {\n  let tr, check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\") tr = fixTable(state, node, pos, tr)\n  }\n  if (!oldState) state.doc.descendants(check)\n  else if (oldState.doc != state.doc) changedDescendants(oldState.doc, state.doc, 0, check)\n  return tr\n}\n\n// : (EditorState, Node, number, ?Transaction) → ?Transaction\n// Fix the given table, if necessary. Will append to the transaction\n// it was given, if non-null, or create a new one if necessary.\nexport function fixTable(state, table, tablePos, tr) {\n  let map = TableMap.get(table)\n  if (!map.problems) return tr\n  if (!tr) tr = state.tr\n\n  // Track which rows we must add cells to, so that we can adjust that\n  // when fixing collisions.\n  let mustAdd = []\n  for (let i = 0; i < map.height; i++) mustAdd.push(0)\n  for (let i = 0; i < map.problems.length; i++) {\n    let prob = map.problems[i]\n    if (prob.type == \"collision\") {\n      let cell = table.nodeAt(prob.pos)\n      for (let j = 0; j < cell.attrs.rowspan; j++) mustAdd[prob.row + j] += prob.n\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, removeColSpan(cell.attrs, cell.attrs.colspan - prob.n, prob.n))\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n\n    } else if (prob.type == \"overlong_rowspan\") {\n      let cell = table.nodeAt(prob.pos)\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, setAttr(cell.attrs, \"rowspan\", cell.attrs.rowspan - prob.n))\n    } else if (prob.type == \"colwidth mismatch\") {\n      let cell = table.nodeAt(prob.pos)\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, setAttr(cell.attrs, \"colwidth\", prob.colwidth))\n    }\n  }\n  let first, last\n  for (let i = 0; i < mustAdd.length; i++) if (mustAdd[i]) {\n    if (first == null) first = i\n    last = i\n  }\n  // Add the necessary cells, using a heuristic for whether to add the\n  // cells at the start or end of the rows (if it looks like a 'bite'\n  // was taken out of the table, add cells at the start of the row\n  // after the bite. Otherwise add them at the end).\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    let row = table.child(i)\n    let end = pos + row.nodeSize\n    let add = mustAdd[i]\n    if (add > 0) {\n      let tableNodeType = 'cell';\n      if (row.firstChild) {\n        tableNodeType = row.firstChild.type.spec.tableRole\n      }\n      let nodes = []\n      for (let j = 0; j < add; j++)\n        nodes.push(tableNodeTypes(state.schema)[tableNodeType].createAndFill())\n      let side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1\n      tr.insert(tr.mapping.map(side), nodes)\n    }\n    pos = end\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true })\n}\n","export class TableView {\n  constructor(node, cellMinWidth) {\n    this.node = node\n    this.cellMinWidth = cellMinWidth\n    this.dom = document.createElement(\"div\")\n    this.dom.className = \"tableWrapper\"\n    this.table = this.dom.appendChild(document.createElement(\"table\"))\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"))\n    updateColumns(node, this.colgroup, this.table, cellMinWidth)\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"))\n  }\n\n  update(node) {\n    if (node.type != this.node.type) return false\n    this.node = node\n    updateColumns(node, this.colgroup, this.table, this.cellMinWidth)\n    return true\n  }\n\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target))\n  }\n}\n\nexport function updateColumns(node, colgroup, table, cellMinWidth, overrideCol, overrideValue) {\n  let totalWidth = 0, fixedWidth = true\n  let nextDOM = colgroup.firstChild, row = node.firstChild\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    let {colspan, colwidth} = row.child(i).attrs\n    for (let j = 0; j < colspan; j++, col++) {\n      let hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j]\n      let cssWidth = hasWidth ? hasWidth + \"px\" : \"\"\n      totalWidth += hasWidth || cellMinWidth\n      if (!hasWidth) fixedWidth = false\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement(\"col\")).style.width = cssWidth\n      } else {\n        if (nextDOM.style.width != cssWidth) nextDOM.style.width = cssWidth\n        nextDOM = nextDOM.nextSibling\n      }\n    }\n  }\n\n  while (nextDOM) {\n    let after = nextDOM.nextSibling\n    nextDOM.parentNode.removeChild(nextDOM)\n    nextDOM = after\n  }\n\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\"\n    table.style.minWidth = \"\"\n  } else {\n    table.style.width = \"\"\n    table.style.minWidth = totalWidth + \"px\"\n  }\n}\n","import {Plugin, PluginKey} from \"prosemirror-state\"\nimport {Decoration, DecorationSet} from \"prosemirror-view\"\nimport {cellAround, pointsAtCell, setAttr} from \"./util\"\nimport {TableMap} from \"./tablemap\"\nimport {TableView, updateColumns} from \"./tableview\"\nimport {tableNodeTypes} from \"./schema\"\n\nexport const key = new PluginKey(\"tableColumnResizing\")\n\nexport function columnResizing({ handleWidth = 5, cellMinWidth = 25, View = TableView, lastColumnResizable = true } = {}) {\n  let plugin = new Plugin({\n    key,\n    state: {\n      init(_, state) {\n        this.spec.props.nodeViews[tableNodeTypes(state.schema).table.name] =\n          (node, view) => new View(node, cellMinWidth, view)\n        return new ResizeState(-1, false)\n      },\n      apply(tr, prev) {\n        return prev.apply(tr)\n      }\n    },\n    props: {\n      attributes(state) {\n        let pluginState = key.getState(state)\n        return pluginState.activeHandle > -1 ? {class: \"resize-cursor\"} : null\n      },\n\n      handleDOMEvents: {\n        mousemove(view, event) { handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) },\n        mouseleave(view) { handleMouseLeave(view) },\n        mousedown(view, event) { handleMouseDown(view, event, cellMinWidth) }\n      },\n\n      decorations(state) {\n        let pluginState = key.getState(state)\n        if (pluginState.activeHandle > -1) return handleDecorations(state, pluginState.activeHandle)\n      },\n\n      nodeViews: {}\n    }\n  })\n  return plugin\n}\n\nclass ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle\n    this.dragging = dragging\n  }\n\n  apply(tr) {\n    let state = this, action = tr.getMeta(key)\n    if (action && action.setHandle != null)\n      return new ResizeState(action.setHandle, null)\n    if (action && action.setDragging !== undefined)\n      return new ResizeState(state.activeHandle, action.setDragging)\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1)\n      if (!pointsAtCell(tr.doc.resolve(handle))) handle = null\n      state = new ResizeState(handle, state.dragging)\n    }\n    return state\n  }\n}\n\nfunction handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) {\n  let pluginState = key.getState(view.state)\n\n  if (!pluginState.dragging) {\n    let target = domCellAround(event.target), cell = -1\n    if (target) {\n      let {left, right} = target.getBoundingClientRect()\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\")\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\")\n    }\n\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        let $cell = view.state.doc.resolve(cell)\n        let table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1)\n        let col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1\n\n        if (col == map.width - 1) {\n          return\n        }\n      }\n\n      updateHandle(view, cell)\n    }\n  }\n}\n\nfunction handleMouseLeave(view) {\n  let pluginState = key.getState(view.state)\n  if (pluginState.activeHandle > -1 && !pluginState.dragging) updateHandle(view, -1)\n}\n\nfunction handleMouseDown(view, event, cellMinWidth) {\n  let pluginState = key.getState(view.state)\n  if (pluginState.activeHandle == -1 || pluginState.dragging) return false\n\n  let cell = view.state.doc.nodeAt(pluginState.activeHandle)\n  let width = currentColWidth(view, pluginState.activeHandle, cell.attrs)\n  view.dispatch(view.state.tr.setMeta(key, {setDragging: {startX: event.clientX, startWidth: width}}))\n\n  function finish(event) {\n    window.removeEventListener(\"mouseup\", finish)\n    window.removeEventListener(\"mousemove\", move)\n    let pluginState = key.getState(view.state)\n    if (pluginState.dragging) {\n      updateColumnWidth(view, pluginState.activeHandle, draggedWidth(pluginState.dragging, event, cellMinWidth))\n      view.dispatch(view.state.tr.setMeta(key, {setDragging: null}))\n    }\n  }\n  function move(event) {\n    if (!event.which) return finish(event)\n    let pluginState = key.getState(view.state)\n    let dragged = draggedWidth(pluginState.dragging, event, cellMinWidth)\n    displayColumnWidth(view, pluginState.activeHandle, dragged, cellMinWidth)\n  }\n\n  window.addEventListener(\"mouseup\", finish)\n  window.addEventListener(\"mousemove\", move)\n  event.preventDefault()\n  return true\n}\n\nfunction currentColWidth(view, cellPos, {colspan, colwidth}) {\n  let width = colwidth && colwidth[colwidth.length - 1]\n  if (width) return width\n  let dom = view.domAtPos(cellPos)\n  let node = dom.node.childNodes[dom.offset]\n  let domWidth = node.offsetWidth, parts = colspan\n  if (colwidth) for (let i = 0; i < colspan; i++) if (colwidth[i]) {\n    domWidth -= colwidth[i]\n    parts--\n  }\n  return domWidth / parts\n}\n\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList.contains(\"ProseMirror\") ? null : target.parentNode\n  return target\n}\n\nfunction edgeCell(view, event, side) {\n  let found = view.posAtCoords({left: event.clientX, top: event.clientY})\n  if (!found) return -1\n  let {pos} = found\n  let $cell = cellAround(view.state.doc.resolve(pos))\n  if (!$cell) return -1\n  if (side == \"right\") return $cell.pos\n  let map = TableMap.get($cell.node(-1)), start = $cell.start(-1)\n  let index = map.map.indexOf($cell.pos - start)\n  return index % map.width == 0 ? -1 : start + map.map[index - 1]\n}\n\nfunction draggedWidth(dragging, event, cellMinWidth) {\n  let offset = event.clientX - dragging.startX\n  return Math.max(cellMinWidth, dragging.startWidth + offset)\n}\n\nfunction updateHandle(view, value) {\n  view.dispatch(view.state.tr.setMeta(key, {setHandle: value}))\n}\n\nfunction updateColumnWidth(view, cell, width) {\n  let $cell = view.state.doc.resolve(cell)\n  let table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1)\n  let col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1\n  let tr = view.state.tr\n  for (let row = 0; row < map.height; row++) {\n    let mapIndex = row * map.width + col\n    // Rowspanning cell that has already been handled\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width]) continue\n    let pos = map.map[mapIndex], {attrs} = table.nodeAt(pos)\n    let index = attrs.colspan == 1 ? 0 : col - map.colCount(pos)\n    if (attrs.colwidth && attrs.colwidth[index] == width) continue\n    let colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan)\n    colwidth[index] = width\n    tr.setNodeMarkup(start + pos, null, setAttr(attrs, \"colwidth\", colwidth))\n  }\n  if (tr.docChanged) view.dispatch(tr)\n}\n\nfunction displayColumnWidth(view, cell, width, cellMinWidth) {\n  let $cell = view.state.doc.resolve(cell)\n  let table = $cell.node(-1), start = $cell.start(-1)\n  let col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1\n  let dom = view.domAtPos($cell.start(-1)).node\n  while (dom.nodeName != \"TABLE\") dom = dom.parentNode\n  updateColumns(table, dom.firstChild, dom, cellMinWidth, col, width)\n}\n\nfunction zeroes(n) {\n  let result = []\n  for (let i = 0; i < n; i++) result.push(0)\n  return result\n}\n\nfunction handleDecorations(state, cell) {\n  let decorations = []\n  let $cell = state.doc.resolve(cell)\n  let table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1)\n  let col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan\n  for (let row = 0; row < map.height; row++) {\n    let index = col + row * map.width - 1\n    // For positions that are have either a different cell or the end\n    // of the table to their right, and either the top of the table or\n    // a different cell above them, add a decoration\n    if ((col == map.width || map.map[index] != map.map[index + 1]) &&\n        (row == 0 || map.map[index - 1] != map.map[index - 1 - map.width])) {\n      let cellPos = map.map[index]\n      let pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1\n      let dom = document.createElement(\"div\")\n      dom.className = \"column-resize-handle\"\n      decorations.push(Decoration.widget(pos, dom))\n    }\n  }\n  return DecorationSet.create(state.doc, decorations)\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isActive),expression:\"isActive\"}],staticClass:\"InputBase_reset\",on:{\"click\":function($event){return _vm.$emit('click')}}},[_c('i',{staticClass:\"fal fa-redo fa-sm\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import browser from \"./browser\"\n\nexport const domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling\n    if (!node) return index\n  }\n}\n\nexport const parentNode = function(node) {\n  let parent = node.parentNode\n  return parent && parent.nodeType == 11 ? parent.host : parent\n}\n\nexport const textRange = function(node, from, to) {\n  let range = document.createRange()\n  range.setEnd(node, to == null ? node.nodeValue.length : to)\n  range.setStart(node, from || 0)\n  return range\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport const isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n}\n\nconst atomElements = /^(img|br|input|textarea|hr)$/i\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\")\n        return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      if (node.contentEditable == \"false\") return false\n      off = dir < 0 ? nodeSize(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nexport function isOnEdge(node, offset, parent) {\n  for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) return true\n    let index = domIndex(node)\n    node = node.parentNode\n    if (!node) return false\n    atStart = atStart && index == 0\n    atEnd = atEnd && index == nodeSize(node)\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  let desc\n  for (let cur = dom; cur; cur = cur.parentNode) if (desc = cur.pmViewDesc) break\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport const selectionCollapsed = function(domSel) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"keydown\", true, true)\n  event.keyCode = keyCode\n  event.key = event.code = key\n  return event\n}\n","import {nodeSize, textRange, parentNode} from \"./dom\"\nimport browser from \"./browser\"\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  let rect = node.getBoundingClientRect()\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth,\n          top: rect.top, bottom: rect.top + node.clientHeight}\n}\n\nexport function scrollRectIntoView(view, rect, startDOM) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5\n  let doc = view.dom.ownerDocument\n  for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) break\n    if (parent.nodeType != 1) continue\n    let atTop = parent == doc.body || parent.nodeType != 1\n    let bounding = atTop ? windowRect(doc) : clientRect(parent)\n    let moveX = 0, moveY = 0\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"))\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\")\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"))\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\")\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY)\n      } else {\n        let startX = parent.scrollLeft, startY = parent.scrollTop\n        if (moveY) parent.scrollTop += moveY\n        if (moveX) parent.scrollLeft += moveX\n        let dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY}\n      }\n    }\n    if (atTop) break\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nexport function storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top)\n  let refDOM, refTop\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y)\n    if (dom == view.dom || !view.dom.contains(dom)) continue\n    let localRect = dom.getBoundingClientRect()\n    if (localRect.top >= startY - 20) {\n      refDOM = dom\n      refTop = localRect.top\n      break\n    }\n  }\n  return {refDOM, refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  let stack = [], doc = dom.ownerDocument\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom, top: dom.scrollTop, left: dom.scrollLeft})\n    if (dom == doc) break\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nexport function resetScrollPos({refDOM, refTop, stack}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop)\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (let i = 0; i < stack.length; i++) {\n    let {dom, top, left} = stack[i]\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop\n    if (dom.scrollLeft != left) dom.scrollLeft = left\n  }\n}\n\nlet preventScrollSupported = null\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nexport function focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive() // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported)\n\n  let stored = scrollStack(dom)\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true}\n      return true\n    }\n  } : undefined)\n  if (!preventScrollSupported) {\n    preventScrollSupported = false\n    restoreScrollStack(stored, 0)\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  let closest, dxClosest = 2e8, coordsClosest, offset = 0\n  let rowBot = coords.top, rowTop = coords.top\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects\n    if (child.nodeType == 1) rects = child.getClientRects()\n    else if (child.nodeType == 3) rects = textRange(child).getClientRects()\n    else continue\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords\n          if (child.nodeType == 1 && dx)\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest)\n  if (!closest || (dxClosest && closest.nodeType == 1)) return {node, offset}\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length\n  let range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rect = singleRect(range, 1)\n    if (rect.top == rect.bottom) continue\n    if (inRect(coords, rect))\n      return {node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)}\n  }\n  return {node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    return parent\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  let {node, offset} = findOffsetInNode(elt, coords), bias = -1\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect()\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outside = -1\n  for (let cur = node;;) {\n    if (cur == view.dom) break\n    let desc = view.docView.nearestDesc(cur, true)\n    if (!desc) return null\n    if (desc.node.isBlock && desc.parent) {\n      let rect = desc.dom.getBoundingClientRect()\n      if (rect.left > coords.left || rect.top > coords.top) outside = desc.posBefore\n      else if (rect.right < coords.left || rect.bottom < coords.top) outside = desc.posAfter\n      else break\n    }\n    cur = desc.dom.parentNode\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  let len = element.childNodes.length\n  if (len && box.top < box.bottom) {\n    for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      let child = element.childNodes[i]\n      if (child.nodeType == 1) {\n        let rects = child.getClientRects()\n        for (let j = 0; j < rects.length; j++) {\n          let rect = rects[j]\n          if (inRect(coords, rect)) return elementFromPoint(child, coords, rect)\n        }\n      }\n      if ((i = (i + 1) % len) == startI) break\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nexport function posAtCoords(view, coords) {\n  let root = view.root, node, offset\n  if (root.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      let pos = root.caretPositionFromPoint(coords.left, coords.top)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } catch (_) {}\n  }\n  if (!node && root.caretRangeFromPoint) {\n    let range = root.caretRangeFromPoint(coords.left, coords.top)\n    if (range) ({startContainer: node, startOffset: offset} = range)\n  }\n\n  let elt = root.elementFromPoint(coords.left, coords.top + 1), pos\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    let box = view.dom.getBoundingClientRect()\n    if (!inRect(coords, box)) return null\n    elt = elementFromPoint(view.dom, coords, box)\n    if (!elt) return null\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (browser.safari && elt.draggable) node = offset = null\n  elt = targetKludge(elt, coords)\n  if (node) {\n    if (browser.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length)\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        let next = node.childNodes[offset], box\n        if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n            box.bottom > coords.top)\n          offset++\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      pos = view.state.doc.content.size\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      pos = posFromCaret(view, node, offset, coords)\n  }\n  if (pos == null) pos = posFromElement(view, elt, coords)\n\n  let desc = view.docView.nearestDesc(elt, true)\n  return {pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  let rects = object.getClientRects()\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\n// : (EditorView, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nexport function coordsAtPos(view, pos) {\n  let {node, offset} = view.docView.domFromPos(pos)\n\n  // These browsers support querying empty text ranges\n  if (node.nodeType == 3 && (browser.webkit || browser.gecko)) {\n    let rect = singleRect(textRange(node, offset, offset), 0)\n    // Firefox returns bad results (the position before the space)\n    // when querying a position directly after line-broken\n    // whitespace. Detect this situation and and kludge around it\n    if (browser.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n      let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1)\n      if (rectBefore.top == rect.top) {\n        let rectAfter = singleRect(textRange(node, offset, offset + 1), -1)\n        if (rectAfter.top != rect.top)\n          return flattenV(rectAfter, rectAfter.left < rectBefore.left)\n      }\n    }\n    return rect\n  }\n\n  if (node.nodeType == 1 && !view.state.doc.resolve(pos).parent.inlineContent) {\n    // Return a horizontal line in block context\n    let top = true, rect\n    if (offset < node.childNodes.length) {\n      let after = node.childNodes[offset]\n      if (after.nodeType == 1) rect = after.getBoundingClientRect()\n    }\n    if (!rect && offset) {\n      let before = node.childNodes[offset - 1]\n      if (before.nodeType == 1) { rect = before.getBoundingClientRect(); top = false }\n    }\n    return flattenH(rect || node.getBoundingClientRect(), top)\n  }\n\n  // Not Firefox/Chrome, or not in a text node, so we have to use\n  // actual element/character rectangles to get a solution (this part\n  // is not very bidi-safe)\n  //\n  // Try the left side first, fall back to the right one if that\n  // doesn't work.\n  for (let dir = -1; dir < 2; dir += 2) {\n    if (dir < 0 && offset) {\n      let prev, target = node.nodeType == 3 ? textRange(node, offset - 1, offset)\n          : (prev = node.childNodes[offset - 1]).nodeType == 3 ? textRange(prev)\n          : prev.nodeType == 1 && prev.nodeName != \"BR\" ? prev : null // BR nodes tend to only return the rectangle before them\n      if (target) {\n        let rect = singleRect(target, 1)\n        if (rect.top < rect.bottom) return flattenV(rect, false)\n      }\n    } else if (dir > 0 && offset < nodeSize(node)) {\n      let next, target = node.nodeType == 3 ? textRange(node, offset, offset + 1)\n          : (next = node.childNodes[offset]).nodeType == 3 ? textRange(next)\n          : next.nodeType == 1 ? next : null\n      if (target) {\n        let rect = singleRect(target, -1)\n        if (rect.top < rect.bottom) return flattenV(rect, true)\n      }\n    }\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, 0), false)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) return rect\n  let x = left ? rect.left : rect.right\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) return rect\n  let y = top ? rect.top : rect.bottom\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state, active = view.root.activeElement\n  if (viewState != state) view.updateState(state)\n  if (active != view.dom) view.focus()\n  try {\n    return f()\n  } finally {\n    if (viewState != state) view.updateState(viewState)\n    if (active != view.dom && active) active.focus()\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection\n  let $pos = dir == \"up\" ? sel.$anchor.min(sel.$head) : sel.$anchor.max(sel.$head)\n  return withFlushedState(view, state, () => {\n    let {node: dom} = view.docView.domFromPos($pos.pos)\n    for (;;) {\n      let nearest = view.docView.nearestDesc(dom, true)\n      if (!nearest) break\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode\n    }\n    let coords = coordsAtPos(view, $pos.pos)\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes\n      if (child.nodeType == 1) boxes = child.getClientRects()\n      else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects()\n      else continue\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i]\n        if (box.bottom > box.top && (dir == \"up\" ? box.bottom < coords.top + 1 : box.top > coords.bottom - 1))\n          return false\n      }\n    }\n    return true\n  })\n}\n\nconst maybeRTL = /[\\u0590-\\u08ac]/\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {$head} = state.selection\n  if (!$head.parent.isTextblock) return false\n  let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size\n  let sel = getSelection()\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd\n\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset\n    let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n    sel.modify(\"move\", dir, \"character\")\n    let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom\n    let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset)\n    // Restore the previous selection\n    sel.removeAllRanges()\n    sel.addRange(oldRange)\n    if (oldBidiLevel != null) sel.caretBidiLevel = oldBidiLevel\n    return result\n  })\n}\n\nlet cachedState = null, cachedDir = null, cachedResult = false\nexport function endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult\n  cachedState = state; cachedDir = dir\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n","import {DOMSerializer, Fragment, Mark} from \"prosemirror-model\"\nimport {TextSelection} from \"prosemirror-state\"\n\nimport {domIndex, isEquivalentPosition, nodeSize} from \"./dom\"\nimport browser from \"./browser\"\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration]) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), and an\n//   array of active decorations (which are automatically drawn, and\n//   the node view may ignore if it isn't interested in them), and\n//   should return true if it was able to update to that node, and\n//   false otherwise. If the node view has a `contentDOM` property (or\n//   no `dom` property), updating its child nodes will be handled by\n//   ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed.\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  // : (?ViewDesc, [ViewDesc], dom.Node, ?dom.Node)\n  constructor(parent, children, dom, contentDOM) {\n    this.parent = parent\n    this.children = children\n    this.dom = dom\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this\n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    this.contentDOM = contentDOM\n    this.dirty = NOT_DIRTY\n  }\n\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget() { return false }\n  matchesMark() { return false }\n  matchesNode() { return false }\n  matchesHack() { return false }\n\n  get beforePosition() { return false }\n\n  // : () → ?ParseRule\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() { return null }\n\n  // : (dom.Event) → bool\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent() { return false }\n\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size\n    return size\n  }\n\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() { return 0 }\n\n  destroy() {\n    this.parent = null\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = null\n    for (let i = 0; i < this.children.length; i++)\n      this.children[i].destroy()\n  }\n\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n      let cur = this.children[i]\n      if (cur == child) return pos\n      pos += cur.size\n    }\n  }\n\n  get posBefore() {\n    return this.parent.posBeforeChild(this)\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n  }\n\n  get posAfter() {\n    return this.posBefore + this.size\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border\n  }\n\n  // : (dom.Node, number, ?number) → number\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domBefore = dom.previousSibling\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n      } else {\n        let domAfter, desc\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domAfter = dom.nextSibling\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd\n    if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = false; break }\n        if (search.parentNode.firstChild != search) break\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = true; break }\n        if (search.parentNode.lastChild != search) break\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n  }\n\n  // Scan up the dom finding the first desc that is a descendant of\n  // this one.\n  nearestDesc(dom, onlyNodes) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur)\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && desc.nodeDOM &&\n            !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n          first = false\n        else\n          return desc\n      }\n    }\n  }\n\n  getDesc(dom) {\n    let desc = dom.pmViewDesc\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc\n  }\n\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom; scan; scan = scan.parentNode) {\n      let desc = this.getDesc(scan)\n      if (desc) return desc.localPosFromDOM(dom, offset, bias)\n    }\n    return -1\n  }\n\n  // : (number) → ?NodeViewDesc\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0]\n        return child\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // : (number) → {node: dom.Node, offset: number}\n  domFromPos(pos) {\n    if (!this.contentDOM) return {node: this.dom, offset: 0}\n    for (let offset = 0, i = 0;; i++) {\n      if (offset == pos) {\n        while (i < this.children.length && (this.children[i].beforePosition || this.children[i].dom.parentNode != this.contentDOM)) i++\n        return {node: this.contentDOM,\n                offset: i == this.children.length ? this.contentDOM.childNodes.length : domIndex(this.children[i].dom)}\n      }\n      if (i == this.children.length) throw new Error(\"Invalid position \" + pos)\n      let child = this.children[i], end = offset + child.size\n      if (pos < end) return child.domFromPos(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0)\n      return {node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length}\n\n    let fromOffset = -1, toOffset = -1\n    for (let offset = base, i = 0;; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node &&\n            child.contentDOM && this.contentDOM.contains(child.contentDOM))\n          return child.parseRange(from, to, childBase)\n\n        from = offset\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1]\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1\n            break\n          }\n          from -= prev.size\n        }\n        if (fromOffset == -1) fromOffset = 0\n      }\n      if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n        to = end\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j]\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom)\n            break\n          }\n          to += next.size\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length\n        break\n      }\n      offset = end\n    }\n    return {node: this.contentDOM, from, to, fromOffset, toOffset}\n  }\n\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false\n    let child = this.children[side < 0 ? 0 : this.children.length - 1]\n    return child.size == 0 || child.emptyChildAt(side)\n  }\n\n  // : (number) → dom.Node\n  domAfterPos(pos) {\n    let {node, offset} = this.domFromPos(pos)\n    if (node.nodeType != 1 || offset == node.childNodes.length)\n      throw new RangeError(\"No node after pos \" + pos)\n    return node.childNodes[offset]\n  }\n\n  // : (number, number, dom.Document)\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root, force) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head), to = Math.max(anchor, head)\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (from > offset && to < end)\n        return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force)\n      offset = end\n    }\n\n    let anchorDOM = this.domFromPos(anchor), headDOM = this.domFromPos(head)\n    let domSel = root.getSelection()\n\n    let brKludge = false\n    // On Firefox, using Selection.collapse to put the cursor after a\n    // BR node for some reason doesn't always work (#1073). On Safari,\n    // the cursor sometimes inexplicable visually lags behind its\n    // reported position in such situations (#1092).\n    if ((browser.gecko || browser.safari) && anchor == head) {\n      let prev = anchorDOM.node.childNodes[anchorDOM.offset - 1]\n      brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\")\n    }\n\n    if (!(force || brKludge && browser.safari) &&\n        isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    let domSelExtended = false\n    if ((domSel.extend || anchor == head) && !brKludge) {\n      domSel.collapse(anchorDOM.node, anchorDOM.offset)\n      try {\n        if (anchor != head) domSel.extend(headDOM.node, headDOM.offset)\n        domSelExtended = true\n      } catch (err) {\n        // In some cases with Chrome the selection is empty after calling\n        // collapse, even when it should be valid. This appears to be a bug, but\n        // it is difficult to isolate. If this happens fallback to the old path\n        // without using extend.\n        if (!(err instanceof DOMException)) throw err\n        // declare global: DOMException\n      }\n    }\n    if (!domSelExtended) {\n      if (anchor > head) { let tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp }\n      let range = document.createRange()\n      range.setEnd(headDOM.node, headDOM.offset)\n      range.setStart(anchorDOM.node, anchorDOM.offset)\n      domSel.removeAllRanges()\n      domSel.addRange(range)\n    }\n  }\n\n  // : (dom.MutationRecord) → bool\n  ignoreMutation(mutation) {\n    return !this.contentDOM && mutation.type != \"selection\"\n  }\n\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n  }\n\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border, endInside = end - child.border\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY\n          if (from == startInside && to == endInside &&\n              (child.contentLost || child.dom.parentNode != this.contentDOM)) child.dirty = NODE_DIRTY\n          else child.markDirty(from - startInside, to - startInside)\n          return\n        } else {\n          child.dirty = NODE_DIRTY\n        }\n      }\n      offset = end\n    }\n    this.dirty = CONTENT_DIRTY\n  }\n\n  markParentsDirty() {\n    let level = 1\n    for (let node = this.parent; node; node = node.parent, level++) {\n      let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY\n      if (node.dirty < dirty) node.dirty = dirty\n    }\n  }\n}\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nconst nothing = []\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  // : (ViewDesc, Decoration)\n  constructor(parent, widget, view, pos) {\n    let self, dom = widget.type.toDOM\n    if (typeof dom == \"function\") dom = dom(view, () => {\n      if (!self) return pos\n      if (self.parent) return self.parent.posBeforeChild(self)\n    })\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        let wrap = document.createElement(\"span\")\n        wrap.appendChild(dom)\n        dom = wrap\n      }\n      dom.contentEditable = false\n      dom.classList.add(\"ProseMirror-widget\")\n    }\n    super(parent, nothing, dom, null)\n    this.widget = widget\n    self = this\n  }\n\n  get beforePosition() {\n    return this.widget.type.side < 0\n  }\n\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  }\n\n  parseRule() { return {ignore: true} }\n\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent\n    return stop ? stop(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  }\n}\n\nclass CompositionViewDesc extends ViewDesc {\n  constructor(parent, dom, textDOM, text) {\n    super(parent, nothing, dom, null)\n    this.textDOM = textDOM\n    this.text = text\n  }\n\n  get size() { return this.text.length }\n\n  localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) return this.posAtStart + (offset ? this.size : 0)\n    return this.posAtStart + offset\n  }\n\n  domFromPos(pos) {\n    return {node: this.textDOM, offset: pos}\n  }\n\n  ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   }\n}\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  // : (ViewDesc, Mark, dom.Node)\n  constructor(parent, mark, dom, contentDOM) {\n    super(parent, [], dom, contentDOM)\n    this.mark = mark\n  }\n\n  static create(parent, mark, inline, view) {\n    let custom = view.nodeViews[mark.type.name]\n    let spec = custom && custom(mark, view, inline)\n    if (!spec || !spec.dom)\n      spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline))\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  }\n\n  parseRule() { return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM} }\n\n  matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent\n      while (!parent.node) parent = parent.parent\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty\n      this.dirty = NOT_DIRTY\n    }\n  }\n\n  slice(from, to, view) {\n    let copy = MarkViewDesc.create(this.parent, this.mark, true, view)\n    let nodes = this.children, size = this.size\n    if (to < size) nodes = replaceNodes(nodes, to, size, view)\n    if (from > 0) nodes = replaceNodes(nodes, 0, from, view)\n    for (let i = 0; i < nodes.length; i++) nodes[i].parent = copy\n    copy.children = nodes\n    return copy\n  }\n}\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSet, dom.Node, ?dom.Node, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    super(parent, node.isLeaf ? nothing : [], dom, contentDOM)\n    this.nodeDOM = nodeDOM\n    this.node = node\n    this.outerDeco = outerDeco\n    this.innerDeco = innerDeco\n    if (contentDOM) this.updateChildren(view, pos)\n  }\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finnicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view, pos) {\n    let custom = view.nodeViews[node.type.name], descObj\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) return pos\n      if (descObj.parent) return descObj.parent.posBeforeChild(descObj)\n    }, outerDeco)\n\n    let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text)\n      else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\")\n    } else if (!dom) {\n      ;({dom, contentDOM} = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)))\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) dom.contentEditable = false\n      if (node.type.spec.draggable) dom.draggable = true\n    }\n\n    let nodeDOM = dom\n    dom = applyOuterDeco(dom, outerDeco, node)\n\n    if (spec)\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1)\n    else if (node.isText)\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view)\n    else\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1)\n  }\n\n  parseRule() {\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) return null\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    let rule = {node: this.node.type.name, attrs: this.node.attrs}\n    if (this.node.type.spec.code) rule.preserveWhitespace = \"full\"\n    if (this.contentDOM && !this.contentLost) rule.contentElement = this.contentDOM\n    else rule.getContent = () => this.contentDOM ? Fragment.empty : this.node.content\n    return rule\n  }\n\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  }\n\n  get size() { return this.node.nodeSize }\n\n  get border() { return this.node.isLeaf ? 0 : 1 }\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view, pos) {\n    let inline = this.node.inlineContent, off = pos\n    let composition = inline && view.composing && this.localCompositionNode(view, pos)\n    let updater = new ViewTreeUpdater(this, composition && composition.node)\n    iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n      if (widget.spec.marks)\n        updater.syncToMarks(widget.spec.marks, inline, view)\n      else if (widget.type.side >= 0 && !insideNode)\n        updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view)\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off)\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view)\n      // Either find an existing desc that exactly matches this node,\n      // and drop the descs before it.\n      updater.findNodeMatch(child, outerDeco, innerDeco, i) ||\n        // Or try updating the next desc to reflect this node.\n        updater.updateNextNode(child, outerDeco, innerDeco, view, i) ||\n        // Or just add it as a new desc.\n        updater.addNode(child, outerDeco, innerDeco, view, off)\n      off += child.nodeSize\n    })\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view)\n    if (this.node.isTextblock) updater.addTextblockHacks()\n    updater.destroyRest()\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (composition) this.protectLocalComposition(view, composition)\n      renderDescs(this.contentDOM, this.children, view)\n      if (browser.ios) iosHacks(this.dom)\n    }\n  }\n\n  localCompositionNode(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node, and the node isn't already part of a\n    // view that's a child of this view\n    let {from, to} = view.state.selection\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) return\n    let sel = view.root.getSelection()\n    let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset)\n    if (!textNode || !this.dom.contains(textNode.parentNode)) return\n\n    // Find the text in the focused node in the node, stop if it's not\n    // there (may have been modified through other means, in which\n    // case it should overwritten)\n    let text = textNode.nodeValue\n    let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos)\n\n    return textPos < 0 ? null : {node: textNode, pos: textPos, text}\n  }\n\n  protectLocalComposition(view, {node, pos, text}) {\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) return\n\n    // Create a composition view for the orphaned nodes\n    let topNode = node\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) break\n      while (topNode.previousSibling) topNode.parentNode.removeChild(topNode.previousSibling)\n      while (topNode.nextSibling) topNode.parentNode.removeChild(topNode.nextSibling)\n      if (topNode.pmViewDesc) topNode.pmViewDesc = null\n    }\n    let desc = new CompositionViewDesc(this, topNode, node, text)\n    view.compositionNodes.push(desc)\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc)\n  }\n\n  // : (Node, [Decoration], DecorationSet, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) return false\n    this.updateInner(node, outerDeco, innerDeco, view)\n    return true\n  }\n\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco)\n    this.node = node\n    this.innerDeco = innerDeco\n    if (this.contentDOM) this.updateChildren(view, this.posAtStart)\n    this.dirty = NOT_DIRTY\n  }\n\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return\n    let needsWrap = this.nodeDOM.nodeType != 1\n    let oldDOM = this.dom\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap))\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null\n      this.dom.pmViewDesc = this\n    }\n    this.outerDeco = outerDeco\n  }\n\n  // Mark this node as being the selected node.\n  selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.draggable = true\n  }\n\n  // Remove selected node marking from this node.\n  deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.removeAttribute(\"draggable\")\n  }\n}\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nexport function docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc)\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view)\n  }\n\n  parseRule() {\n    let skip = this.nodeDOM.parentNode\n    while (skip && skip != this.dom && !skip.pmIsDeco) skip = skip.parentNode\n    return {skip: skip || true}\n  }\n\n  update(node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) return false\n    this.updateOuterDeco(outerDeco)\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text\n      if (view.trackWrites == this.nodeDOM) view.trackWrites = null\n    }\n    this.node = node\n    this.dirty = NOT_DIRTY\n    return true\n  }\n\n  inParent() {\n    let parentDOM = this.parent.contentDOM\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true\n    return false\n  }\n\n  domFromPos(pos) {\n    return {node: this.nodeDOM, offset: pos}\n  }\n\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length)\n    return super.localPosFromDOM(dom, offset, bias)\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  }\n\n  slice(from, to, view) {\n    let node = this.node.cut(from, to), dom = document.createTextNode(node.text)\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  }\n}\n\n// A dummy desc used to tag trailing BR or span nodes created to work\n// around contentEditable terribleness.\nclass BRHackViewDesc extends ViewDesc {\n  parseRule() { return {ignore: true} }\n  matchesHack() { return this.dirty == NOT_DIRTY }\n}\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSet, dom.Node, ?dom.Node, NodeView, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos)\n    this.spec = spec\n  }\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco)\n      if (result) this.updateInner(node, outerDeco, innerDeco, view)\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return super.update(node, outerDeco, innerDeco, view)\n    }\n  }\n\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode()\n  }\n\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()\n  }\n\n  setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : super.setSelection(anchor, head, root, force)\n  }\n\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy()\n    super.destroy()\n  }\n\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation)\n  }\n}\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  let dom = parentDOM.firstChild, written = false\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i], childDOM = desc.dom\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true }\n      dom = dom.nextSibling\n    } else {\n      written = true\n      parentDOM.insertBefore(childDOM, dom)\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild\n      renderDescs(desc.contentDOM, desc.children, view)\n      dom = pos ? pos.nextSibling : parentDOM.firstChild\n    }\n  }\n  while (dom) { dom = rm(dom); written = true }\n  if (written && view.trackWrites == parentDOM) view.trackWrites = null\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) this.nodeName = nodeName\n}\nOuterDecoLevel.prototype = Object.create(null)\n\nconst noDeco = [new OuterDecoLevel]\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco\n\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top]\n\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs, cur = top\n    if (!attrs) continue\n    if (attrs.nodeName)\n      result.push(cur = new OuterDecoLevel(attrs.nodeName))\n\n    for (let name in attrs) {\n      let val = attrs[name]\n      if (val == null) continue\n      if (needsWrap && result.length == 1)\n        result.push(cur = top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"))\n      if (name == \"class\") cur.class = (cur.class ? cur.class + \" \" : \"\") + val\n      else if (name == \"style\") cur.style = (cur.style ? cur.style + \";\" : \"\") + val\n      else if (name != \"nodeName\") cur[name] = val\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM\n\n  let curDOM = nodeDOM\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i], prev = prevComputed[i]\n    if (i) {\n      let parent\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent\n      } else {\n        parent = document.createElement(deco.nodeName)\n        parent.pmIsDeco = true\n        parent.appendChild(curDOM)\n        prev = noDeco[0]\n        curDOM = parent\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco)\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      dom.removeAttribute(name)\n  for (let name in cur)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n      dom.setAttribute(name, cur[name])\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \") : nothing\n    let curList = cur.class ? cur.class.split(\" \") : nothing\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1)\n      dom.classList.remove(prevList[i])\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1)\n      dom.classList.add(curList[i])\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m\n      while (m = prop.exec(prev.style))\n        dom.style.removeProperty(m[1])\n    }\n    if (cur.style)\n      dom.style.cssText += cur.style\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling\n  dom.parentNode.removeChild(dom)\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  // : (NodeViewDesc)\n  constructor(top, lockedNode) {\n    this.top = top\n    this.lock = lockedNode\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = []\n    // Tracks whether anything was changed\n    this.changed = false\n\n    let pre = preMatch(top.node.content, top.children)\n    this.preMatched = pre.nodes\n    this.preMatchOffset = pre.offset\n  }\n\n  getPreMatch(index) {\n    return index >= this.preMatchOffset ? this.preMatched[index - this.preMatchOffset] : null\n  }\n\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return\n    for (let i = start; i < end; i++) this.top.children[i].destroy()\n    this.top.children.splice(start, end - start)\n    this.changed = true\n  }\n\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length)\n  }\n\n  // : ([Mark], EditorView)\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0, depth = this.stack.length >> 1\n    let maxKeep = Math.min(depth, marks.length)\n    while (keep < maxKeep &&\n           (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n      keep++\n\n    while (keep < depth) {\n      this.destroyRest()\n      this.top.dirty = NOT_DIRTY\n      this.index = this.stack.pop()\n      this.top = this.stack.pop()\n      depth--\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1)\n      let found = -1\n      for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n        if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n      }\n      if (found > -1) {\n        if (found > this.index) {\n          this.changed = true\n          this.destroyBetween(this.index, found)\n        }\n        this.top = this.top.children[this.index]\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view)\n        this.top.children.splice(this.index, 0, markDesc)\n        this.top = markDesc\n        this.changed = true\n      }\n      this.index = 0\n      depth++\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSet) → bool\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    let found = -1, preMatch = index < 0 ? undefined : this.getPreMatch(index), children = this.top.children\n    if (preMatch && preMatch.matchesNode(node, outerDeco, innerDeco)) {\n      found = children.indexOf(preMatch)\n    } else {\n      for (let i = this.index, e = Math.min(children.length, i + 5); i < e; i++) {\n        let child = children[i]\n        if (child.matchesNode(node, outerDeco, innerDeco) && this.preMatched.indexOf(child) < 0) {\n          found = i\n          break\n        }\n      }\n    }\n    if (found < 0) return false\n    this.destroyBetween(this.index, found)\n    this.index++\n    return true\n  }\n\n  // : (Node, [Decoration], DecorationSet, EditorView, Fragment, number) → bool\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index) {\n    for (let i = this.index; i < this.top.children.length; i++) {\n      let next = this.top.children[i]\n      if (next instanceof NodeViewDesc) {\n        let preMatch = this.preMatched.indexOf(next)\n        if (preMatch > -1 && preMatch + this.preMatchOffset != index) return false\n        let nextDOM = next.dom\n\n        // Can't update if nextDOM is or contains this.lock, except if\n        // it's a text node whose content already matches the new text\n        // and whose decorations match the new ones.\n        let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n            !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n              next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco))\n        if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n          this.destroyBetween(this.index, i)\n          if (next.dom != nextDOM) this.changed = true\n          this.index++\n          return true\n        }\n        break\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSet, EditorView)\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view, pos) {\n    this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos))\n    this.changed = true\n  }\n\n  placeWidget(widget, view, pos) {\n    let next = this.index < this.top.children.length ? this.top.children[this.index] : null\n    if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n      this.index++\n    } else {\n      let desc = new WidgetViewDesc(this.top, widget, view, pos)\n      this.top.children.splice(this.index++, 0, desc)\n      this.changed = true\n    }\n  }\n\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1]\n    while (lastChild instanceof MarkViewDesc) lastChild = lastChild.children[lastChild.children.length - 1]\n\n    if (!lastChild || // Empty textblock\n        !(lastChild instanceof TextViewDesc) ||\n        /\\n$/.test(lastChild.node.text)) {\n      if (this.index < this.top.children.length && this.top.children[this.index].matchesHack()) {\n        this.index++\n      } else {\n        let dom = document.createElement(\"br\")\n        this.top.children.splice(this.index++, 0, new BRHackViewDesc(this.top, nothing, dom, null))\n        this.changed = true\n      }\n    }\n  }\n}\n\n// : (Fragment, [ViewDesc]) → [ViewDesc]\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing\n// those for other nodes. Returns an array whose positions correspond\n// to node positions in the fragment, and whose elements are either\n// descs matched to the child at that index, or empty.\nfunction preMatch(frag, descs) {\n  let result = [], end = frag.childCount\n  for (let i = descs.length - 1; end > 0 && i >= 0; i--) {\n    let desc = descs[i], node = desc.node\n    if (!node) continue\n    if (node != frag.child(end - 1)) break\n    result.push(desc)\n    --end\n  }\n  return {nodes: result.reverse(), offset: end}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSet, (Decoration, number), (Node, [Decoration], DecorationSet, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent), offset = 0\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i)\n      onNode(child, locals, deco.forChild(offset, child), i)\n      offset += child.nodeSize\n    }\n    return\n  }\n\n  let decoIndex = 0, active = [], restNode = null\n  for (let parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let widget = locals[decoIndex++], widgets\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        (widgets || (widgets = [widget])).push(locals[decoIndex++])\n      if (widgets) {\n        widgets.sort(compareSide)\n        for (let i = 0; i < widgets.length; i++) onWidget(widgets[i], parentIndex, !!restNode)\n      } else {\n        onWidget(widget, parentIndex, !!restNode)\n      }\n    }\n\n    let child, index\n    if (restNode) {\n      index = -1\n      child = restNode\n      restNode = null\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex\n      child = parent.child(parentIndex++)\n    } else {\n      break\n    }\n\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1)\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      active.push(locals[decoIndex++])\n\n    let end = offset + child.nodeSize\n    if (child.isText) {\n      let cutAt = end\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset)\n        child = child.cut(0, cutAt - offset)\n        end = cutAt\n        index = -1\n      }\n    }\n\n    let outerDeco = !active.length ? nothing\n        : child.isInline && !child.isLeaf ? active.filter(d => !d.inline)\n        : active.slice()\n    onNode(child, outerDeco, deco.forChild(offset, child), index)\n    offset = end\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText\n    dom.style.cssText = oldCSS + \"; list-style: square !important\"\n    window.getComputedStyle(dom).listStyle\n    dom.style.cssText = oldCSS\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) return node\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        return node.childNodes[offset]\n      node = node.childNodes[offset - 1]\n      offset = nodeSize(node)\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset]\n      offset = 0\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    let child = frag.child(i++), childStart = pos\n    pos += child.nodeSize\n    if (!child.isText) continue\n    let str = child.text\n    while (i < frag.childCount) {\n      let next = frag.child(i++)\n      pos += next.nodeSize\n      if (!next.isText) break\n      str += next.text\n    }\n    if (pos >= from) {\n      let found = str.lastIndexOf(text, to - childStart)\n      if (found >= 0 && found + text.length + childStart >= from)\n        return childStart + found\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  let result = []\n  for (let i = 0, off = 0; i < nodes.length; i++) {\n    let child = nodes[i], start = off, end = off += child.size\n    if (start >= to || end <= from) {\n      result.push(child)\n    } else {\n      if (start < from) result.push(child.slice(0, from - start, view))\n      if (replacement) {\n        result.push(replacement)\n        replacement = null\n      }\n      if (end > to) result.push(child.slice(to - start, child.size, view))\n    }\n  }\n  return result\n}\n","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport browser from \"./browser\"\nimport {domIndex, selectionCollapsed} from \"./dom\"\nimport {selectionToDOM} from \"./selection\"\n\nfunction moveSelectionBlock(state, dir) {\n  let {$anchor, $head} = state.selection\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head)\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView())\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      let next = moveSelectionBlock(view.state, dir)\n      if (next && (next instanceof NodeSelection)) return apply(view, next)\n      return false\n    } else if (!(browser.mac && mods.indexOf(\"m\") > -1)) {\n      let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc\n      if (!node || node.isText) return false\n      let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) return false\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (browser.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next) return apply(view, next)\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let moveNode, moveOffset, force = false\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (browser.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) force = true\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        let before = node.childNodes[offset - 1]\n        if (isIgnorable(before)) {\n          moveNode = node\n          moveOffset = --offset\n        } else if (before.nodeType == 3) {\n          node = before\n          offset = node.nodeValue.length\n        } else break\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let prev = node.previousSibling\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode\n        moveOffset = domIndex(prev)\n        prev = prev.previousSibling\n      }\n      if (!prev) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = 0\n      } else {\n        node = prev\n        offset = nodeLen(node)\n      }\n    }\n  }\n  if (force) setSelFocus(view, sel, node, offset)\n  else if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let len = nodeLen(node)\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break\n      let after = node.childNodes[offset]\n      if (isIgnorable(after)) {\n        moveNode = node\n        moveOffset = ++offset\n      }\n      else break\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let next = node.nextSibling\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode\n        moveOffset = domIndex(next) + 1\n        next = next.nextSibling\n      }\n      if (!next) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = len = 0\n      } else {\n        node = next\n        offset = 0\n        len = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    let range = document.createRange()\n    range.setEnd(node, offset)\n    range.setStart(node, offset)\n    sel.removeAllRanges()\n    sel.addRange(range)\n  } else if (sel.extend) {\n    sel.extend(node, offset)\n  }\n  view.domObserver.setCurSelection()\n  let {state} = view\n  // If no state update ends up happening, reset the selection.\n  setTimeout(() => {\n    if (view.state == state) selectionToDOM(view)\n  }, 50)\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) return false\n  if (browser.mac && mods.indexOf(\"m\") > -1) return false\n  let {$from, $to} = sel\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next && (next instanceof NodeSelection))\n      return apply(view, next)\n  }\n  if (!$from.parent.inlineContent) {\n    let beyond = Selection.findFrom(dir < 0 ? $from : $to, dir)\n    return beyond ? apply(view, beyond) : true\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true\n  let {$head, $anchor, empty} = view.state.selection\n  if (!$head.sameParent($anchor)) return true\n  if (!empty) return false\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter)\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos)\n    else tr.delete($head.pos, $head.pos + nextNode.nodeSize)\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop()\n  node.contentEditable = state\n  view.domObserver.start()\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!browser.safari || view.state.selection.$head.parentOffset > 0) return\n  let {focusNode, focusOffset} = view.root.getSelection()\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    let child = focusNode.firstChild\n    switchEditable(view, child, true)\n    setTimeout(() => switchEditable(view, child, false), 20)\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  let result = \"\"\n  if (event.ctrlKey) result += \"c\"\n  if (event.metaKey) result += \"m\"\n  if (event.altKey) result += \"a\"\n  if (event.shiftKey) result += \"s\"\n  return result\n}\n\nexport function captureKeyDown(view, event) {\n  let code = event.keyCode, mods = getMods(event)\n  if (code == 8 || (browser.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (browser.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (browser.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n","import {Fragment, DOMParser} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\n\nimport {selectionBetween, selectionFromDOM, selectionToDOM} from \"./selection\"\nimport {selectionCollapsed, keyEvent} from \"./dom\"\nimport browser from \"./browser\"\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  let {node: parent, fromOffset, toOffset, from, to} = view.docView.parseRange(from_, to_)\n\n  let domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}]\n    if (!selectionCollapsed(domSel))\n      find.push({node: domSel.focusNode, offset: domSel.focusOffset})\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (browser.chrome && view.lastKeyCode === 8) {\n    for (let off = toOffset; off > fromOffset; off--) {\n      let node = parent.childNodes[off - 1], desc = node.pmViewDesc\n      if (node.nodeType == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) break\n    }\n  }\n  let startDoc = view.state.doc\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n  let $from = startDoc.resolve(from)\n\n  let sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.spec.code ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode,\n    context: $from\n  })\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos, head = find[1] && find[1].pos\n    if (head == null) head = anchor\n    sel = {anchor: anchor + from, head: head + from}\n  }\n  return {doc, sel, from, to}\n}\n\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (browser.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      let skip = document.createElement(\"div\")\n      skip.appendChild(document.createElement(\"li\"))\n      return {skip}\n    } else if (dom.parentNode.lastChild == dom || browser.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nexport function readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    let origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null\n    let newSel = selectionFromDOM(view, origin)\n    if (newSel && !view.state.selection.eq(newSel)) {\n      let tr = view.state.tr.setSelection(newSel)\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n      else if (origin == \"key\") tr.scrollIntoView()\n      view.dispatch(tr)\n    }\n    return\n  }\n\n  let $before = view.state.doc.resolve(from)\n  let shared = $before.sharedDepth(to)\n  from = $before.before(shared + 1)\n  to = view.state.doc.resolve(to).after(shared + 1)\n\n  let sel = view.state.selection\n  let parse = parseBetween(view, from, to)\n\n  let doc = view.state.doc, compare = doc.slice(parse.from, parse.to)\n  let preferredPos, preferredSide\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to\n    preferredSide = \"end\"\n  } else {\n    preferredPos = view.state.selection.from\n    preferredSide = \"start\"\n  }\n  view.lastKeyCode = null\n\n  let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide)\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to}\n    } else {\n      if (parse.sel) {\n        let sel = resolveSelection(view, view.state.doc, parse.sel)\n        if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n      }\n      return\n    }\n  }\n  view.domChangeCount++\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += (view.state.selection.to - change.endA)\n      change.endA = view.state.selection.to\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (browser.ie && browser.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--\n    change.endA--\n    change.endB--\n  }\n\n  let $from = parse.doc.resolveNoCache(change.start - parse.from)\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from)\n  let inlineChange = $from.sameParent($to) && $from.parent.inlineContent\n  let nextSel\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((browser.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.lastIOSEnter = 0\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n    if (browser.android && browser.chrome) view.domObserver.suppressSelectionUpdates() // #820\n    return\n  }\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (browser.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2\n    $to = parse.doc.resolveNoCache(change.endB - parse.from)\n    setTimeout(() => {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })\n    }, 20)\n  }\n\n  let chFrom = change.start, chTo = change.endA\n\n  let tr, storedMarks, markChange, $from1\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (browser.ie && browser.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates()\n        setTimeout(() => selectionToDOM(view), 20)\n      }\n      tr = view.state.tr.delete(chFrom, chTo)\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA))\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr\n      if (markChange.type == \"add\") tr.addMark(chFrom, chTo, markChange.mark)\n      else tr.removeMark(chFrom, chTo, markChange.mark)\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset)\n      if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text))) return\n      tr = view.state.tr.insertText(text, chFrom, chTo)\n    }\n  }\n\n  if (!tr)\n    tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from))\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, parse.sel)\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel && !(browser.chrome && browser.android && view.composing && sel.empty &&\n                   (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                 browser.ie && sel.empty && sel.head == chFrom))\n      tr.setSelection(sel)\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks)\n  view.dispatch(tr.scrollIntoView())\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks\n  let added = curMarks, removed = prevMarks, type, mark, update\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added)\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed)\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0]\n    type = \"add\"\n    update = node => node.mark(mark.addToSet(node.marks))\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0]\n    type = \"remove\"\n    update = node => node.mark(mark.removeFromSet(node.marks))\n  } else {\n    return null\n  }\n  let updated = []\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)))\n  if (Fragment.from(updated).eq(cur)) return {mark, type}\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    return false\n\n  let $start = old.resolve(start)\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    return false\n  let $next = old.resolve(skipClosingAndOpening($start, true, true))\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    return false\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--\n    end++\n    fromEnd = false\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth))\n    while (next && !next.isLeaf) {\n      next = next.firstChild\n      end++\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  let start = a.findDiffStart(b, pos)\n  if (start == null) return null\n  let {a: endA, b: endB} = a.findDiffEnd(b, pos + a.size, pos + b.size)\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, start - Math.min(endA, endB))\n    preferredPos -= endA + adjust - start\n  }\n  if (endA < start && a.size < b.size) {\n    let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0\n    start -= move\n    endB = start + (endB - endA)\n    endA = start\n  } else if (endB < start) {\n    let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0\n    start -= move\n    endA = start + (endA - endB)\n    endB = start\n  }\n  return {start, endA, endB}\n}\n","import {Slice, Fragment, DOMParser, DOMSerializer} from \"prosemirror-model\"\n\nexport function serializeForClipboard(view, slice) {\n  let context = [], {content, openStart, openEnd} = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--\n    openEnd--\n    let node = content.firstChild\n    context.push(node.type.name, node.type.hasRequiredAttrs() ? node.attrs : null)\n    content = node.content\n  }\n\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema)\n  let doc = detachedDoc(), wrap = doc.createElement(\"div\")\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}))\n\n  let firstChild = wrap.firstChild, needsWrap\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = doc.createElement(needsWrap[i])\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd} ${JSON.stringify(context)}`)\n\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\")\n\n  return {dom: wrap, text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nexport function parseFromClipboard(view, text, html, plainText, $context) {\n  let dom, inCode = $context.parent.type.spec.code, slice\n  if (!html && !text) return null\n  let asText = text && (plainText || inCode || !html)\n  if (asText) {\n    view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText) })\n    if (inCode) return new Slice(Fragment.from(view.state.schema.text(text)), 0, 0)\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText))\n    if (parsed) {\n      slice = parsed\n    } else {\n      dom = document.createElement(\"div\")\n      text.trim().split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        dom.appendChild(document.createElement(\"p\")).textContent = block\n      })\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => { html = f(html) })\n    dom = readHTML(html)\n  }\n\n  let contextNode = dom && dom.querySelector(\"[data-pm-slice]\")\n  let sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"))\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n    slice = parser.parseSlice(dom, {preserveWhitespace: !!(asText || sliceData), context: $context})\n  }\n  if (sliceData)\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3])\n  else // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), false)\n\n  view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  return slice\n}\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) return fragment\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d)\n    let match = parent.contentMatchAt($context.index(d))\n    let lastWrap, result = []\n    fragment.forEach(node => {\n      if (!result) return\n      let wrap = match.findWrapping(node.type), inLast\n      if (!wrap) return result = null\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length)\n        let wrapped = withWrappers(node, wrap)\n        result.push(wrapped)\n        match = match.matchType(wrapped.type, wrapped.attrs)\n        lastWrap = wrap\n      }\n    })\n    if (result) return Fragment.from(result)\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--)\n    node = wrap[i].create(null, Fragment.from(node))\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1)\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner))\n    let match = sibling.contentMatchAt(sibling.childCount)\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))))\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) return node\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1))\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content\n  if (depth < to - 1) inner = closeRange(inner, side, from, to, depth + 1, openEnd)\n  if (depth >= from)\n    inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true))\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd)\n  if (openEnd < slice.openEnd)\n    slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd)\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n}\n\nlet _detachedDoc = null\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  let metas = /(\\s*<meta [^>]*>)*/.exec(html)\n  if (metas) html = html.slice(metas[0].length)\n  let elt = detachedDoc().createElement(\"div\")\n  let firstTag = /(?:<meta [^>]*>)*<([a-z][^>\\s]+)/i.exec(html), wrap, depth = 0\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()]) {\n    html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\")\n    depth = wrap.length\n  }\n  elt.innerHTML = html\n  for (let i = 0; i < depth; i++) elt = elt.firstChild\n  return elt\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) return slice\n  let schema = slice.content.firstChild.type.schema, array\n  try { array = JSON.parse(context) }\n  catch(e) { return slice }\n  let {content, openStart, openEnd} = slice\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]]\n    if (!type || type.hasRequiredAttrs()) break\n    content = Fragment.from(type.create(array[i + 1], content))\n    openStart++; openEnd++\n  }\n  return new Slice(content, openStart, openEnd)\n}\n","import browser from \"./browser\"\nimport {domIndex, isEquivalentPosition} from \"./dom\"\nimport {hasFocusAndSelection, hasSelection, selectionToDOM} from \"./selection\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n}\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nclass SelectionState {\n  constructor() {\n    this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null\n  }\n\n  set(sel) {\n    this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset\n    this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset\n  }\n\n  eq(sel) {\n    return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n      sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n  }\n}\n\nexport class DOMObserver {\n  constructor(view, handleDOMChange) {\n    this.view = view\n    this.handleDOMChange = handleDOMChange\n    this.queue = []\n    this.flushingSoon = -1\n    this.observer = window.MutationObserver &&\n      new window.MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) this.queue.push(mutations[i])\n        // IE11 will sometimes (on backspacing out a single character\n        // text node after a BR node) call the observer callback\n        // before actually updating the DOM, which will cause\n        // ProseMirror to miss the change (see #930)\n        if (browser.ie && browser.ie_version <= 11 && mutations.some(\n          m => m.type == \"childList\" && m.removedNodes.length ||\n               m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n          this.flushSoon()\n        else\n          this.flush()\n      })\n    this.currentSelection = new SelectionState\n    if (useCharData) {\n      this.onCharData = e => {\n        this.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue})\n        this.flushSoon()\n      }\n    }\n    this.onSelectionChange = this.onSelectionChange.bind(this)\n    this.suppressingSelectionUpdates = false\n  }\n\n  flushSoon() {\n    if (this.flushingSoon < 0)\n      this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush() }, 20)\n  }\n\n  forceFlush() {\n    if (this.flushingSoon > -1) {\n      window.clearTimeout(this.flushingSoon)\n      this.flushingSoon = -1\n      this.flush()\n    }\n  }\n\n  start() {\n    if (this.observer)\n      this.observer.observe(this.view.dom, observeOptions)\n    if (useCharData)\n      this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.connectSelection()\n  }\n\n  stop() {\n    if (this.observer) {\n      let take = this.observer.takeRecords()\n      if (take.length) {\n        for (let i = 0; i < take.length; i++) this.queue.push(take[i])\n        window.setTimeout(() => this.flush(), 20)\n      }\n      this.observer.disconnect()\n    }\n    if (useCharData) this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.disconnectSelection()\n  }\n\n  connectSelection() {\n    this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  disconnectSelection() {\n    this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  suppressSelectionUpdates() {\n    this.suppressingSelectionUpdates = true\n    setTimeout(() => this.suppressingSelectionUpdates = false, 50)\n  }\n\n  onSelectionChange() {\n    if (!hasFocusAndSelection(this.view)) return\n    if (this.suppressingSelectionUpdates) return selectionToDOM(this.view)\n    // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.empty) {\n      let sel = this.view.root.getSelection()\n      // Selection.isCollapsed isn't reliable on IE\n      if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n        return this.flushSoon()\n    }\n    this.flush()\n  }\n\n  setCurSelection() {\n    this.currentSelection.set(this.view.root.getSelection())\n  }\n\n  ignoreSelectionChange(sel) {\n    if (sel.rangeCount == 0) return true\n    let container = sel.getRangeAt(0).commonAncestorContainer\n    let desc = this.view.docView.nearestDesc(container)\n    if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n      this.setCurSelection()\n      return true\n    }\n  }\n\n  flush() {\n    if (!this.view.docView || this.flushingSoon > -1) return\n    let mutations = this.observer ? this.observer.takeRecords() : []\n    if (this.queue.length) {\n      mutations = this.queue.concat(mutations)\n      this.queue.length = 0\n    }\n\n    let sel = this.view.root.getSelection()\n    let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel)\n\n    let from = -1, to = -1, typeOver = false, added = []\n    if (this.view.editable) {\n      for (let i = 0; i < mutations.length; i++) {\n        let result = this.registerMutation(mutations[i], added)\n        if (result) {\n          from = from < 0 ? result.from : Math.min(result.from, from)\n          to = to < 0 ? result.to : Math.max(result.to, to)\n          if (result.typeOver) typeOver = true\n        }\n      }\n    }\n\n    if (browser.gecko && added.length > 1) {\n      let brs = added.filter(n => n.nodeName == \"BR\")\n      if (brs.length == 2) {\n        let [a, b] = brs\n        if (a.parentNode && a.parentNode.parentNode == b.parentNode) b.remove()\n        else a.remove()\n      }\n    }\n\n    if (from > -1 || newSel) {\n      if (from > -1) {\n        this.view.docView.markDirty(from, to)\n        checkCSS(this.view)\n      }\n      this.handleDOMChange(from, to, typeOver, added)\n      if (this.view.docView.dirty) this.view.updateState(this.view.state)\n      else if (!this.currentSelection.eq(sel)) selectionToDOM(this.view)\n    }\n  }\n\n  registerMutation(mut, added) {\n    // Ignore mutations inside nodes that were already noted as inserted\n    if (added.indexOf(mut.target) > -1) return null\n    let desc = this.view.docView.nearestDesc(mut.target)\n    if (mut.type == \"attributes\" &&\n        (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n         // Firefox sometimes fires spurious events for null/empty styles\n         (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n      return null\n    if (!desc || desc.ignoreMutation(mut)) return null\n\n    if (mut.type == \"childList\") {\n      let prev = mut.previousSibling, next = mut.nextSibling\n      if (browser.ie && browser.ie_version <= 11 && mut.addedNodes.length) {\n        // IE11 gives us incorrect next/prev siblings for some\n        // insertions, so if there are added nodes, recompute those\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n          let {previousSibling, nextSibling} = mut.addedNodes[i]\n          if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) prev = previousSibling\n          if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) next = nextSibling\n        }\n      }\n      let fromOffset = prev && prev.parentNode == mut.target\n          ? domIndex(prev) + 1 : 0\n      let from = desc.localPosFromDOM(mut.target, fromOffset, -1)\n      let toOffset = next && next.parentNode == mut.target\n          ? domIndex(next) : mut.target.childNodes.length\n      for (let i = 0; i < mut.addedNodes.length; i++) added.push(mut.addedNodes[i])\n      let to = desc.localPosFromDOM(mut.target, toOffset, 1)\n      return {from, to}\n    } else if (mut.type == \"attributes\") {\n      return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n    } else { // \"characterData\"\n      return {\n        from: desc.posAtStart,\n        to: desc.posAtEnd,\n        // An event was generated for a text change that didn't change\n        // any text. Mark the dom change to fall back to assuming the\n        // selection was typed over with an identical value if it can't\n        // find another change.\n        typeOver: mut.target.nodeValue == mut.oldValue\n      }\n    }\n  }\n}\n\nlet cssChecked = false\n\nfunction checkCSS(view) {\n  if (cssChecked) return\n  cssChecked = true\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\")\n}\n","function compareObjs(a, b) {\n  if (a == b) return true\n  for (let p in a) if (a[p] !== b[p]) return false\n  for (let p in b) if (!(p in a)) return false\n  return true\n}\n\nclass WidgetType {\n  constructor(toDOM, spec) {\n    this.spec = spec || noSpec\n    this.side = this.spec.side || 0\n    this.toDOM = toDOM\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let {pos, deleted} = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1)\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n  }\n\n  valid() { return true }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof WidgetType &&\n       (this.spec.key && this.spec.key == other.spec.key ||\n        this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n  }\n}\n\nclass InlineType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset\n    return from >= to ? null : new Decoration(from, to, this)\n  }\n\n  valid(_, span) { return span.from < span.to }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n\n  static is(span) { return span.type instanceof InlineType }\n}\n\nclass NodeType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1)\n    if (from.deleted) return null\n    let to = mapping.mapResult(span.to + oldOffset, -1)\n    if (to.deleted || to.pos <= from.pos) return null\n    return new Decoration(from.pos - offset, to.pos - offset, this)\n  }\n\n  valid(node, span) {\n    let {index, offset} = node.content.findIndex(span.from)\n    return offset == span.from && offset + node.child(index).nodeSize == span.to\n  }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nexport class Decoration {\n  constructor(from, to, type) {\n    // :: number\n    // The start position of the decoration.\n    this.from = from\n    // :: number\n    // The end position. Will be the same as `from` for [widget\n    // decorations](#view.Decoration^widget).\n    this.to = to\n    this.type = type\n  }\n\n  copy(from, to) {\n    return new Decoration(from, to, this.type)\n  }\n\n  eq(other, offset = 0) {\n    return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n  }\n\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset)\n  }\n\n  // :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n  // Creates a widget decoration, which is a DOM node that's shown in\n  // the document at the given position. It is recommended that you\n  // delay rendering the widget by passing a function that will be\n  // called when the widget is actually drawn in a view, but you can\n  // also directly pass a DOM node. `getPos` can be used to find the\n  // widget's current document position.\n  //\n  //   spec::- These options are supported:\n  //\n  //     side:: ?number\n  //     Controls which side of the document position this widget is\n  //     associated with. When negative, it is drawn before a cursor\n  //     at its position, and content inserted at that position ends\n  //     up after the widget. When zero (the default) or positive, the\n  //     widget is drawn after the cursor and content inserted there\n  //     ends up before the widget.\n  //\n  //     When there are multiple widgets at a given position, their\n  //     `side` values determine the order in which they appear. Those\n  //     with lower values appear first. The ordering of widgets with\n  //     the same `side` value is unspecified.\n  //\n  //     When `marks` is null, `side` also determines the marks that\n  //     the widget is wrapped in—those of the node before when\n  //     negative, those of the node after when positive.\n  //\n  //     marks:: ?[Mark]\n  //     The precise set of marks to draw around the widget.\n  //\n  //     stopEvent:: ?(event: dom.Event) → bool\n  //     Can be used to control which DOM events, when they bubble out\n  //     of this widget, the editor view should ignore.\n  //\n  //     ignoreSelection:: ?bool\n  //     When set (defaults to false), selection changes inside the\n  //     widget are ignored, and don't cause ProseMirror to try and\n  //     re-sync the selection with its selection state.\n  //\n  //     key:: ?string\n  //     When comparing decorations of this type (in order to decide\n  //     whether it needs to be redrawn), ProseMirror will by default\n  //     compare the widget DOM node by identity. If you pass a key,\n  //     that key will be compared instead, which can be useful when\n  //     you generate decorations on the fly and don't want to store\n  //     and reuse DOM nodes. Make sure that any widgets with the same\n  //     key are interchangeable—if widgets differ in, for example,\n  //     the behavior of some event handler, they should get\n  //     different keys.\n  static widget(pos, toDOM, spec) {\n    return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates an inline decoration, which adds the given attributes to\n  // each inline node between `from` and `to`.\n  //\n  //   spec::- These options are recognized:\n  //\n  //     inclusiveStart:: ?bool\n  //     Determines how the left side of the decoration is\n  //     [mapped](#transform.Position_Mapping) when content is\n  //     inserted directly at that position. By default, the decoration\n  //     won't include the new content, but you can set this to `true`\n  //     to make it inclusive.\n  //\n  //     inclusiveEnd:: ?bool\n  //     Determines how the right side of the decoration is mapped.\n  //     See\n  //     [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates a node decoration. `from` and `to` should point precisely\n  // before and after a node in the document. That node, and only that\n  // node, will receive the given attributes.\n  //\n  //   spec::-\n  //\n  //   Optional information to store with the decoration. It\n  //   is also used when comparing decorators for equality.\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec))\n  }\n\n  // :: Object\n  // The spec provided when creating this decoration. Can be useful\n  // if you've stored extra information in that object.\n  get spec() { return this.type.spec }\n\n  get inline() { return this.type instanceof InlineType }\n}\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nconst none = [], noSpec = {}\n\n// ::- A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nexport class DecorationSet {\n  constructor(local, children) {\n    this.local = local && local.length ? local : none\n    this.children = children && children.length ? children : none\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Create a set of decorations, using the structure of the given\n  // document.\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n  }\n\n  // :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n  // Find all decorations in this set which touch the given range\n  // (including decorations that start or end directly at the\n  // boundaries) and match the given predicate on their spec. When\n  // `start` and `end` are omitted, all decorations in the set are\n  // considered. When `predicate` isn't given, all decorations are\n  // assumed to match.\n  find(start, end, predicate) {\n    let result = []\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate)\n    return result\n  }\n\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i]\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n        result.push(span.copy(span.from + offset, span.to + offset))\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate)\n      }\n    }\n  }\n\n  // :: (Mapping, Node, ?Object) → DecorationSet\n  // Map the set of decorations in response to a change in the\n  // document.\n  //\n  //   options::- An optional set of options.\n  //\n  //     onRemove:: ?(decorationSpec: Object)\n  //     When given, this function will be called for each decoration\n  //     that gets dropped as a result of the mapping, passing the\n  //     spec of that decoration.\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n  }\n\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset)\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped)\n      else if (options.onRemove) options.onRemove(this.local[i].spec)\n    }\n\n    if (this.children.length)\n      return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options)\n    else\n      return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Add the given array of decorations to the ones in the set,\n  // producing a new set. Needs access to the current document to\n  // create the appropriate tree structure.\n  add(doc, decorations) {\n    if (!decorations.length) return this\n    if (this == empty) return DecorationSet.create(doc, decorations)\n    return this.addInner(doc, decorations, 0)\n  }\n\n  addInner(doc, decorations, offset) {\n    let children, childIndex = 0\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset, found\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return\n\n      if (!children) children = this.children.slice()\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3\n      if (children[childIndex] == childOffset)\n        children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1)\n      else\n        children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec))\n      childIndex += 3\n    })\n\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset)\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                             children || this.children)\n  }\n\n  // :: ([Decoration]) → DecorationSet\n  // Create a new set that contains the decorations in this set, minus\n  // the ones in the given array.\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this\n    return this.removeInner(decorations, 0)\n  }\n\n  removeInner(decorations, offset) {\n    let children = this.children, local = this.local\n    for (let i = 0; i < children.length; i += 3) {\n      let found, from = children[i] + offset, to = children[i + 1] + offset\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null\n          ;(found || (found = [])).push(span)\n        }\n      }\n      if (!found) continue\n      if (children == this.children) children = this.children.slice()\n      let removed = children[i + 2].removeInner(found, from + 1)\n      if (removed != empty) {\n        children[i + 2] = removed\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].eq(span, offset)) {\n        if (local == this.local) local = this.local.slice()\n        local.splice(j--, 1)\n      }\n    }\n    if (children == this.children && local == this.local) return this\n    return local.length || children.length ? new DecorationSet(local, children) : empty\n  }\n\n  forChild(offset, node) {\n    if (this == empty) return this\n    if (node.isLeaf) return DecorationSet.empty\n\n    let child, local\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2]\n      break\n    }\n    let start = offset + 1, end = start + node.content.size\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i]\n      if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n        let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start\n        if (from < to) (local || (local = [])).push(dec.copy(from, to))\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos))\n      return child ? new DecorationGroup([localSet, child]) : localSet\n    }\n    return child || empty\n  }\n\n  eq(other) {\n    if (this == other) return true\n    if (!(other instanceof DecorationSet) ||\n        this.local.length != other.local.length ||\n        this.children.length != other.children.length) return false\n    for (let i = 0; i < this.local.length; i++)\n      if (!this.local[i].eq(other.local[i])) return false\n    for (let i = 0; i < this.children.length; i += 3)\n      if (this.children[i] != other.children[i] ||\n          this.children[i + 1] != other.children[i + 1] ||\n          !this.children[i + 2].eq(other.children[i + 2])) return false\n    return true\n  }\n\n  locals(node) {\n    return removeOverlap(this.localsInner(node))\n  }\n\n  localsInner(node) {\n    if (this == empty) return none\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local\n    let result = []\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType))\n        result.push(this.local[i])\n    }\n    return result\n  }\n}\n\nconst empty = new DecorationSet()\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty\n\nDecorationSet.removeOverlap = removeOverlap\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members\n  }\n\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty\n    let found = []\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child)\n      if (result == empty) continue\n      if (result instanceof DecorationGroup) found = found.concat(result.members)\n      else found.push(result)\n    }\n    return DecorationGroup.from(found)\n  }\n\n  eq(other) {\n    if (!(other instanceof DecorationGroup) ||\n        other.members.length != this.members.length) return false\n    for (let i = 0; i < this.members.length; i++)\n      if (!this.members[i].eq(other.members[i])) return false\n    return true\n  }\n\n  locals(node) {\n    let result, sorted = true\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node)\n      if (!locals.length) continue\n      if (!result) {\n        result = locals\n      } else {\n        if (sorted) {\n          result = result.slice()\n          sorted = false\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j])\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n  }\n\n  // : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0: return empty\n      case 1: return members[0]\n      default: return new DecorationGroup(members)\n    }\n  }\n}\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice()\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  let shift = (oldStart, oldEnd, newStart, newEnd) => {\n    for (let i = 0; i < children.length; i += 3) {\n      let end = children[i + 1], dSize\n      if (end == -1 || oldStart > end + oldOffset) continue\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize\n        children[i + 1] += dSize\n      }\n    }\n  }\n  for (let i = 0; i < mapping.maps.length; i++) mapping.maps[i].forEach(shift)\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) { // Touched nodes\n    let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset\n    let {index, offset: childOffset} = node.content.findIndex(fromLocal)\n    let childNode = node.maybeChild(index)\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options)\n      if (mapped != empty) {\n        children[i] = fromLocal\n        children[i + 1] = toLocal\n        children[i + 2] = mapped\n      } else {\n        children[i + 1] = -2\n        mustRebuild = true\n      }\n    } else {\n      mustRebuild = true\n    }\n  }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options)\n    let built = buildTree(decorations, node, 0, options)\n    newLocal = built.local\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n      children.splice(i, 3)\n      i -= 3\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i]\n      while (j < children.length && children[j] < from) j += 3\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2])\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans\n  let result = []\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i]\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type))\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, offset, oldOffset)\n      if (mapped) decorations.push(mapped)\n      else if (options.onRemove) options.onRemove(set.local[i].spec)\n    }\n    for (let i = 0; i < set.children.length; i += 3)\n      gather(set.children[i + 2], set.children[i] + oldOffset + 1)\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1)\n    gather(children[i + 2], oldChildren[i] + oldOffset + 1)\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null\n  let end = offset + node.nodeSize, found = null\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      ;(found || (found = [])).push(span)\n      spans[i] = null\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  let result = []\n  for (let i = 0; i < array.length; i++)\n    if (array[i] != null) result.push(array[i])\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtractet from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [], hasNulls = false\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset)\n    if (found) {\n      hasNulls = true\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options)\n      if (subtree != empty)\n        children.push(localStart, localStart + childNode.nodeSize, subtree)\n    }\n  })\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos)\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec)\n    locals.splice(i--, 1)\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i]\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j]\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice()\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to)\n          insertAhead(working, j + 1, next.copy(span.to, next.to))\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice()\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from)\n          insertAhead(working, j, span.copy(next.from, span.to))\n        }\n        break\n      }\n    }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++\n  array.splice(i, 0, deco)\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nexport function viewDecorations(view) {\n  let found = []\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state)\n    if (result && result != empty) found.push(result)\n  })\n  if (view.cursorWrapper)\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]))\n  return DecorationGroup.from(found)\n}\n","const result = {}\nexport default result\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  const ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent)\n  const ie_upto10 = /MSIE \\d/.test(navigator.userAgent)\n  const ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n  result.mac = /Mac/.test(navigator.platform)\n  let ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge)\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent)\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  let chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\n  result.chrome = !!chrome\n  result.chrome_version = chrome && +chrome[1]\n  result.ios = !ie && /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent)\n  result.android = /Android \\d/.test(navigator.userAgent)\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style\n  result.safari = /Apple Computer/.test(navigator.vendor)\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n}\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1960ac3c&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./view.vue?vue&type=template&id=fd4f09f2&\"\nimport script from \"./view.vue?vue&type=script&lang=js&\"\nexport * from \"./view.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n","import { render, staticRenderFns } from \"./HelperReset.vue?vue&type=template&id=716751dc&\"\nimport script from \"./HelperReset.vue?vue&type=script&lang=js&\"\nexport * from \"./HelperReset.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"InputMedia\">\r\n        <input-upload :is-loading=\"state.loading\" @input=\"onUpload\" />\r\n        \r\n        <div class=\"mt-20\">\r\n            <gallery-mosaic\r\n                :items=\"items\"\r\n                :selected=\"[ value ]\"\r\n                :selectable=\"true\"\r\n                @input=\"onInput\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport InputUpload from '../InputUpload'\r\nimport GalleryMosaic from '../GalleryMosaic'\r\n\r\nexport default {\r\n    name: 'InputMedia',\r\n    components: { InputUpload, GalleryMosaic },\r\n    props: {\r\n        value: { type: [Array, String, Number], default: () => [] }\r\n    },\r\n    async fetch () {\r\n        await this.$store.dispatch('library/fetch')\r\n    },\r\n    data: () => ({\r\n        state: {\r\n            loading: false\r\n        }\r\n    }),\r\n    computed: {\r\n        items () { return this.$store.getters['library/find']() }\r\n    },\r\n    methods: {\r\n        async onUpload (files) {\r\n            this.$data.state.loading = true\r\n\r\n            for (const file of files) {\r\n                let result = await this.$store.dispatch('library/create', {\r\n                    file: file.raw\r\n                })\r\n            }\r\n            \r\n            this.$data.state.loading = false\r\n        },\r\n        onInput (id) {\r\n            let item = this.items.find(item => item._id == id)\r\n            this.$emit('input', item)\r\n        }\r\n    }\r\n}\r\n</script>","import { render, staticRenderFns } from \"./editor.vue?vue&type=template&id=2ac7d629&\"\nimport script from \"./editor.vue?vue&type=script&lang=js&\"\nexport * from \"./editor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export { default as StyledBlockExtension } from './extension.js'\r\nexport { default as StyledBlockMenu } from './menu.js'","export default {\r\n    props: {\r\n        modifiers: { type: Array, default: () => [] }\r\n    },\r\n    computed: {\r\n        $modifiers () {\r\n            let modifiers = {}\r\n\r\n            if (this.$props.modifiers) {\r\n                this.$props.modifiers.forEach(modifier => { \r\n                    if (modifier) {\r\n                        modifiers[this.$options.name + '--' + modifier] = true\r\n                    }\r\n                })\r\n            }\r\n\r\n            return modifiers\r\n        }\r\n    }\r\n}","import {findWrapping, liftTarget, canSplit, ReplaceAroundStep} from \"prosemirror-transform\"\nimport {Slice, Fragment, NodeRange} from \"prosemirror-model\"\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0]\n\n// :: NodeSpec\n// An ordered list [node spec](#model.NodeSpec). Has a single\n// attribute, `order`, which determines the number at which the list\n// starts counting, and defaults to 1. Represented as an `<ol>`\n// element.\nexport const orderedList = {\n  attrs: {order: {default: 1}},\n  parseDOM: [{tag: \"ol\", getAttrs(dom) {\n    return {order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1}\n  }}],\n  toDOM(node) {\n    return node.attrs.order == 1 ? olDOM : [\"ol\", {start: node.attrs.order}, 0]\n  }\n}\n\n// :: NodeSpec\n// A bullet list node spec, represented in the DOM as `<ul>`.\nexport const bulletList = {\n  parseDOM: [{tag: \"ul\"}],\n  toDOM() { return ulDOM }\n}\n\n// :: NodeSpec\n// A list item (`<li>`) spec.\nexport const listItem = {\n  parseDOM: [{tag: \"li\"}],\n  toDOM() { return liDOM },\n  defining: true\n}\n\nfunction add(obj, props) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  for (let prop in props) copy[prop] = props[prop]\n  return copy\n}\n\n// :: (OrderedMap<NodeSpec>, string, ?string) → OrderedMap<NodeSpec>\n// Convenience function for adding list-related node types to a map\n// specifying the nodes for a schema. Adds\n// [`orderedList`](#schema-list.orderedList) as `\"ordered_list\"`,\n// [`bulletList`](#schema-list.bulletList) as `\"bullet_list\"`, and\n// [`listItem`](#schema-list.listItem) as `\"list_item\"`.\n//\n// `itemContent` determines the content expression for the list items.\n// If you want the commands defined in this module to apply to your\n// list structure, it should have a shape like `\"paragraph block*\"` or\n// `\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\n// given to assign a group name to the list node types, for example\n// `\"block\"`.\nexport function addListNodes(nodes, itemContent, listGroup) {\n  return nodes.append({\n    ordered_list: add(orderedList, {content: \"list_item+\", group: listGroup}),\n    bullet_list: add(bulletList, {content: \"list_item+\", group: listGroup}),\n    list_item: add(listItem, {content: itemContent})\n  })\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command function that wraps the selection in a list with\n// the given type an attributes. If `dispatch` is null, only return a\n// value to indicate whether this is possible, but don't actually\n// perform the change.\nexport function wrapInList(listType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), doJoin = false, outerRange = range\n    if (!range) return false\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n      // Don't do anything if this is the top of the list\n      if ($from.index(range.depth - 1) == 0) return false\n      let $insert = state.doc.resolve(range.start - 2)\n      outerRange = new NodeRange($insert, $insert, range.depth)\n      if (range.endIndex < range.parent.childCount)\n        range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth)\n      doJoin = true\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range)\n    if (!wrap) return false\n    if (dispatch) dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView())\n    return true\n  }\n}\n\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end,\n                                new Slice(content, 0, 0), wrappers.length, true))\n\n  let found = 0\n  for (let i = 0; i < wrappers.length; i++) if (wrappers[i].type == listType) found = i + 1\n  let splitDepth = wrappers.length - found\n\n  let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent\n  for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n    if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n      tr.split(splitPos, splitDepth)\n      splitPos += 2 * splitDepth\n    }\n    splitPos += parent.child(i).nodeSize\n  }\n  return tr\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Build a command that splits a non-empty textblock at the top level\n// of a list item by also splitting that list item.\nexport function splitListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to, node} = state.selection\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) return false\n    let grandParent = $from.node(-1)\n    if (grandParent.type != itemType) return false\n    if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType ||\n          $from.index(-2) != $from.node(-2).childCount - 1) return false\n      if (dispatch) {\n        let wrap = Fragment.empty, keepItem = $from.index(-1) > 0\n        // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n        for (let d = $from.depth - (keepItem ? 1 : 2); d >= $from.depth - 3; d--)\n          wrap = Fragment.from($from.node(d).copy(wrap))\n        // Add a second list item with an empty default start node\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()))\n        let tr = state.tr.replace($from.before(keepItem ? null : -1), $from.after(-3), new Slice(wrap, keepItem ? 3 : 2, 2))\n        tr.setSelection(state.selection.constructor.near(tr.doc.resolve($from.pos + (keepItem ? 3 : 2))))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n    let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n    let tr = state.tr.delete($from.pos, $to.pos)\n    let types = nextType && [null, {type: nextType}]\n    if (!canSplit(tr.doc, $from.pos, 2, types)) return false\n    if (dispatch) dispatch(tr.split($from.pos, 2, types).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to lift the list item around the selection up into\n// a wrapping list.\nexport function liftListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    if (!dispatch) return true\n    if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n      return liftToOuterList(state, dispatch, itemType, range)\n    else // Outer list node\n      return liftOutOfList(state, dispatch, range)\n  }\n}\n\nfunction liftToOuterList(state, dispatch, itemType, range) {\n  let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth)\n  if (end < endOfList) {\n    // There are siblings after the lifted items, which must become\n    // children of the last item\n    tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList,\n                                  new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true))\n    range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth)\n  }\n  dispatch(tr.lift(range, liftTarget(range)).scrollIntoView())\n  return true\n}\n\nfunction liftOutOfList(state, dispatch, range) {\n  let tr = state.tr, list = range.parent\n  // Merge the list items into a single big item\n  for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n    pos -= list.child(i).nodeSize\n    tr.delete(pos - 1, pos + 1)\n  }\n  let $start = tr.doc.resolve(range.start), item = $start.nodeAfter\n  let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount\n  let parent = $start.node(-1), indexBefore = $start.index(-1)\n  if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1,\n                         item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n    return false\n  let start = $start.pos, end = start + item.nodeSize\n  // Strip off the surrounding list. At the sides where we're not at\n  // the end of the list, the existing list is closed. At sides where\n  // this is the end, it is overwritten to its end.\n  tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1,\n                                new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n                                          .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))),\n                                          atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1))\n  dispatch(tr.scrollIntoView())\n  return true\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to sink the list item around the selection down\n// into an inner list.\nexport function sinkListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    let startIndex = range.startIndex\n    if (startIndex == 0) return false\n    let parent = range.parent, nodeBefore = parent.child(startIndex - 1)\n    if (nodeBefore.type != itemType) return false\n\n    if (dispatch) {\n      let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type\n      let inner = Fragment.from(nestedBefore ? itemType.create() : null)\n      let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))),\n                            nestedBefore ? 3 : 1, 0)\n      let before = range.start, after = range.end\n      dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after,\n                                                   before, after, slice, 1, true))\n               .scrollIntoView())\n    }\n    return true\n  }\n}\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=47a3a9d2&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./HelperReveal.vue?vue&type=template&id=6a44be79&\"\nimport script from \"./HelperReveal.vue?vue&type=script&lang=js&\"\nexport * from \"./HelperReveal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\r\n    modifiers: ['s', 'light'],\r\n    default: {\r\n        text: 'Order one expresso'\r\n    }\r\n}","export { default as ImageExtension } from './extension.js'\r\nexport { default as ImageMenu } from './menu.js'","export { default as LinkExtension } from './extension.js'\r\nexport { default as LinkMenu } from './menu.js'\r\n","import { render, staticRenderFns } from \"./HelperErrors.vue?vue&type=template&id=4f8b97a6&\"\nimport script from \"./HelperErrors.vue?vue&type=script&lang=js&\"\nexport * from \"./HelperErrors.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=812c94d6&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"PaperView\" :class=\"{ 'is-editable': editable ? true : false }\">\r\n        <div v-html=\"value\" v-if=\"!initEditor\"></div>\r\n        <editor-content class=\"Paper_content\" :editor=\"initEditor\" v-if=\"initEditor\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Editor, EditorContent } from 'tiptap'\r\nimport Extensions from './plugins/index.js'\r\n\r\nexport default {\r\n    name: 'PaperView',\r\n    components: { EditorContent },\r\n    props: {\r\n        editor: { default: null },\r\n        editable: { type: Boolean, default: false },\r\n        value: { type: String, default: '' }\r\n    },\r\n    data: () => ({\r\n        initEditor: null\r\n    }),\r\n    watch: {\r\n        editor: {\r\n            immediate: true,\r\n            handler (v) {\r\n                this.$data.initEditor = v\r\n            }\r\n        }\r\n    },\r\n    mounted () {\r\n        if (!this.$props.editable) {\r\n            this.$data.initEditor = new Editor({\r\n                extensions: Extensions.plugins(),\r\n                content: this.$props.value,\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>","<template>\r\n    <div\r\n        class=\"TooltipBase\"\r\n        :class=\"[ ...$modifiers ]\"\r\n        :style=\"{ marginTop: top + 'px', marginLeft: left + 'px' }\"\r\n    >\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ModifiersMixin from '../../../helpers/mixins/ModifiersMixin'\r\n\r\nexport default {\r\n    name: 'TooltipBase',\r\n    mixins: [ ModifiersMixin ],\r\n    props: {\r\n        tag: { type: String, default: 'span' },\r\n        top: { type: Number, default: 10 },\r\n        left: { type: Number, default: 0 }\r\n    }\r\n}\r\n</script>","import {base, keyName} from \"w3c-keyname\"\nimport {Plugin} from \"prosemirror-state\"\n\n// declare global: navigator\n\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false\n\nfunction normalizeKeyName(name) {\n  let parts = name.split(/-(?!$)/), result = parts[parts.length - 1]\n  if (result == \"Space\") result = \" \"\n  let alt, ctrl, shift, meta\n  for (let i = 0; i < parts.length - 1; i++) {\n    let mod = parts[i]\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true\n    else if (/^a(lt)?$/i.test(mod)) alt = true\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true\n    else if (/^s(hift)?$/i.test(mod)) shift = true\n    else if (/^mod$/i.test(mod)) { if (mac) meta = true; else ctrl = true }\n    else throw new Error(\"Unrecognized modifier name: \" + mod)\n  }\n  if (alt) result = \"Alt-\" + result\n  if (ctrl) result = \"Ctrl-\" + result\n  if (meta) result = \"Meta-\" + result\n  if (shift) result = \"Shift-\" + result\n  return result\n}\n\nfunction normalize(map) {\n  let copy = Object.create(null)\n  for (let prop in map) copy[normalizeKeyName(prop)] = map[prop]\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = \"Alt-\" + name\n  if (event.ctrlKey) name = \"Ctrl-\" + name\n  if (event.metaKey) name = \"Meta-\" + name\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nexport function keymap(bindings) {\n  return new Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) that handles them.\nexport function keydownHandler(bindings) {\n  let map = normalize(bindings)\n  return function(view, event) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \", baseName\n    let direct = map[modifiers(name, event, !isChar)]\n    if (direct && direct(view.state, view.dispatch, view)) return true\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      // Try falling back to the keyCode when there's a modifier\n      // active or the character produced isn't ASCII, and our table\n      // produces a different name from the the keyCode. See #668,\n      // #1060\n      let fromCode = map[modifiers(baseName, event, true)]\n      if (fromCode && fromCode(view.state, view.dispatch, view)) return true\n    } else if (isChar && event.shiftKey) {\n      // Otherwise, if shift is active, also try the binding with the\n      // Shift- prefix enabled. See #997\n      let withShift = map[modifiers(name, event, true)]\n      if (withShift && withShift(view.state, view.dispatch, view)) return true\n    }\n    return false\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"GalleryMosaic\",class:{ 'is-no-selection': _vm.selected.length <= 0 }},_vm._l((_vm.imageRows),function(row,i){return _c('div',{key:i,staticClass:\"GalleryMosaic_row\"},_vm._l((row.images),function(image){return _c('div',{key:image._id,staticClass:\"GalleryMosaic_imageContainer ActionMenu_hover\",class:{ 'is-active': _vm.selected.includes(image._id) },style:({ '--width': image.width + 'px', '--height': image.height + 'px' }),on:{\"click\":function($event){return _vm.$emit('input', image._id)}}},[_c('img',{staticClass:\"GalleryMosaic_image\",attrs:{\"width\":Math.min(image.original.width * 0.8, image.width),\"height\":Math.min(image.original.height * 0.8, image.height),\"src\":image.src}}),(_vm.selectable)?_c('div',{staticClass:\"GalleryMosaic_selector\"},[_c('i',{staticClass:\"fal fa-check\"})]):_vm._e()])}),0)}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6470f38d&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import RopeSequence from \"rope-sequence\"\nimport {Mapping} from \"prosemirror-transform\"\nimport {Plugin, PluginKey} from \"prosemirror-state\"\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nconst max_empty_items = 500\n\nclass Branch {\n  constructor(items, eventCount) {\n    this.items = items\n    this.eventCount = eventCount\n  }\n\n  // : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n  // Pop the latest event off the branch's history and apply it\n  // to a document transform.\n  popEvent(state, preserveItems) {\n    if (this.eventCount == 0) return null\n\n    let end = this.items.length\n    for (;; end--) {\n      let next = this.items.get(end - 1)\n      if (next.selection) { --end; break }\n    }\n\n    let remap, mapFrom\n    if (preserveItems) {\n      remap = this.remapping(end, this.items.length)\n      mapFrom = remap.maps.length\n    }\n    let transform = state.tr\n    let selection, remaining\n    let addAfter = [], addBefore = []\n\n    this.items.forEach((item, i) => {\n      if (!item.step) {\n        if (!remap) {\n          remap = this.remapping(end, i + 1)\n          mapFrom = remap.maps.length\n        }\n        mapFrom--\n        addBefore.push(item)\n        return\n      }\n\n      if (remap) {\n        addBefore.push(new Item(item.map))\n        let step = item.step.map(remap.slice(mapFrom)), map\n\n        if (step && transform.maybeStep(step).doc) {\n          map = transform.mapping.maps[transform.mapping.maps.length - 1]\n          addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length))\n        }\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n      } else {\n        transform.maybeStep(item.step)\n      }\n\n      if (item.selection) {\n        selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection\n        remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1)\n        return false\n      }\n    }, this.items.length, 0)\n\n    return {remaining, transform, selection}\n  }\n\n  // : (Transform, ?SelectionBookmark, Object) → Branch\n  // Create a new branch with the given transform added.\n  addTransform(transform, selection, histOptions, preserveItems) {\n    let newItems = [], eventCount = this.eventCount\n    let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null\n\n    for (let i = 0; i < transform.steps.length; i++) {\n      let step = transform.steps[i].invert(transform.docs[i])\n      let item = new Item(transform.mapping.maps[i], step, selection), merged\n      if (merged = lastItem && lastItem.merge(item)) {\n        item = merged\n        if (i) newItems.pop()\n        else oldItems = oldItems.slice(0, oldItems.length - 1)\n      }\n      newItems.push(item)\n      if (selection) {\n        eventCount++\n        selection = null\n      }\n      if (!preserveItems) lastItem = item\n    }\n    let overflow = eventCount - histOptions.depth\n    if (overflow > DEPTH_OVERFLOW) {\n      oldItems = cutOffEvents(oldItems, overflow)\n      eventCount -= overflow\n    }\n    return new Branch(oldItems.append(newItems), eventCount)\n  }\n\n  remapping(from, to) {\n    let maps = new Mapping\n    this.items.forEach((item, i) => {\n      let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n          ? maps.maps.length - item.mirrorOffset : null\n      maps.appendMap(item.map, mirrorPos)\n    }, from, to)\n    return maps\n  }\n\n  addMaps(array) {\n    if (this.eventCount == 0) return this\n    return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount)\n  }\n\n  // : (Transform, number)\n  // When the collab module receives remote changes, the history has\n  // to know about those, so that it can adjust the steps that were\n  // rebased on top of the remote changes, and include the position\n  // maps for the remote changes in its array of items.\n  rebased(rebasedTransform, rebasedCount) {\n    if (!this.eventCount) return this\n\n    let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount)\n\n    let mapping = rebasedTransform.mapping\n    let newUntil = rebasedTransform.steps.length\n    let eventCount = this.eventCount\n    this.items.forEach(item => { if (item.selection) eventCount-- }, start)\n\n    let iRebased = rebasedCount\n    this.items.forEach(item => {\n      let pos = mapping.getMirror(--iRebased)\n      if (pos == null) return\n      newUntil = Math.min(newUntil, pos)\n      let map = mapping.maps[pos]\n      if (item.step) {\n        let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos])\n        let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos))\n        if (selection) eventCount++\n        rebasedItems.push(new Item(map, step, selection))\n      } else {\n        rebasedItems.push(new Item(map))\n      }\n    }, start)\n\n    let newMaps = []\n    for (let i = rebasedCount; i < newUntil; i++)\n      newMaps.push(new Item(mapping.maps[i]))\n    let items = this.items.slice(0, start).append(newMaps).append(rebasedItems)\n    let branch = new Branch(items, eventCount)\n\n    if (branch.emptyItemCount() > max_empty_items)\n      branch = branch.compress(this.items.length - rebasedItems.length)\n    return branch\n  }\n\n  emptyItemCount() {\n    let count = 0\n    this.items.forEach(item => { if (!item.step) count++ })\n    return count\n  }\n\n  // Compressing a branch means rewriting it to push the air (map-only\n  // items) out. During collaboration, these naturally accumulate\n  // because each remote change adds one. The `upto` argument is used\n  // to ensure that only the items below a given level are compressed,\n  // because `rebased` relies on a clean, untouched set of items in\n  // order to associate old items with rebased steps.\n  compress(upto = this.items.length) {\n    let remap = this.remapping(0, upto), mapFrom = remap.maps.length\n    let items = [], events = 0\n    this.items.forEach((item, i) => {\n      if (i >= upto) {\n        items.push(item)\n        if (item.selection) events++\n      } else if (item.step) {\n        let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap()\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n        if (step) {\n          let selection = item.selection && item.selection.map(remap.slice(mapFrom))\n          if (selection) events++\n          let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1\n          if (merged = items.length && items[last].merge(newItem))\n            items[last] = merged\n          else\n            items.push(newItem)\n        }\n      } else if (item.map) {\n        mapFrom--\n      }\n    }, this.items.length, 0)\n    return new Branch(RopeSequence.from(items.reverse()), events)\n  }\n}\n\nBranch.empty = new Branch(RopeSequence.empty, 0)\n\nfunction cutOffEvents(items, n) {\n  let cutPoint\n  items.forEach((item, i) => {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i\n      return false\n    }\n  })\n  return items.slice(cutPoint)\n}\n\nclass Item {\n  constructor(map, step, selection, mirrorOffset) {\n    // The (forward) step map for this item.\n    this.map = map\n    // The inverted step\n    this.step = step\n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    this.selection = selection\n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    this.mirrorOffset = mirrorOffset\n  }\n\n  merge(other) {\n    if (this.step && other.step && !other.selection) {\n      let step = other.step.merge(this.step)\n      if (step) return new Item(step.getMap().invert(), step, this.selection)\n    }\n  }\n}\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nexport class HistoryState {\n  constructor(done, undone, prevRanges, prevTime) {\n    this.done = done\n    this.undone = undone\n    this.prevRanges = prevRanges\n    this.prevTime = prevTime\n  }\n}\n\nconst DEPTH_OVERFLOW = 20\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  let historyTr = tr.getMeta(historyKey), rebased\n  if (historyTr) return historyTr.historyState\n\n  if (tr.getMeta(closeHistoryKey)) history = new HistoryState(history.done, history.undone, null, 0)\n\n  let appended = tr.getMeta(\"appendedTransaction\")\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime)\n    else\n      return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime)\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges))\n    let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1])\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) return false\n  if (!transform.docChanged) return true\n  let adjacent = false\n  transform.mapping.maps[0].forEach((start, end) => {\n    for (let i = 0; i < prevRanges.length; i += 2)\n      if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        adjacent = true\n  })\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  let result = []\n  map.forEach((_from, _to, from, to) => result.push(from, to))\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) return null\n  let result = []\n  for (let i = 0; i < ranges.length; i += 2) {\n    let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1)\n    if (from <= to) result.push(from, to)\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  let preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config\n  let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems)\n  if (!pop) return\n\n  let selection = pop.selection.resolve(pop.transform.doc)\n  let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems)\n\n  let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0)\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo, historyState: newHist}).scrollIntoView())\n}\n\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  let plugins = state.plugins\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false\n    cachedPreserveItemsPlugins = plugins\n    for (let i = 0; i < plugins.length; i++) if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true\n      break\n    }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nconst historyKey = new PluginKey(\"history\")\nconst closeHistoryKey = new PluginKey(\"closeHistory\")\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nexport function history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500}\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nexport function undo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.done.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, false)\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nexport function redo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.undone.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, true)\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nexport function undoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nexport function redoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.undone.eventCount : 0\n}\n","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./paper-select.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./paper-select.vue?vue&type=script&lang=js&\"","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nvar orderedmap = OrderedMap;\n\nexport default orderedmap;\n","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./view.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./view.vue?vue&type=script&lang=js&\"","<template>\r\n    <div\r\n        class=\"PaperEditor_select\"\r\n    >\r\n        <select-base\r\n            :options=\"items\"\r\n            :value=\"selectedId\"\r\n            @input=\"onInput\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport SelectBase from '../../SelectBase'\r\n\r\nexport default {\r\n    name: 'PaperSelect',\r\n    components: { SelectBase },\r\n    props: {\r\n        items: { type: Array, default: () => [] },\r\n        currentNode: { type: Object, default: () => [] }\r\n    },\r\n    computed: {\r\n        selectedId () {\r\n            let value = this.$props.items.find(i => JSON.stringify(i.value) == JSON.stringify(this.$props.currentNode))\r\n            return value ? value.id : false \r\n        }\r\n    },\r\n    methods: {\r\n        onInput (id) {\r\n            this.$emit('input', this.$props.items.find(i => i.id == id).value)\r\n        }\r\n    }\r\n}\r\n</script>","module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=56f362e0&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperNumber.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperNumber.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperErrors.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperErrors.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export default function () {\r\n    let options = {\r\n        id: 'image',\r\n        icon: 'image',\r\n        isNode: true,\r\n        popin: {\r\n            form: {\r\n                src: {\r\n                    is: 'input-media',\r\n                    value: {},\r\n                    transformer: {\r\n                        get (v) {\r\n                            return v._id || ''\r\n                        },\r\n                        set (v) {\r\n                            return v.sizes.s.src || ''\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            attrs: {\r\n                modifiers: ['panel']\r\n            }\r\n        }\r\n    }\r\n\r\n    return options\r\n}","import { NodeSelection, Selection } from 'prosemirror-state';\nimport { Fragment } from 'prosemirror-model';\nimport { findParentNodeOfType, findPositionOfNodeBefore } from './selection';\nimport {\n  cloneTr,\n  isNodeSelection,\n  replaceNodeAtPos,\n  removeNodeAtPos,\n  canInsert,\n  isEmptyParagraph\n} from './helpers';\n\n// :: (nodeType: union<NodeType, [NodeType]>) → (tr: Transaction) → Transaction\n// Returns a new transaction that removes a node of a given `nodeType`. It will return an original transaction if parent node hasn't been found.\n//\n// ```javascript\n// dispatch(\n//   removeParentNodeOfType(schema.nodes.table)(tr)\n// );\n// ```\nexport const removeParentNodeOfType = nodeType => tr => {\n  const parent = findParentNodeOfType(nodeType)(tr.selection);\n  if (parent) {\n    return removeNodeAtPos(parent.pos)(tr);\n  }\n  return tr;\n};\n\n// :: (nodeType: union<NodeType, [NodeType]>, content: union<ProseMirrorNode, Fragment>) → (tr: Transaction) → Transaction\n// Returns a new transaction that replaces parent node of a given `nodeType` with the given `content`. It will return an original transaction if either parent node hasn't been found or replacing is not possible.\n//\n// ```javascript\n// const node = schema.nodes.paragraph.createChecked({}, schema.text('new'));\n//\n// dispatch(\n//  replaceParentNodeOfType(schema.nodes.table, node)(tr)\n// );\n// ```\nexport const replaceParentNodeOfType = (nodeType, content) => tr => {\n  if (!Array.isArray(nodeType)) {\n    nodeType = [nodeType];\n  }\n  for (let i = 0, count = nodeType.length; i < count; i++) {\n    const parent = findParentNodeOfType(nodeType[i])(tr.selection);\n    if (parent) {\n      const newTr = replaceNodeAtPos(parent.pos, content)(tr);\n      if (newTr !== tr) {\n        return newTr;\n      }\n    }\n  }\n  return tr;\n};\n\n// :: (tr: Transaction) → Transaction\n// Returns a new transaction that removes selected node. It will return an original transaction if current selection is not a `NodeSelection`.\n//\n// ```javascript\n// dispatch(\n//   removeSelectedNode(tr)\n// );\n// ```\nexport const removeSelectedNode = tr => {\n  if (isNodeSelection(tr.selection)) {\n    const from = tr.selection.$from.pos;\n    const to = tr.selection.$to.pos;\n    return cloneTr(tr.delete(from, to));\n  }\n  return tr;\n};\n\n// :: (content: union<ProseMirrorNode, ProseMirrorFragment>) → (tr: Transaction) → Transaction\n// Returns a new transaction that replaces selected node with a given `node`, keeping NodeSelection on the new `node`.\n// It will return the original transaction if either current selection is not a NodeSelection or replacing is not possible.\n//\n// ```javascript\n// const node = schema.nodes.paragraph.createChecked({}, schema.text('new'));\n// dispatch(\n//   replaceSelectedNode(node)(tr)\n// );\n// ```\nexport const replaceSelectedNode = content => tr => {\n  if (isNodeSelection(tr.selection)) {\n    const { $from, $to } = tr.selection;\n    if (\n      (content instanceof Fragment &&\n        $from.parent.canReplace($from.index(), $from.indexAfter(), content)) ||\n      $from.parent.canReplaceWith(\n        $from.index(),\n        $from.indexAfter(),\n        content.type\n      )\n    ) {\n      return cloneTr(\n        tr\n          .replaceWith($from.pos, $to.pos, content)\n          // restore node selection\n          .setSelection(new NodeSelection(tr.doc.resolve($from.pos)))\n      );\n    }\n  }\n  return tr;\n};\n\n// :: (position: number, dir: ?number) → (tr: Transaction) → Transaction\n// Returns a new transaction that tries to find a valid cursor selection starting at the given `position`\n// and searching back if `dir` is negative, and forward if positive.\n// If a valid cursor position hasn't been found, it will return the original transaction.\n//\n// ```javascript\n// dispatch(\n//   setTextSelection(5)(tr)\n// );\n// ```\nexport const setTextSelection = (position, dir = 1) => tr => {\n  const nextSelection = Selection.findFrom(tr.doc.resolve(position), dir, true);\n  if (nextSelection) {\n    return tr.setSelection(nextSelection);\n  }\n  return tr;\n};\n\nconst isSelectableNode = node => node.type && node.type.spec.selectable;\nconst shouldSelectNode = node => isSelectableNode(node) && node.type.isLeaf;\n\nconst setSelection = (node, pos, tr) => {\n  if (shouldSelectNode(node)) {\n    return tr.setSelection(new NodeSelection(tr.doc.resolve(pos)));\n  }\n  return setTextSelection(pos)(tr);\n};\n\n// :: (content: union<ProseMirrorNode, Fragment>, position: ?number, tryToReplace?: boolean) → (tr: Transaction) → Transaction\n// Returns a new transaction that inserts a given `content` at the current cursor position, or at a given `position`, if it is allowed by schema. If schema restricts such nesting, it will try to find an appropriate place for a given node in the document, looping through parent nodes up until the root document node.\n// If `tryToReplace` is true and current selection is a NodeSelection, it will replace selected node with inserted content if its allowed by schema.\n// If cursor is inside of an empty paragraph, it will try to replace that paragraph with the given content. If insertion is successful and inserted node has content, it will set cursor inside of that content.\n// It will return an original transaction if the place for insertion hasn't been found.\n//\n// ```javascript\n// const node = schema.nodes.extension.createChecked({});\n// dispatch(\n//   safeInsert(node)(tr)\n// );\n// ```\nexport const safeInsert = (content, position, tryToReplace) => tr => {\n  const hasPosition = typeof position === 'number';\n  const { $from } = tr.selection;\n  const $insertPos = hasPosition\n    ? tr.doc.resolve(position)\n    : isNodeSelection(tr.selection)\n    ? tr.doc.resolve($from.pos + 1)\n    : $from;\n  const { parent } = $insertPos;\n\n  // try to replace selected node\n  if (isNodeSelection(tr.selection) && tryToReplace) {\n    const oldTr = tr;\n    tr = replaceSelectedNode(content)(tr);\n    if (oldTr !== tr) {\n      return tr;\n    }\n  }\n\n  // try to replace an empty paragraph\n  if (isEmptyParagraph(parent)) {\n    const oldTr = tr;\n    tr = replaceParentNodeOfType(parent.type, content)(tr);\n    if (oldTr !== tr) {\n      const pos = isSelectableNode(content)\n        ? // for selectable node, selection position would be the position of the replaced parent\n          $insertPos.before($insertPos.depth)\n        : $insertPos.pos;\n      return setSelection(content, pos, tr);\n    }\n  }\n\n  // given node is allowed at the current cursor position\n  if (canInsert($insertPos, content)) {\n    tr.insert($insertPos.pos, content);\n    const pos = hasPosition\n      ? $insertPos.pos\n      : isSelectableNode(content)\n      ? // for atom nodes selection position after insertion is the previous pos\n        tr.selection.$anchor.pos - 1\n      : tr.selection.$anchor.pos;\n    return cloneTr(setSelection(content, pos, tr));\n  }\n\n  // looking for a place in the doc where the node is allowed\n  for (let i = $insertPos.depth; i > 0; i--) {\n    const pos = $insertPos.after(i);\n    const $pos = tr.doc.resolve(pos);\n    if (canInsert($pos, content)) {\n      tr.insert(pos, content);\n      return cloneTr(setSelection(content, pos, tr));\n    }\n  }\n  return tr;\n};\n\n// :: (nodeType: union<NodeType, [NodeType]>, type: ?union<NodeType, null>, attrs: ?union<Object, null>, marks?: [Mark]) → (tr: Transaction) → Transaction\n// Returns a transaction that changes the type, attributes, and/or marks of the parent node of a given `nodeType`.\n//\n// ```javascript\n// const node = schema.nodes.extension.createChecked({});\n// dispatch(\n//   setParentNodeMarkup(schema.nodes.panel, null, { panelType })(tr);\n// );\n// ```\nexport const setParentNodeMarkup = (nodeType, type, attrs, marks) => tr => {\n  const parent = findParentNodeOfType(nodeType)(tr.selection);\n  if (parent) {\n    return cloneTr(\n      tr.setNodeMarkup(\n        parent.pos,\n        type,\n        Object.assign({}, parent.node.attrs, attrs),\n        marks\n      )\n    );\n  }\n  return tr;\n};\n\n// :: (nodeType: union<NodeType, [NodeType]>) → (tr: Transaction) → Transaction\n// Returns a new transaction that sets a `NodeSelection` on a parent node of a `given nodeType`.\n//\n// ```javascript\n// dispatch(\n//   selectParentNodeOfType([tableCell, tableHeader])(state.tr)\n// );\n// ```\nexport const selectParentNodeOfType = nodeType => tr => {\n  if (!isNodeSelection(tr.selection)) {\n    const parent = findParentNodeOfType(nodeType)(tr.selection);\n    if (parent) {\n      return cloneTr(tr.setSelection(NodeSelection.create(tr.doc, parent.pos)));\n    }\n  }\n  return tr;\n};\n\n// :: (tr: Transaction) → Transaction\n// Returns a new transaction that deletes previous node.\n//\n// ```javascript\n// dispatch(\n//   removeNodeBefore(state.tr)\n// );\n// ```\nexport const removeNodeBefore = tr => {\n  const position = findPositionOfNodeBefore(tr.selection);\n  if (typeof position === 'number') {\n    return removeNodeAtPos(position)(tr);\n  }\n  return tr;\n};\n","import { NodeSelection } from 'prosemirror-state';\nimport { Fragment, Node as PMNode } from 'prosemirror-model';\nimport { TableMap } from 'prosemirror-tables';\nimport { setTextSelection } from './transforms';\nimport { findParentNodeClosestToPos } from './selection';\n\n// :: (selection: Selection) → boolean\n// Checks if current selection is a `NodeSelection`.\n//\n// ```javascript\n// if (isNodeSelection(tr.selection)) {\n//   // ...\n// }\n// ```\nexport const isNodeSelection = selection => {\n  return selection instanceof NodeSelection;\n};\n\n// (nodeType: union<NodeType, [NodeType]>) → boolean\n// Checks if the type a given `node` equals to a given `nodeType`.\nexport const equalNodeType = (nodeType, node) => {\n  return (\n    (Array.isArray(nodeType) && nodeType.indexOf(node.type) > -1) ||\n    node.type === nodeType\n  );\n};\n\n// (tr: Transaction) → Transaction\n// Creates a new transaction object from a given transaction\nexport const cloneTr = tr => {\n  return Object.assign(Object.create(tr), tr).setTime(Date.now());\n};\n\n// (position: number, content: union<ProseMirrorNode, Fragment>) → (tr: Transaction) → Transaction\n// Returns a `replace` transaction that replaces a node at a given position with the given `content`.\n// It will return the original transaction if replacing is not possible.\n// `position` should point at the position immediately before the node.\nexport const replaceNodeAtPos = (position, content) => tr => {\n  const node = tr.doc.nodeAt(position);\n  const $pos = tr.doc.resolve(position);\n  if (canReplace($pos, content)) {\n    tr = tr.replaceWith(position, position + node.nodeSize, content);\n    const start = tr.selection.$from.pos - 1;\n    // put cursor inside of the inserted node\n    tr = setTextSelection(Math.max(start, 0), -1)(tr);\n    // move cursor to the start of the node\n    tr = setTextSelection(tr.selection.$from.start())(tr);\n    return cloneTr(tr);\n  }\n  return tr;\n};\n\n// ($pos: ResolvedPos, doc: ProseMirrorNode, content: union<ProseMirrorNode, Fragment>, ) → boolean\n// Checks if replacing a node at a given `$pos` inside of the `doc` node with the given `content` is possible.\nexport const canReplace = ($pos, content) => {\n  const node = $pos.node($pos.depth);\n  return (\n    node &&\n    node.type.validContent(\n      content instanceof Fragment ? content : Fragment.from(content)\n    )\n  );\n};\n\n// (position: number) → (tr: Transaction) → Transaction\n// Returns a `delete` transaction that removes a node at a given position with the given `node`.\n// `position` should point at the position immediately before the node.\nexport const removeNodeAtPos = position => tr => {\n  const node = tr.doc.nodeAt(position);\n  return cloneTr(tr.delete(position, position + node.nodeSize));\n};\n\n// (schema: Schema) → {[key: string]: NodeType}\n// Returns a map where keys are tableRoles and values are NodeTypes.\nexport const tableNodeTypes = schema => {\n  if (schema.cached.tableNodeTypes) {\n    return schema.cached.tableNodeTypes;\n  }\n  const roles = {};\n  Object.keys(schema.nodes).forEach(type => {\n    const nodeType = schema.nodes[type];\n    if (nodeType.spec.tableRole) {\n      roles[nodeType.spec.tableRole] = nodeType;\n    }\n  });\n  schema.cached.tableNodeTypes = roles;\n  return roles;\n};\n\n// :: ($pos: ResolvedPos, content: union<ProseMirrorNode, Fragment>) → boolean\n// Checks if a given `content` can be inserted at the given `$pos`\n//\n// ```javascript\n// const { selection: { $from } } = state;\n// const node = state.schema.nodes.atom.createChecked();\n// if (canInsert($from, node)) {\n//   // ...\n// }\n// ```\nexport const canInsert = ($pos, content) => {\n  const index = $pos.index();\n\n  if (content instanceof Fragment) {\n    return $pos.parent.canReplace(index, index, content);\n  } else if (content instanceof PMNode) {\n    return $pos.parent.canReplaceWith(index, index, content.type);\n  }\n  return false;\n};\n\n// (node: ProseMirrorNode) → boolean\n// Checks if a given `node` is an empty paragraph\nexport const isEmptyParagraph = node => {\n  return !node || (node.type.name === 'paragraph' && node.nodeSize === 2);\n};\n\n// ($pos: ResolvedPos) → ?{pos: number, start: number, node: ProseMirrorNode}\n// Iterates over parent nodes, returning a table node closest to a given `$pos`.\n//\n// ```javascript\n// const table = findTableClosestToPos(state.doc.resolve(10));\n// ```\nexport const findTableClosestToPos = $pos => {\n  const predicate = node =>\n    node.type.spec.tableRole && /table/i.test(node.type.spec.tableRole);\n  return findParentNodeClosestToPos($pos, predicate);\n};\n\nexport const createCell = (cellType, cellContent = null) => {\n  if (cellContent) {\n    return cellType.createChecked(null, cellContent);\n  }\n\n  return cellType.createAndFill();\n};\n\n// (rect: {left: number, right: number, top: number, bottom: number}) → (selection: Selection) → boolean\n// Checks if a given CellSelection rect is selected\nexport const isRectSelected = rect => selection => {\n  const map = TableMap.get(selection.$anchorCell.node(-1));\n  const start = selection.$anchorCell.start(-1);\n  const cells = map.cellsInRect(rect);\n  const selectedCells = map.cellsInRect(\n    map.rectBetween(\n      selection.$anchorCell.pos - start,\n      selection.$headCell.pos - start\n    )\n  );\n\n  for (let i = 0, count = cells.length; i < count; i++) {\n    if (selectedCells.indexOf(cells[i]) === -1) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// This function transposes an array of array flipping the columns for rows,\n// transposition is a familiar algebra concept;\n// you can get more details here:\n// https://en.wikipedia.org/wiki/Transpose\n//\n// ```javascript\n//\n//  const arr = [\n//    ['a1', 'a2', 'a3'],\n//    ['b1', 'b2', 'b3'],\n//    ['c1', 'c2', 'c3'],\n//    ['d1', 'd2', 'd3'],\n//  ];\n//\n//  const result = transpose(arr);\n//\n//  result === [\n//    ['a1', 'b1', 'c1', 'd1'],\n//    ['a2', 'b2', 'c2', 'd2'],\n//    ['a3', 'b3', 'c3', 'd3'],\n//  ]\n// ```\nexport const transpose = array => {\n  return array[0].map((_, i) => {\n    return array.map(column => column[i]);\n  });\n};\n\n// :: (tableNode: Node) -> Array<Node>\n// This function will transform the table node\n// into a matrix of rows and columns respecting merged cells,\n// for example this table will be convert to the below:\n//\n// ```\n//  ____________________________\n// |      |      |             |\n// |  A1  |  B1  |     C1      |\n// |______|______|______ ______|\n// |      |             |      |\n// |  A2  |     B2      |      |\n// |______|______ ______|      |\n// |      |      |      |  D1  |\n// |  A3  |  B3  |  C2  |      |\n// |______|______|______|______|\n// ```\n//\n//\n// ```javascript\n// array = [\n//   [A1, B1, C1, null],\n//   [A2, B2, null, D1],\n//   [A3. B3, C2, null],\n// ]\n// ```\nexport const convertTableNodeToArrayOfRows = tableNode => {\n  const map = TableMap.get(tableNode);\n  const rows = [];\n  for (let rowIndex = 0; rowIndex < map.height; rowIndex++) {\n    const rowCells = [];\n    const seen = {};\n\n    for (let colIndex = 0; colIndex < map.width; colIndex++) {\n      const cellPos = map.map[rowIndex * map.width + colIndex];\n      const cell = tableNode.nodeAt(cellPos);\n      const rect = map.findCell(cellPos);\n      if (seen[cellPos] || rect.top !== rowIndex) {\n        rowCells.push(null);\n        continue;\n      }\n      seen[cellPos] = true;\n\n      rowCells.push(cell);\n    }\n\n    rows.push(rowCells);\n  }\n\n  return rows;\n};\n\n// :: (tableNode: Node, tableArray: Array<Node>) -> Node\n// This function will transform a matrix of nodes\n// into table node respecting merged cells and rows configurations,\n// for example this array will be convert to the table below:\n//\n// ```javascript\n// array = [\n//   [A1, B1, C1, null],\n//   [A2, B2, null, D1],\n//   [A3. B3, C2, null],\n// ]\n// ```\n//\n// ```\n//  ____________________________\n// |      |      |             |\n// |  A1  |  B1  |     C1      |\n// |______|______|______ ______|\n// |      |             |      |\n// |  A2  |     B2      |      |\n// |______|______ ______|      |\n// |      |      |      |  D1  |\n// |  A3  |  B3  |  C2  |      |\n// |______|______|______|______|\n// ```\n//\nexport const convertArrayOfRowsToTableNode = (tableNode, arrayOfNodes) => {\n  const rowsPM = [];\n  const map = TableMap.get(tableNode);\n  for (let rowIndex = 0; rowIndex < map.height; rowIndex++) {\n    const row = tableNode.child(rowIndex);\n    const rowCells = [];\n\n    for (let colIndex = 0; colIndex < map.width; colIndex++) {\n      if (!arrayOfNodes[rowIndex][colIndex]) {\n        continue;\n      }\n      const cellPos = map.map[rowIndex * map.width + colIndex];\n\n      const cell = arrayOfNodes[rowIndex][colIndex];\n      const oldCell = tableNode.nodeAt(cellPos);\n      const newCell = oldCell.type.createChecked(\n        Object.assign({}, cell.attrs),\n        cell.content,\n        cell.marks\n      );\n      rowCells.push(newCell);\n    }\n\n    rowsPM.push(row.type.createChecked(row.attrs, rowCells, row.marks));\n  }\n\n  const newTable = tableNode.type.createChecked(\n    tableNode.attrs,\n    rowsPM,\n    tableNode.marks\n  );\n\n  return newTable;\n};\n\nexport const moveTableColumn = (\n  table,\n  indexesOrigin,\n  indexesTarget,\n  direction\n) => {\n  let rows = transpose(convertTableNodeToArrayOfRows(table.node));\n\n  rows = moveRowInArrayOfRows(rows, indexesOrigin, indexesTarget, direction);\n  rows = transpose(rows);\n\n  return convertArrayOfRowsToTableNode(table.node, rows);\n};\n\nexport const moveTableRow = (\n  table,\n  indexesOrigin,\n  indexesTarget,\n  direction\n) => {\n  let rows = convertTableNodeToArrayOfRows(table.node);\n\n  rows = moveRowInArrayOfRows(rows, indexesOrigin, indexesTarget, direction);\n\n  return convertArrayOfRowsToTableNode(table.node, rows);\n};\n\nconst moveRowInArrayOfRows = (\n  rows,\n  indexesOrigin,\n  indexesTarget,\n  directionOverride\n) => {\n  let direction = indexesOrigin[0] > indexesTarget[0] ? -1 : 1;\n\n  const rowsExtracted = rows.splice(indexesOrigin[0], indexesOrigin.length);\n  const positionOffset = rowsExtracted.length % 2 === 0 ? 1 : 0;\n  let target;\n\n  if (directionOverride === -1 && direction === 1) {\n    target = indexesTarget[0] - 1;\n  } else if (directionOverride === 1 && direction === -1) {\n    target = indexesTarget[indexesTarget.length - 1] - positionOffset + 1;\n  } else {\n    target =\n      direction === -1\n        ? indexesTarget[0]\n        : indexesTarget[indexesTarget.length - 1] - positionOffset;\n  }\n\n  rows.splice.apply(rows, [target, 0].concat(rowsExtracted));\n  return rows;\n};\n\nexport const checkInvalidMovements = (\n  originIndex,\n  targetIndex,\n  targets,\n  type\n) => {\n  const direction = originIndex > targetIndex ? -1 : 1;\n  const errorMessage = `Target position is invalid, you can't move the ${type} ${originIndex} to ${targetIndex}, the target can't be split. You could use tryToFit option.`;\n\n  if (direction === 1) {\n    if (targets.slice(0, targets.length - 1).indexOf(targetIndex) !== -1) {\n      throw new Error(errorMessage);\n    }\n  } else {\n    if (targets.slice(1).indexOf(targetIndex) !== -1) {\n      throw new Error(errorMessage);\n    }\n  }\n\n  return true;\n};\n","import {\n  CellSelection,\n  TableMap,\n  addColumn,\n  addRow,\n  removeColumn,\n  removeRow\n} from 'prosemirror-tables';\nimport { Selection } from 'prosemirror-state';\nimport { findParentNode, findParentNodeClosestToPos } from './selection';\nimport { setTextSelection, safeInsert } from './transforms';\nimport {\n  cloneTr,\n  tableNodeTypes,\n  findTableClosestToPos,\n  createCell,\n  isRectSelected,\n  moveTableRow,\n  moveTableColumn,\n  checkInvalidMovements\n} from './helpers';\n\n// :: (selection: Selection) → ?{pos: number, start: number, node: ProseMirrorNode}\n// Iterates over parent nodes, returning the closest table node.\n//\n// ```javascript\n// const table = findTable(selection);\n// ```\nexport const findTable = selection =>\n  findParentNode(\n    node => node.type.spec.tableRole && node.type.spec.tableRole === 'table'\n  )(selection);\n\n// :: (selection: Selection) → boolean\n// Checks if current selection is a `CellSelection`.\n//\n// ```javascript\n// if (isCellSelection(selection)) {\n//   // ...\n// }\n// ```\nexport const isCellSelection = selection => {\n  return selection instanceof CellSelection;\n};\n\n// :: (selection: Selection) → ?{left: number, right: number, top: number, bottom: number}\n// Get the selection rectangle. Returns `undefined` if selection is not a CellSelection.\n//\n// ```javascript\n// const rect = getSelectionRect(selection);\n// ```\nexport const getSelectionRect = selection => {\n  if (!isCellSelection(selection)) {\n    return;\n  }\n  const start = selection.$anchorCell.start(-1);\n  const map = TableMap.get(selection.$anchorCell.node(-1));\n  return map.rectBetween(\n    selection.$anchorCell.pos - start,\n    selection.$headCell.pos - start\n  );\n};\n\n// :: (columnIndex: number) → (selection: Selection) → boolean\n// Checks if entire column at index `columnIndex` is selected.\n//\n// ```javascript\n// const className = isColumnSelected(i)(selection) ? 'selected' : '';\n// ```\nexport const isColumnSelected = columnIndex => selection => {\n  if (isCellSelection(selection)) {\n    const map = TableMap.get(selection.$anchorCell.node(-1));\n    return isRectSelected({\n      left: columnIndex,\n      right: columnIndex + 1,\n      top: 0,\n      bottom: map.height\n    })(selection);\n  }\n\n  return false;\n};\n\n// :: (rowIndex: number) → (selection: Selection) → boolean\n// Checks if entire row at index `rowIndex` is selected.\n//\n// ```javascript\n// const className = isRowSelected(i)(selection) ? 'selected' : '';\n// ```\nexport const isRowSelected = rowIndex => selection => {\n  if (isCellSelection(selection)) {\n    const map = TableMap.get(selection.$anchorCell.node(-1));\n    return isRectSelected({\n      left: 0,\n      right: map.width,\n      top: rowIndex,\n      bottom: rowIndex + 1\n    })(selection);\n  }\n\n  return false;\n};\n\n// :: (selection: Selection) → boolean\n// Checks if entire table is selected\n//\n// ```javascript\n// const className = isTableSelected(selection) ? 'selected' : '';\n// ```\nexport const isTableSelected = selection => {\n  if (isCellSelection(selection)) {\n    const map = TableMap.get(selection.$anchorCell.node(-1));\n    return isRectSelected({\n      left: 0,\n      right: map.width,\n      top: 0,\n      bottom: map.height\n    })(selection);\n  }\n\n  return false;\n};\n\n// :: (columnIndex: union<number, [number]>) → (selection: Selection) → ?[{pos: number, start: number, node: ProseMirrorNode}]\n// Returns an array of cells in a column(s), where `columnIndex` could be a column index or an array of column indexes.\n//\n// ```javascript\n// const cells = getCellsInColumn(i)(selection); // [{node, pos}, {node, pos}]\n// ```\nexport const getCellsInColumn = columnIndex => selection => {\n  const table = findTable(selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n    const indexes = Array.isArray(columnIndex)\n      ? columnIndex\n      : Array.from([columnIndex]);\n    return indexes.reduce((acc, index) => {\n      if (index >= 0 && index <= map.width - 1) {\n        const cells = map.cellsInRect({\n          left: index,\n          right: index + 1,\n          top: 0,\n          bottom: map.height\n        });\n        return acc.concat(\n          cells.map(nodePos => {\n            const node = table.node.nodeAt(nodePos);\n            const pos = nodePos + table.start;\n            return { pos, start: pos + 1, node };\n          })\n        );\n      }\n    }, []);\n  }\n};\n\n// :: (rowIndex: union<number, [number]>) → (selection: Selection) → ?[{pos: number, start: number, node: ProseMirrorNode}]\n// Returns an array of cells in a row(s), where `rowIndex` could be a row index or an array of row indexes.\n//\n// ```javascript\n// const cells = getCellsInRow(i)(selection); // [{node, pos}, {node, pos}]\n// ```\nexport const getCellsInRow = rowIndex => selection => {\n  const table = findTable(selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n    const indexes = Array.isArray(rowIndex) ? rowIndex : Array.from([rowIndex]);\n    return indexes.reduce((acc, index) => {\n      if (index >= 0 && index <= map.height - 1) {\n        const cells = map.cellsInRect({\n          left: 0,\n          right: map.width,\n          top: index,\n          bottom: index + 1\n        });\n        return acc.concat(\n          cells.map(nodePos => {\n            const node = table.node.nodeAt(nodePos);\n            const pos = nodePos + table.start;\n            return { pos, start: pos + 1, node };\n          })\n        );\n      }\n    }, []);\n  }\n};\n\n// :: (selection: Selection) → ?[{pos: number, start: number, node: ProseMirrorNode}]\n// Returns an array of all cells in a table.\n//\n// ```javascript\n// const cells = getCellsInTable(selection); // [{node, pos}, {node, pos}]\n// ```\nexport const getCellsInTable = selection => {\n  const table = findTable(selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n    const cells = map.cellsInRect({\n      left: 0,\n      right: map.width,\n      top: 0,\n      bottom: map.height\n    });\n    return cells.map(nodePos => {\n      const node = table.node.nodeAt(nodePos);\n      const pos = nodePos + table.start;\n      return { pos, start: pos + 1, node };\n    });\n  }\n};\n\nconst select = type => (index, expand) => tr => {\n  const table = findTable(tr.selection);\n  const isRowSelection = type === 'row';\n  if (table) {\n    const map = TableMap.get(table.node);\n\n    // Check if the index is valid\n    if (index >= 0 && index < (isRowSelection ? map.height : map.width)) {\n      let left = isRowSelection ? 0 : index;\n      let top = isRowSelection ? index : 0;\n      let right = isRowSelection ? map.width : index + 1;\n      let bottom = isRowSelection ? index + 1 : map.height;\n\n      if (expand) {\n        const cell = findCellClosestToPos(tr.selection.$from);\n        if (!cell) {\n          return tr;\n        }\n\n        const selRect = map.findCell(cell.pos - table.start);\n        if (isRowSelection) {\n          top = Math.min(top, selRect.top);\n          bottom = Math.max(bottom, selRect.bottom);\n        } else {\n          left = Math.min(left, selRect.left);\n          right = Math.max(right, selRect.right);\n        }\n      }\n\n      const cellsInFirstRow = map.cellsInRect({\n        left,\n        top,\n        right: isRowSelection ? right : left + 1,\n        bottom: isRowSelection ? top + 1 : bottom\n      });\n\n      const cellsInLastRow =\n        bottom - top === 1\n          ? cellsInFirstRow\n          : map.cellsInRect({\n              left: isRowSelection ? left : right - 1,\n              top: isRowSelection ? bottom - 1 : top,\n              right,\n              bottom\n            });\n\n      const head = table.start + cellsInFirstRow[0];\n      const anchor = table.start + cellsInLastRow[cellsInLastRow.length - 1];\n      const $head = tr.doc.resolve(head);\n      const $anchor = tr.doc.resolve(anchor);\n\n      return cloneTr(tr.setSelection(new CellSelection($anchor, $head)));\n    }\n  }\n  return tr;\n};\n\n// :: (columnIndex: number, expand: ?boolean) → (tr: Transaction) → Transaction\n// Returns a new transaction that creates a `CellSelection` on a column at index `columnIndex`.\n// Use the optional `expand` param to extend from current selection.\n//\n// ```javascript\n// dispatch(\n//   selectColumn(i)(state.tr)\n// );\n// ```\nexport const selectColumn = select('column');\n\n// :: (rowIndex: number, expand: ?boolean) → (tr: Transaction) → Transaction\n// Returns a new transaction that creates a `CellSelection` on a column at index `rowIndex`.\n// Use the optional `expand` param to extend from current selection.\n//\n// ```javascript\n// dispatch(\n//   selectRow(i)(state.tr)\n// );\n// ```\nexport const selectRow = select('row');\n\n// :: (selection: Selection) → (tr: Transaction) → Transaction\n// Returns a new transaction that creates a `CellSelection` on the entire table.\n//\n// ```javascript\n// dispatch(\n//   selectTable(i)(state.tr)\n// );\n// ```\nexport const selectTable = tr => {\n  const table = findTable(tr.selection);\n  if (table) {\n    const { map } = TableMap.get(table.node);\n    if (map && map.length) {\n      const head = table.start + map[0];\n      const anchor = table.start + map[map.length - 1];\n      const $head = tr.doc.resolve(head);\n      const $anchor = tr.doc.resolve(anchor);\n\n      return cloneTr(tr.setSelection(new CellSelection($anchor, $head)));\n    }\n  }\n  return tr;\n};\n\n// :: (cell: {pos: number, node: ProseMirrorNode}, schema: Schema) → (tr: Transaction) → Transaction\n// Returns a new transaction that clears the content of a given `cell`.\n//\n// ```javascript\n// const $pos = state.doc.resolve(13);\n// dispatch(\n//   emptyCell(findCellClosestToPos($pos), state.schema)(state.tr)\n// );\n// ```\nexport const emptyCell = (cell, schema) => tr => {\n  if (cell) {\n    const { content } = tableNodeTypes(schema).cell.createAndFill();\n    if (!cell.node.content.eq(content)) {\n      tr.replaceWith(cell.pos + 1, cell.pos + cell.node.nodeSize, content);\n      return cloneTr(tr);\n    }\n  }\n  return tr;\n};\n\n// :: (columnIndex: number) → (tr: Transaction) → Transaction\n// Returns a new transaction that adds a new column at index `columnIndex`.\n//\n// ```javascript\n// dispatch(\n//   addColumnAt(i)(state.tr)\n// );\n// ```\nexport const addColumnAt = columnIndex => tr => {\n  const table = findTable(tr.selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n    if (columnIndex >= 0 && columnIndex <= map.width) {\n      return cloneTr(\n        addColumn(\n          tr,\n          {\n            map,\n            tableStart: table.start,\n            table: table.node\n          },\n          columnIndex\n        )\n      );\n    }\n  }\n  return tr;\n};\n\n// :: (originRowIndex: number, targetRowIndex: targetColumnIndex, options?: MovementOptions) → (tr: Transaction) → Transaction\n// Returns a new transaction that moves the origin row to the target index;\n//\n// by default \"tryToFit\" is false, that means if you try to move a row to a place\n// where we will need to split a row with merged cells it'll throw an exception, for example:\n//\n// ```\n//      ____________________________\n//     |      |      |             |\n//  0  |  A1  |  B1  |     C1      |\n//     |______|______|______ ______|\n//     |      |             |      |\n//  1  |  A2  |     B2      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D1  |\n//  2  |  A3  |  B3  |  C2  |      |\n//     |______|______|______|______|\n// ```\n//\n// if you try to move the row 0 to the row index 1 with tryToFit false,\n// it'll throw an exception since you can't split the row 1;\n// but if \"tryToFit\" is true, it'll move the row using the current direction.\n//\n// We defined current direction using the target and origin values\n// if the origin is greater than the target, that means the course is `bottom-to-top`,\n// so the `tryToFit` logic will use this direction to determine\n// if we should move the column to the right or the left.\n//\n// for example, if you call the function using `moveRow(0, 1, { tryToFit: true })`\n// the result will be:\n// ```\n//      ____________________________\n//     |      |             |      |\n//  0  |  A2  |     B2      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D1  |\n//  1  |  A3  |  B3  |  C2  |      |\n//     |______|______|______|______|\n//     |      |      |             |\n//  2  |  A1  |  B1  |     C1      |\n//     |______|______|______ ______|\n// ```\n//\n// since we could put the row zero on index one,\n// we pushed to the best place to fit the row index 0,\n// in this case, row index 2.\n//\n//\n// -------- HOW TO OVERRIDE DIRECTION --------\n//\n// If you set \"tryToFit\" to \"true\", it will try to figure out the best direction\n// place to fit using the origin and target index, for example:\n//\n//\n// ```\n//      ____________________________\n//     |      |      |             |\n//  0  |  A1  |  B1  |     C1      |\n//     |______|______|______ ______|\n//     |      |             |      |\n//  1  |  A2  |     B2      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D1  |\n//  2  |  A3  |  B3  |  C2  |      |\n//     |______|______|______|______|\n//     |      |             |      |\n//  3  |  A4  |     B4      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D2  |\n//  4  |  A5  |  B5  |  C3  |      |\n//     |______|______|______|______|\n// ```\n//\n//\n// If you try to move the row 0 to row index 4 with \"tryToFit\" enabled, by default,\n// the code will put it on after the merged rows,\n// but you can override it using the \"direction\" option.\n//\n// -1: Always put the origin before the target\n// ```\n//      ____________________________\n//     |      |             |      |\n//  0  |  A2  |     B2      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D1  |\n//  1  |  A3  |  B3  |  C2  |      |\n//     |______|______|______|______|\n//     |      |      |             |\n//  2  |  A1  |  B1  |     C1      |\n//     |______|______|______ ______|\n//     |      |             |      |\n//  3  |  A4  |     B4      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D2  |\n//  4  |  A5  |  B5  |  C3  |      |\n//     |______|______|______|______|\n// ```\n//\n//  0: Automatically decide the best place to fit\n// ```\n//      ____________________________\n//     |      |             |      |\n//  0  |  A2  |     B2      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D1  |\n//  1  |  A3  |  B3  |  C2  |      |\n//     |______|______|______|______|\n//     |      |             |      |\n//  2  |  A4  |     B4      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D2  |\n//  3  |  A5  |  B5  |  C3  |      |\n//     |______|______|______|______|\n//     |      |      |             |\n//  4  |  A1  |  B1  |     C1      |\n//     |______|______|______ ______|\n// ```\n//\n//  1: Always put the origin after the target\n// ```\n//      ____________________________\n//     |      |             |      |\n//  0  |  A2  |     B2      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D1  |\n//  1  |  A3  |  B3  |  C2  |      |\n//     |______|______|______|______|\n//     |      |             |      |\n//  2  |  A4  |     B4      |      |\n//     |______|______ ______|      |\n//     |      |      |      |  D2  |\n//  3  |  A5  |  B5  |  C3  |      |\n//     |______|______|______|______|\n//     |      |      |             |\n//  4  |  A1  |  B1  |     C1      |\n//     |______|______|______ ______|\n// ```\n//\n// ```javascript\n// dispatch(\n//   moveRow(x, y, options)(state.tr)\n// );\n// ```\nexport const moveRow = (originRowIndex, targetRowIndex, opts) => tr => {\n  const defaultOptions = { tryToFit: false, direction: 0 };\n  const options = Object.assign(defaultOptions, opts);\n  const table = findTable(tr.selection);\n  if (!table) {\n    return tr;\n  }\n\n  const { indexes: indexesOriginRow } = getSelectionRangeInRow(originRowIndex)(\n    tr\n  );\n  const { indexes: indexesTargetRow } = getSelectionRangeInRow(targetRowIndex)(\n    tr\n  );\n\n  if (indexesOriginRow.indexOf(targetRowIndex) > -1) {\n    return tr;\n  }\n\n  if (!options.tryToFit && indexesTargetRow.length > 1) {\n    checkInvalidMovements(\n      originRowIndex,\n      targetRowIndex,\n      indexesTargetRow,\n      'row'\n    );\n  }\n\n  const newTable = moveTableRow(\n    table,\n    indexesOriginRow,\n    indexesTargetRow,\n    options.direction\n  );\n\n  return cloneTr(tr).replaceWith(\n    table.pos,\n    table.pos + table.node.nodeSize,\n    newTable\n  );\n};\n\n// :: (originColumnIndex: number, targetColumnIndex: targetColumnIndex, options?: MovementOptions) → (tr: Transaction) → Transaction\n// Returns a new transaction that moves the origin column to the target index;\n//\n// by default \"tryToFit\" is false, that means if you try to move a column to a place\n// where we will need to split a column with merged cells it'll throw an exception, for example:\n//\n// ```\n//    0      1         2\n//  ____________________________\n// |      |      |             |\n// |  A1  |  B1  |     C1      |\n// |______|______|______ ______|\n// |      |             |      |\n// |  A2  |     B2      |      |\n// |______|______ ______|      |\n// |      |      |      |  D1  |\n// |  A3  |  B3  |  C2  |      |\n// |______|______|______|______|\n// ```\n//\n//\n// if you try to move the column 0 to the column index 1 with tryToFit false,\n// it'll throw an exception since you can't split the column 1;\n// but if \"tryToFit\" is true, it'll move the column using the current direction.\n//\n// We defined current direction using the target and origin values\n// if the origin is greater than the target, that means the course is `right-to-left`,\n// so the `tryToFit` logic will use this direction to determine\n// if we should move the column to the right or the left.\n//\n// for example, if you call the function using `moveColumn(0, 1, { tryToFit: true })`\n// the result will be:\n//\n// ```\n//    0       1             2\n// _____________________ _______\n// |      |             |      |\n// |  B1  |     C1      |  A1  |\n// |______|______ ______|______|\n// |             |      |      |\n// |     B2      |      |  A2  |\n// |______ ______|      |______|\n// |      |      |  D1  |      |\n// |  B3  |  C2  |      |  A3  |\n// |______|______|______|______|\n// ```\n//\n// since we could put the column zero on index one,\n// we pushed to the best place to fit the column 0, in this case, column index 2.\n//\n// -------- HOW TO OVERRIDE DIRECTION --------\n//\n// If you set \"tryToFit\" to \"true\", it will try to figure out the best direction\n// place to fit using the origin and target index, for example:\n//\n//\n// ```\n//     0      1       2     3      4      5       6\n//   _________________________________________________\n//  |      |      |             |      |             |\n//  |  A1  |  B1  |     C1      |  E1  |     F1      |\n//  |______|______|______ ______|______|______ ______|\n//  |      |             |      |             |      |\n//  |  A2  |     B2      |      |     E2      |      |\n//  |______|______ ______|      |______ ______|      |\n//  |      |      |      |  D1  |      |      |  G2  |\n//  |  A3  |  B3  |  C3  |      |  E3  |  F3  |      |\n//  |______|______|______|______|______|______|______|\n// ```\n//\n//\n// If you try to move the column 0 to column index 5 with \"tryToFit\" enabled, by default,\n// the code will put it on after the merged columns,\n// but you can override it using the \"direction\" option.\n//\n// -1: Always put the origin before the target\n//\n// ```\n//     0      1       2     3      4      5       6\n//   _________________________________________________\n//  |      |             |      |      |             |\n//  |  B1  |     C1      |  A1  |  E1  |     F1      |\n//  |______|______ ______|______|______|______ ______|\n//  |             |      |      |             |      |\n//  |     B2      |      |  A2  |     E2      |      |\n//  |______ ______|      |______|______ ______|      |\n//  |      |      |  D1  |      |      |      |  G2  |\n//  |  B3  |  C3  |      |  A3  |  E3  |  F3  |      |\n//  |______|______|______|______|______|______|______|\n// ```\n//\n//  0: Automatically decide the best place to fit\n//\n// ```\n//     0      1       2     3      4      5       6\n//   _________________________________________________\n//  |      |             |      |             |      |\n//  |  B1  |     C1      |  E1  |     F1      |  A1  |\n//  |______|______ ______|______|______ ______|______|\n//  |             |      |             |      |      |\n//  |     B2      |      |     E2      |      |  A2  |\n//  |______ ______|      |______ ______|      |______|\n//  |      |      |  D1  |      |      |  G2  |      |\n//  |  B3  |  C3  |      |  E3  |  F3  |      |  A3  |\n//  |______|______|______|______|______|______|______|\n// ```\n//\n//  1: Always put the origin after the target\n//\n// ```\n//     0      1       2     3      4      5       6\n//   _________________________________________________\n//  |      |             |      |             |      |\n//  |  B1  |     C1      |  E1  |     F1      |  A1  |\n//  |______|______ ______|______|______ ______|______|\n//  |             |      |             |      |      |\n//  |     B2      |      |     E2      |      |  A2  |\n//  |______ ______|      |______ ______|      |______|\n//  |      |      |  D1  |      |      |  G2  |      |\n//  |  B3  |  C3  |      |  E3  |  F3  |      |  A3  |\n//  |______|______|______|______|______|______|______|\n// ```\n//\n// ```javascript\n// dispatch(\n//   moveColumn(x, y, options)(state.tr)\n// );\n// ```\nexport const moveColumn = (\n  originColumnIndex,\n  targetColumnIndex,\n  opts\n) => tr => {\n  const defaultOptions = { tryToFit: false, direction: 0 };\n  const options = Object.assign(defaultOptions, opts);\n  const table = findTable(tr.selection);\n  if (!table) {\n    return tr;\n  }\n\n  const { indexes: indexesOriginColumn } = getSelectionRangeInColumn(\n    originColumnIndex\n  )(tr);\n  const { indexes: indexesTargetColumn } = getSelectionRangeInColumn(\n    targetColumnIndex\n  )(tr);\n\n  if (indexesOriginColumn.indexOf(targetColumnIndex) > -1) {\n    return tr;\n  }\n\n  if (!options.tryToFit && indexesTargetColumn.length > 1) {\n    checkInvalidMovements(\n      originColumnIndex,\n      targetColumnIndex,\n      indexesTargetColumn,\n      'column'\n    );\n  }\n\n  const newTable = moveTableColumn(\n    table,\n    indexesOriginColumn,\n    indexesTargetColumn,\n    options.direction\n  );\n\n  return cloneTr(tr).replaceWith(\n    table.pos,\n    table.pos + table.node.nodeSize,\n    newTable\n  );\n};\n\n// :: (rowIndex: number, clonePreviousRow?: boolean) → (tr: Transaction) → Transaction\n// Returns a new transaction that adds a new row at index `rowIndex`. Optionally clone the previous row.\n//\n// ```javascript\n// dispatch(\n//   addRowAt(i)(state.tr)\n// );\n// ```\n//\n// ```javascript\n// dispatch(\n//   addRowAt(i, true)(state.tr)\n// );\n// ```\nexport const addRowAt = (rowIndex, clonePreviousRow) => tr => {\n  const table = findTable(tr.selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n    const cloneRowIndex = rowIndex - 1;\n\n    if (clonePreviousRow && cloneRowIndex >= 0) {\n      return cloneTr(cloneRowAt(cloneRowIndex)(tr));\n    }\n\n    if (rowIndex >= 0 && rowIndex <= map.height) {\n      return cloneTr(\n        addRow(\n          tr,\n          {\n            map,\n            tableStart: table.start,\n            table: table.node\n          },\n          rowIndex\n        )\n      );\n    }\n  }\n  return tr;\n};\n\n// :: (cloneRowIndex: number) → (tr: Transaction) → Transaction\n// Returns a new transaction that adds a new row after `cloneRowIndex`, cloning the row attributes at `cloneRowIndex`.\n//\n// ```javascript\n// dispatch(\n//   cloneRowAt(i)(state.tr)\n// );\n// ```\nexport const cloneRowAt = rowIndex => tr => {\n  const table = findTable(tr.selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n\n    if (rowIndex >= 0 && rowIndex <= map.height) {\n      const tableNode = table.node;\n      const tableNodes = tableNodeTypes(tableNode.type.schema);\n\n      let rowPos = table.start;\n      for (let i = 0; i < rowIndex + 1; i++) {\n        rowPos += tableNode.child(i).nodeSize;\n      }\n\n      const cloneRow = tableNode.child(rowIndex);\n      // Re-create the same nodes with same attrs, dropping the node content.\n      let cells = [];\n      let rowWidth = 0;\n      cloneRow.forEach(cell => {\n        // If we're copying a row with rowspan somewhere, we dont want to copy that cell\n        // We'll increment its span below.\n        if (cell.attrs.rowspan === 1) {\n          rowWidth += cell.attrs.colspan;\n          cells.push(\n            tableNodes[cell.type.spec.tableRole].createAndFill(\n              cell.attrs,\n              cell.marks\n            )\n          );\n        }\n      });\n\n      // If a higher row spans past our clone row, bump the higher row to cover this new row too.\n      if (rowWidth < map.width) {\n        let rowSpanCells = [];\n        for (let i = rowIndex; i >= 0; i--) {\n          let foundCells = filterCellsInRow(i, (cell, tr) => {\n            const rowspan = cell.node.attrs.rowspan;\n            const spanRange = i + rowspan;\n            return rowspan > 1 && spanRange > rowIndex;\n          })(tr);\n          rowSpanCells.push(...foundCells);\n        }\n\n        if (rowSpanCells.length) {\n          rowSpanCells.forEach(cell => {\n            tr = setCellAttrs(cell, {\n              rowspan: cell.node.attrs.rowspan + 1\n            })(tr);\n          });\n        }\n      }\n\n      return safeInsert(tableNodes.row.create(cloneRow.attrs, cells), rowPos)(\n        tr\n      );\n    }\n  }\n  return tr;\n};\n\n// :: (columnIndex: number) → (tr: Transaction) → Transaction\n// Returns a new transaction that removes a column at index `columnIndex`. If there is only one column left, it will remove the entire table.\n//\n// ```javascript\n// dispatch(\n//   removeColumnAt(i)(state.tr)\n// );\n// ```\nexport const removeColumnAt = columnIndex => tr => {\n  const table = findTable(tr.selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n    if (columnIndex === 0 && map.width === 1) {\n      return removeTable(tr);\n    } else if (columnIndex >= 0 && columnIndex <= map.width) {\n      removeColumn(\n        tr,\n        {\n          map,\n          tableStart: table.start,\n          table: table.node\n        },\n        columnIndex\n      );\n      return cloneTr(tr);\n    }\n  }\n  return tr;\n};\n\n// :: (rowIndex: number) → (tr: Transaction) → Transaction\n// Returns a new transaction that removes a row at index `rowIndex`. If there is only one row left, it will remove the entire table.\n//\n// ```javascript\n// dispatch(\n//   removeRowAt(i)(state.tr)\n// );\n// ```\nexport const removeRowAt = rowIndex => tr => {\n  const table = findTable(tr.selection);\n  if (table) {\n    const map = TableMap.get(table.node);\n    if (rowIndex === 0 && map.height === 1) {\n      return removeTable(tr);\n    } else if (rowIndex >= 0 && rowIndex <= map.height) {\n      removeRow(\n        tr,\n        {\n          map,\n          tableStart: table.start,\n          table: table.node\n        },\n        rowIndex\n      );\n      return cloneTr(tr);\n    }\n  }\n  return tr;\n};\n\n// :: (tr: Transaction) → Transaction\n// Returns a new transaction that removes a table node if the cursor is inside of it.\n//\n// ```javascript\n// dispatch(\n//   removeTable(state.tr)\n// );\n// ```\nexport const removeTable = tr => {\n  const { $from } = tr.selection;\n  for (let depth = $from.depth; depth > 0; depth--) {\n    let node = $from.node(depth);\n    if (node.type.spec.tableRole === 'table') {\n      return cloneTr(tr.delete($from.before(depth), $from.after(depth)));\n    }\n  }\n  return tr;\n};\n\n// :: (tr: Transaction) → Transaction\n// Returns a new transaction that removes selected columns.\n//\n// ```javascript\n// dispatch(\n//   removeSelectedColumns(state.tr)\n// );\n// ```\nexport const removeSelectedColumns = tr => {\n  const { selection } = tr;\n  if (isTableSelected(selection)) {\n    return removeTable(tr);\n  }\n  if (isCellSelection(selection)) {\n    const table = findTable(selection);\n    if (table) {\n      const map = TableMap.get(table.node);\n      const rect = map.rectBetween(\n        selection.$anchorCell.pos - table.start,\n        selection.$headCell.pos - table.start\n      );\n\n      if (rect.left == 0 && rect.right == map.width) {\n        return false;\n      }\n\n      const pmTableRect = Object.assign({}, rect, {\n        map,\n        table: table.node,\n        tableStart: table.start\n      });\n\n      for (let i = pmTableRect.right - 1; ; i--) {\n        removeColumn(tr, pmTableRect, i);\n        if (i === pmTableRect.left) {\n          break;\n        }\n        pmTableRect.table = pmTableRect.tableStart\n          ? tr.doc.nodeAt(pmTableRect.tableStart - 1)\n          : tr.doc;\n        pmTableRect.map = TableMap.get(pmTableRect.table);\n      }\n      return cloneTr(tr);\n    }\n  }\n  return tr;\n};\n\n// :: (tr: Transaction) → Transaction\n// Returns a new transaction that removes selected rows.\n//\n// ```javascript\n// dispatch(\n//   removeSelectedRows(state.tr)\n// );\n// ```\nexport const removeSelectedRows = tr => {\n  const { selection } = tr;\n  if (isTableSelected(selection)) {\n    return removeTable(tr);\n  }\n  if (isCellSelection(selection)) {\n    const table = findTable(selection);\n    if (table) {\n      const map = TableMap.get(table.node);\n      const rect = map.rectBetween(\n        selection.$anchorCell.pos - table.start,\n        selection.$headCell.pos - table.start\n      );\n\n      if (rect.top == 0 && rect.bottom == map.height) {\n        return false;\n      }\n\n      const pmTableRect = Object.assign({}, rect, {\n        map,\n        table: table.node,\n        tableStart: table.start\n      });\n\n      for (let i = pmTableRect.bottom - 1; ; i--) {\n        removeRow(tr, pmTableRect, i);\n        if (i === pmTableRect.top) {\n          break;\n        }\n        pmTableRect.table = pmTableRect.tableStart\n          ? tr.doc.nodeAt(pmTableRect.tableStart - 1)\n          : tr.doc;\n        pmTableRect.map = TableMap.get(pmTableRect.table);\n      }\n\n      return cloneTr(tr);\n    }\n  }\n  return tr;\n};\n\n// :: ($pos: ResolvedPos) → (tr: Transaction) → Transaction\n// Returns a new transaction that removes a column closest to a given `$pos`.\n//\n// ```javascript\n// dispatch(\n//   removeColumnClosestToPos(state.doc.resolve(3))(state.tr)\n// );\n// ```\nexport const removeColumnClosestToPos = $pos => tr => {\n  const rect = findCellRectClosestToPos($pos);\n  if (rect) {\n    return removeColumnAt(rect.left)(setTextSelection($pos.pos)(tr));\n  }\n  return tr;\n};\n\n// :: ($pos: ResolvedPos) → (tr: Transaction) → Transaction\n// Returns a new transaction that removes a row closest to a given `$pos`.\n//\n// ```javascript\n// dispatch(\n//   removeRowClosestToPos(state.doc.resolve(3))(state.tr)\n// );\n// ```\nexport const removeRowClosestToPos = $pos => tr => {\n  const rect = findCellRectClosestToPos($pos);\n  if (rect) {\n    return removeRowAt(rect.top)(setTextSelection($pos.pos)(tr));\n  }\n  return tr;\n};\n\n// :: (columnIndex: number, cellTransform: (cell: {pos: number, start: number, node: ProseMirrorNode}, tr: Transaction) → Transaction, setCursorToLastCell: ?boolean) → (tr: Transaction) → Transaction\n// Returns a new transaction that maps a given `cellTransform` function to each cell in a column at a given `columnIndex`.\n// It will set the selection into the last cell of the column if `setCursorToLastCell` param is set to `true`.\n//\n// ```javascript\n// dispatch(\n//   forEachCellInColumn(0, (cell, tr) => emptyCell(cell, state.schema)(tr))(state.tr)\n// );\n// ```\nexport const forEachCellInColumn = (\n  columnIndex,\n  cellTransform,\n  setCursorToLastCell\n) => tr => {\n  const cells = getCellsInColumn(columnIndex)(tr.selection);\n  if (cells) {\n    for (let i = cells.length - 1; i >= 0; i--) {\n      tr = cellTransform(cells[i], tr);\n    }\n    if (setCursorToLastCell) {\n      const $pos = tr.doc.resolve(tr.mapping.map(cells[cells.length - 1].pos));\n      tr.setSelection(Selection.near($pos));\n    }\n    return cloneTr(tr);\n  }\n  return tr;\n};\n\n// :: (rowIndex: number, cellTransform: (cell: {pos: number, start: number, node: ProseMirrorNode}, tr: Transaction) → Transaction, setCursorToLastCell: ?boolean) → (tr: Transaction) → Transaction\n// Returns a new transaction that maps a given `cellTransform` function to each cell in a row at a given `rowIndex`.\n// It will set the selection into the last cell of the row if `setCursorToLastCell` param is set to `true`.\n//\n// ```javascript\n// dispatch(\n//   forEachCellInRow(0, (cell, tr) => setCellAttrs(cell, { background: 'red' })(tr))(state.tr)\n// );\n// ```\nexport const forEachCellInRow = (\n  rowIndex,\n  cellTransform,\n  setCursorToLastCell\n) => tr => {\n  const cells = getCellsInRow(rowIndex)(tr.selection);\n  if (cells) {\n    for (let i = cells.length - 1; i >= 0; i--) {\n      tr = cellTransform(cells[i], tr);\n    }\n    if (setCursorToLastCell) {\n      const $pos = tr.doc.resolve(tr.mapping.map(cells[cells.length - 1].pos));\n      tr.setSelection(Selection.near($pos));\n    }\n  }\n  return tr;\n};\n\n// :: (cell: {pos: number, start: number, node: ProseMirrorNode}, attrs: Object) → (tr: Transaction) → Transaction\n// Returns a new transaction that sets given `attrs` to a given `cell`.\n//\n// ```javascript\n// dispatch(\n//   setCellAttrs(findCellClosestToPos($pos), { background: 'blue' })(tr);\n// );\n// ```\nexport const setCellAttrs = (cell, attrs) => tr => {\n  if (cell) {\n    tr.setNodeMarkup(cell.pos, null, Object.assign({}, cell.node.attrs, attrs));\n    return cloneTr(tr);\n  }\n  return tr;\n};\n\n// :: (schema: Schema, rowsCount: ?number, colsCount: ?number, withHeaderRow: ?boolean, cellContent: ?Node) → Node\n// Returns a table node of a given size.\n// `withHeaderRow` defines whether the first row of the table will be a header row.\n// `cellContent` defines the content of each cell.\n//\n// ```javascript\n// const table = createTable(state.schema); // 3x3 table node\n// dispatch(\n//   tr.replaceSelectionWith(table).scrollIntoView()\n// );\n// ```\nexport const createTable = (\n  schema,\n  rowsCount = 3,\n  colsCount = 3,\n  withHeaderRow = true,\n  cellContent = null\n) => {\n  const {\n    cell: tableCell,\n    header_cell: tableHeader,\n    row: tableRow,\n    table\n  } = tableNodeTypes(schema);\n\n  const cells = [];\n  const headerCells = [];\n  for (let i = 0; i < colsCount; i++) {\n    cells.push(createCell(tableCell, cellContent));\n\n    if (withHeaderRow) {\n      headerCells.push(createCell(tableHeader, cellContent));\n    }\n  }\n\n  const rows = [];\n  for (let i = 0; i < rowsCount; i++) {\n    rows.push(\n      tableRow.createChecked(\n        null,\n        withHeaderRow && i === 0 ? headerCells : cells\n      )\n    );\n  }\n\n  return table.createChecked(null, rows);\n};\n\n// :: ($pos: ResolvedPos) → ?{pos: number, start: number, node: ProseMirrorNode}\n// Iterates over parent nodes, returning a table cell or a table header node closest to a given `$pos`.\n//\n// ```javascript\n// const cell = findCellClosestToPos(state.selection.$from);\n// ```\nexport const findCellClosestToPos = $pos => {\n  const predicate = node =>\n    node.type.spec.tableRole && /cell/i.test(node.type.spec.tableRole);\n  return findParentNodeClosestToPos($pos, predicate);\n};\n\n// :: ($pos: ResolvedPos) → ?{left: number, top: number, right: number, bottom: number}\n// Returns the rectangle spanning a cell closest to a given `$pos`.\n//\n// ```javascript\n// dispatch(\n//   findCellRectClosestToPos(state.selection.$from)\n// );\n// ```\nexport const findCellRectClosestToPos = $pos => {\n  const cell = findCellClosestToPos($pos);\n  if (cell) {\n    const table = findTableClosestToPos($pos);\n    const map = TableMap.get(table.node);\n    const cellPos = cell.pos - table.start;\n    return map.rectBetween(cellPos, cellPos);\n  }\n};\n\nconst filterCellsInRow = (rowIndex, predicate) => tr => {\n  let foundCells = [];\n  const cells = getCellsInRow(rowIndex)(tr.selection);\n  if (cells) {\n    for (let j = cells.length - 1; j >= 0; j--) {\n      if (predicate(cells[j], tr)) {\n        foundCells.push(cells[j]);\n      }\n    }\n  }\n\n  return foundCells;\n};\n\n// :: (columnIndex: number) → (tr: Transaction) → {$anchor: ResolvedPos, $head: ResolvedPos, indexes: [number]}\n// Returns a range of rectangular selection spanning all merged cells around a column at index `columnIndex`.\n//\n// ```javascript\n// const range = getSelectionRangeInColumn(3)(state.tr);\n// ```\nexport const getSelectionRangeInColumn = columnIndex => tr => {\n  let startIndex = columnIndex;\n  let endIndex = columnIndex;\n\n  // looking for selection start column (startIndex)\n  for (let i = columnIndex; i >= 0; i--) {\n    const cells = getCellsInColumn(i)(tr.selection);\n    if (cells) {\n      cells.forEach(cell => {\n        let maybeEndIndex = cell.node.attrs.colspan + i - 1;\n        if (maybeEndIndex >= startIndex) {\n          startIndex = i;\n        }\n        if (maybeEndIndex > endIndex) {\n          endIndex = maybeEndIndex;\n        }\n      });\n    }\n  }\n  // looking for selection end column (endIndex)\n  for (let i = columnIndex; i <= endIndex; i++) {\n    const cells = getCellsInColumn(i)(tr.selection);\n    if (cells) {\n      cells.forEach(cell => {\n        let maybeEndIndex = cell.node.attrs.colspan + i - 1;\n        if (cell.node.attrs.colspan > 1 && maybeEndIndex > endIndex) {\n          endIndex = maybeEndIndex;\n        }\n      });\n    }\n  }\n\n  // filter out columns without cells (where all rows have colspan > 1 in the same column)\n  const indexes = [];\n  for (let i = startIndex; i <= endIndex; i++) {\n    const maybeCells = getCellsInColumn(i)(tr.selection);\n    if (maybeCells && maybeCells.length) {\n      indexes.push(i);\n    }\n  }\n  startIndex = indexes[0];\n  endIndex = indexes[indexes.length - 1];\n\n  const firstSelectedColumnCells = getCellsInColumn(startIndex)(tr.selection);\n  const firstRowCells = getCellsInRow(0)(tr.selection);\n  const $anchor = tr.doc.resolve(\n    firstSelectedColumnCells[firstSelectedColumnCells.length - 1].pos\n  );\n\n  let headCell;\n  for (let i = endIndex; i >= startIndex; i--) {\n    const columnCells = getCellsInColumn(i)(tr.selection);\n    if (columnCells && columnCells.length) {\n      for (let j = firstRowCells.length - 1; j >= 0; j--) {\n        if (firstRowCells[j].pos === columnCells[0].pos) {\n          headCell = columnCells[0];\n          break;\n        }\n      }\n      if (headCell) {\n        break;\n      }\n    }\n  }\n\n  const $head = tr.doc.resolve(headCell.pos);\n  return { $anchor, $head, indexes };\n};\n\n// :: (rowIndex: number) → (tr: Transaction) → {$anchor: ResolvedPos, $head: ResolvedPos, indexes: [number]}\n// Returns a range of rectangular selection spanning all merged cells around a row at index `rowIndex`.\n//\n// ```javascript\n// const range = getSelectionRangeInRow(3)(state.tr);\n// ```\nexport const getSelectionRangeInRow = rowIndex => tr => {\n  let startIndex = rowIndex;\n  let endIndex = rowIndex;\n  // looking for selection start row (startIndex)\n  for (let i = rowIndex; i >= 0; i--) {\n    const cells = getCellsInRow(i)(tr.selection);\n    cells.forEach(cell => {\n      let maybeEndIndex = cell.node.attrs.rowspan + i - 1;\n      if (maybeEndIndex >= startIndex) {\n        startIndex = i;\n      }\n      if (maybeEndIndex > endIndex) {\n        endIndex = maybeEndIndex;\n      }\n    });\n  }\n  // looking for selection end row (endIndex)\n  for (let i = rowIndex; i <= endIndex; i++) {\n    const cells = getCellsInRow(i)(tr.selection);\n    cells.forEach(cell => {\n      let maybeEndIndex = cell.node.attrs.rowspan + i - 1;\n      if (cell.node.attrs.rowspan > 1 && maybeEndIndex > endIndex) {\n        endIndex = maybeEndIndex;\n      }\n    });\n  }\n\n  // filter out rows without cells (where all columns have rowspan > 1 in the same row)\n  const indexes = [];\n  for (let i = startIndex; i <= endIndex; i++) {\n    const maybeCells = getCellsInRow(i)(tr.selection);\n    if (maybeCells && maybeCells.length) {\n      indexes.push(i);\n    }\n  }\n  startIndex = indexes[0];\n  endIndex = indexes[indexes.length - 1];\n\n  const firstSelectedRowCells = getCellsInRow(startIndex)(tr.selection);\n  const firstColumnCells = getCellsInColumn(0)(tr.selection);\n  const $anchor = tr.doc.resolve(\n    firstSelectedRowCells[firstSelectedRowCells.length - 1].pos\n  );\n\n  let headCell;\n  for (let i = endIndex; i >= startIndex; i--) {\n    const rowCells = getCellsInRow(i)(tr.selection);\n    if (rowCells && rowCells.length) {\n      for (let j = firstColumnCells.length - 1; j >= 0; j--) {\n        if (firstColumnCells[j].pos === rowCells[0].pos) {\n          headCell = rowCells[0];\n          break;\n        }\n      }\n      if (headCell) {\n        break;\n      }\n    }\n  }\n\n  const $head = tr.doc.resolve(headCell.pos);\n  return { $anchor, $head, indexes };\n};\n","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./paper-button.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./paper-button.vue?vue&type=script&lang=js&\"","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","\n    /*!\n    * tiptap-utils v1.10.4\n    * (c) 2020 überdosis GbR (limited liability)\n    * @license MIT\n    */\n  \nimport { findSelectedNodeOfType, findParentNode } from 'prosemirror-utils';\n\nfunction getMarkAttrs(state, type) {\n  const {\n    from,\n    to\n  } = state.selection;\n  let marks = [];\n  state.doc.nodesBetween(from, to, node => {\n    marks = [...marks, ...node.marks];\n  });\n  const mark = marks.find(markItem => markItem.type.name === type.name);\n\n  if (mark) {\n    return mark.attrs;\n  }\n\n  return {};\n}\n\nfunction getNodeAttrs(state, type) {\n  const {\n    from,\n    to\n  } = state.selection;\n  let nodes = [];\n  state.doc.nodesBetween(from, to, node => {\n    nodes = [...nodes, node];\n  });\n  const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name);\n\n  if (node) {\n    return node.attrs;\n  }\n\n  return {};\n}\n\nfunction getMarkRange($pos = null, type = null) {\n  if (!$pos || !type) {\n    return false;\n  }\n\n  const start = $pos.parent.childAfter($pos.parentOffset);\n\n  if (!start.node) {\n    return false;\n  }\n\n  const link = start.node.marks.find(mark => mark.type === type);\n\n  if (!link) {\n    return false;\n  }\n\n  let startIndex = $pos.index();\n  let startPos = $pos.start() + start.offset;\n  let endIndex = startIndex + 1;\n  let endPos = startPos + start.node.nodeSize;\n\n  while (startIndex > 0 && link.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1;\n    startPos -= $pos.parent.child(startIndex).nodeSize;\n  }\n\n  while (endIndex < $pos.parent.childCount && link.isInSet($pos.parent.child(endIndex).marks)) {\n    endPos += $pos.parent.child(endIndex).nodeSize;\n    endIndex += 1;\n  }\n\n  return {\n    from: startPos,\n    to: endPos\n  };\n}\n\nfunction markIsActive(state, type) {\n  const {\n    from,\n    $from,\n    to,\n    empty\n  } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  }\n\n  return !!state.doc.rangeHasMark(from, to, type);\n}\n\nfunction nodeEqualsType({\n  types,\n  node\n}) {\n  return Array.isArray(types) && types.includes(node.type) || node.type === types;\n}\n\nfunction nodeIsActive(state, type, attrs = {}) {\n  const predicate = node => node.type === type;\n\n  const node = findSelectedNodeOfType(type)(state.selection) || findParentNode(predicate)(state.selection);\n\n  if (!Object.keys(attrs).length || !node) {\n    return !!node;\n  }\n\n  return node.node.hasMarkup(type, { ...node.node.attrs,\n    ...attrs\n  });\n}\n\nexport { getMarkAttrs, getMarkRange, getNodeAttrs, markIsActive, nodeEqualsType, nodeIsActive };\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',_vm._b({staticClass:\"Toggle\"},'label',_vm.attrs,false),[_c('input',{staticClass:\"Toggle_checkbox\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":_vm.transformedValue},on:{\"click\":function($event){return _vm.onInput(!_vm.transformedValue)}}}),_c('div',{staticClass:\"Toggle_container\"}),(_vm.label)?_c('p',{staticClass:\"Toggle_label\"},[_vm._v(_vm._s(_vm.label))]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <label class=\"Toggle\" v-bind=\"attrs\">\r\n        <input class=\"Toggle_checkbox\" type=\"checkbox\" :checked=\"transformedValue\" @click=\"onInput(!transformedValue)\">\r\n        <div class=\"Toggle_container\"></div>\r\n\r\n        <p class=\"Toggle_label\" v-if=\"label\">{{ label }}</p>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ToggleBase',\r\n    props: {\r\n        value: { type: [Boolean, String], default: false },\r\n        label: { type: String, default: '' },\r\n        transformer: { type: [Object, Boolean], default: false },\r\n        attrs: { type: Object, default: () => {} }\r\n    },\r\n    computed: {\r\n        transformedValue () {\r\n            return this.$props.transformer ? this.$props.transformer.get(this.$props.value) : this.$props.value\r\n        }\r\n    },\r\n    methods: {\r\n        onInput (value) {\r\n            this.$emit('input', this.$props.transformer ? this.$props.transformer.set(value) : value)\r\n        }\r\n    }\r\n}\r\n</script>","\n    /*!\n    * tiptap-commands v1.14.6\n    * (c) 2020 überdosis GbR (limited liability)\n    * @license MIT\n    */\n  \nimport { setBlockType, lift, wrapIn } from 'prosemirror-commands';\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, setBlockType, splitBlock, splitBlockKeepMarks, toggleMark, wrapIn } from 'prosemirror-commands';\nimport { liftListItem, wrapInList } from 'prosemirror-schema-list';\nexport { addListNodes, liftListItem, sinkListItem, splitListItem, wrapInList } from 'prosemirror-schema-list';\nimport { InputRule } from 'prosemirror-inputrules';\nexport { textblockTypeInputRule, wrappingInputRule } from 'prosemirror-inputrules';\nimport { Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { getMarkRange, nodeIsActive } from 'tiptap-utils';\nimport { findParentNode } from 'prosemirror-utils';\n\nfunction insertText (text = '') {\n  return (state, dispatch) => {\n    const {\n      $from\n    } = state.selection;\n    const {\n      pos\n    } = $from.pos;\n    dispatch(state.tr.insertText(text, pos));\n    return true;\n  };\n}\n\nfunction getMarksBetween(start, end, state) {\n  let marks = [];\n  state.doc.nodesBetween(start, end, (node, pos) => {\n    marks = [...marks, ...node.marks.map(mark => ({\n      start: pos,\n      end: pos + node.nodeSize,\n      mark\n    }))];\n  });\n  return marks;\n}\n\nfunction markInputRule (regexp, markType, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    const {\n      tr\n    } = state;\n    const m = match.length - 1;\n    let markEnd = end;\n    let markStart = start;\n\n    if (match[m]) {\n      const matchStart = start + match[0].indexOf(match[m - 1]);\n      const matchEnd = matchStart + match[m - 1].length - 1;\n      const textStart = matchStart + match[m - 1].lastIndexOf(match[m]);\n      const textEnd = textStart + match[m].length;\n      const excludedMarks = getMarksBetween(start, end, state).filter(item => {\n        const {\n          excluded\n        } = item.mark.type;\n        return excluded.find(type => type.name === markType.name);\n      }).filter(item => item.end > matchStart);\n\n      if (excludedMarks.length) {\n        return false;\n      }\n\n      if (textEnd < matchEnd) {\n        tr.delete(textEnd, matchEnd);\n      }\n\n      if (textStart > matchStart) {\n        tr.delete(matchStart, textStart);\n      }\n\n      markStart = matchStart;\n      markEnd = markStart + match[m].length;\n    }\n\n    tr.addMark(markStart, markEnd, markType.create(attrs));\n    tr.removeStoredMark(markType);\n    return tr;\n  });\n}\n\nfunction nodeInputRule (regexp, type, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    const {\n      tr\n    } = state;\n\n    if (match[0]) {\n      tr.replaceWith(start - 1, end, type.create(attrs));\n    }\n\n    return tr;\n  });\n}\n\nfunction pasteRule (regexp, type, getAttrs) {\n  const handler = fragment => {\n    const nodes = [];\n    fragment.forEach(child => {\n      if (child.isText) {\n        const {\n          text\n        } = child;\n        let pos = 0;\n        let match;\n\n        do {\n          match = regexp.exec(text);\n\n          if (match) {\n            const start = match.index;\n            const end = start + match[0].length;\n            const attrs = getAttrs instanceof Function ? getAttrs(match[0]) : getAttrs;\n\n            if (start > 0) {\n              nodes.push(child.cut(pos, start));\n            }\n\n            nodes.push(child.cut(start, end).mark(type.create(attrs).addToSet(child.marks)));\n            pos = end;\n          }\n        } while (match);\n\n        if (pos < text.length) {\n          nodes.push(child.cut(pos));\n        }\n      } else {\n        nodes.push(child.copy(handler(child.content)));\n      }\n    });\n    return Fragment.fromArray(nodes);\n  };\n\n  return new Plugin({\n    props: {\n      transformPasted: slice => new Slice(handler(slice.content), slice.openStart, slice.openEnd)\n    }\n  });\n}\n\nfunction markPasteRule (regexp, type, getAttrs) {\n  const handler = (fragment, parent) => {\n    const nodes = [];\n    fragment.forEach(child => {\n      if (child.isText) {\n        const {\n          text,\n          marks\n        } = child;\n        let pos = 0;\n        let match;\n        const isLink = !!marks.filter(x => x.type.name === 'link')[0]; // eslint-disable-next-line\n\n        while (!isLink && (match = regexp.exec(text)) !== null) {\n          if (parent && parent.type.allowsMarkType(type) && match[1]) {\n            const start = match.index;\n            const end = start + match[0].length;\n            const textStart = start + match[0].indexOf(match[1]);\n            const textEnd = textStart + match[1].length;\n            const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs; // adding text before markdown to nodes\n\n            if (start > 0) {\n              nodes.push(child.cut(pos, start));\n            } // adding the markdown part to nodes\n\n\n            nodes.push(child.cut(textStart, textEnd).mark(type.create(attrs).addToSet(child.marks)));\n            pos = end;\n          }\n        } // adding rest of text to nodes\n\n\n        if (pos < text.length) {\n          nodes.push(child.cut(pos));\n        }\n      } else {\n        nodes.push(child.copy(handler(child.content, child)));\n      }\n    });\n    return Fragment.fromArray(nodes);\n  };\n\n  return new Plugin({\n    props: {\n      transformPasted: slice => new Slice(handler(slice.content), slice.openStart, slice.openEnd)\n    }\n  });\n}\n\nfunction removeMark (type) {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection\n    } = state;\n    let {\n      from,\n      to\n    } = selection;\n    const {\n      $from,\n      empty\n    } = selection;\n\n    if (empty) {\n      const range = getMarkRange($from, type);\n      from = range.from;\n      to = range.to;\n    }\n\n    tr.removeMark(from, to, type);\n    return dispatch(tr);\n  };\n}\n\nfunction replaceText (range = null, type, attrs = {}) {\n  return (state, dispatch) => {\n    const {\n      $from,\n      $to\n    } = state.selection;\n    const index = $from.index();\n    const from = range ? range.from : $from.pos;\n    const to = range ? range.to : $to.pos;\n\n    if (!$from.parent.canReplaceWith(index, index, type)) {\n      return false;\n    }\n\n    if (dispatch) {\n      dispatch(state.tr.replaceWith(from, to, type.create(attrs)));\n    }\n\n    return true;\n  };\n}\n\nfunction setInlineBlockType (type, attrs = {}) {\n  return (state, dispatch) => {\n    const {\n      $from\n    } = state.selection;\n    const index = $from.index();\n\n    if (!$from.parent.canReplaceWith(index, index, type)) {\n      return false;\n    }\n\n    if (dispatch) {\n      dispatch(state.tr.replaceSelectionWith(type.create(attrs)));\n    }\n\n    return true;\n  };\n}\n\n// see https://github.com/ProseMirror/prosemirror-transform/blob/main/src/structure.js\n// Since this piece of code was \"borrowed\" from prosemirror, ESLint rules are ignored.\n\n/* eslint-disable max-len, no-plusplus, no-undef, eqeqeq */\n\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n  const $pos = doc.resolve(pos);\n  const base = $pos.depth - depth;\n  const innerType = typesAfter && typesAfter[typesAfter.length - 1] || $pos.parent;\n  if (base < 0 || $pos.parent.type.spec.isolating || !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) || !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount))) return false;\n\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    const node = $pos.node(d);\n    const index = $pos.index(d);\n    if (node.type.spec.isolating) return false;\n    let rest = node.content.cutByIndex(index, node.childCount);\n    const after = typesAfter && typesAfter[i] || node;\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs));\n    /* Change starts from here */\n    // if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n    //   return false\n\n    if (!node.canReplace(index + 1, node.childCount)) return false;\n    /* Change ends here */\n  }\n\n  const index = $pos.indexAfter(base);\n  const baseType = typesAfter && typesAfter[0];\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n} // this is a copy of splitListItem\n// see https://github.com/ProseMirror/prosemirror-schema-list/blob/main/src/schema-list.js\n\n\nfunction splitToDefaultListItem(itemType) {\n  return function (state, dispatch) {\n    const {\n      $from,\n      $to,\n      node\n    } = state.selection;\n    if (node && node.isBlock || $from.depth < 2 || !$from.sameParent($to)) return false;\n    const grandParent = $from.node(-1);\n    if (grandParent.type != itemType) return false;\n\n    if ($from.parent.content.size == 0) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType || $from.index(-2) != $from.node(-2).childCount - 1) return false;\n\n      if (dispatch) {\n        let wrap = Fragment.empty;\n        const keepItem = $from.index(-1) > 0; // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n\n        for (let d = $from.depth - (keepItem ? 1 : 2); d >= $from.depth - 3; d--) wrap = Fragment.from($from.node(d).copy(wrap)); // Add a second list item with an empty default start node\n\n\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n        const tr = state.tr.replace($from.before(keepItem ? null : -1), $from.after(-3), new Slice(wrap, keepItem ? 3 : 2, 2));\n        tr.setSelection(state.selection.constructor.near(tr.doc.resolve($from.pos + (keepItem ? 3 : 2))));\n        dispatch(tr.scrollIntoView());\n      }\n\n      return true;\n    }\n\n    const nextType = $to.pos == $from.end() ? grandParent.contentMatchAt($from.indexAfter(-1)).defaultType : null;\n    const tr = state.tr.delete($from.pos, $to.pos);\n    /* Change starts from here */\n    // let types = nextType && [null, {type: nextType}]\n\n    let types = nextType && [{\n      type: itemType\n    }, {\n      type: nextType\n    }];\n    if (!types) types = [{\n      type: itemType\n    }, null];\n    /* Change ends here */\n\n    if (!canSplit(tr.doc, $from.pos, 2, types)) return false;\n    if (dispatch) dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n    return true;\n  };\n}\n/* eslint-enable max-len, no-plusplus, no-undef, eqeqeq */\n\nfunction toggleBlockType (type, toggletype, attrs = {}) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggletype)(state, dispatch, view);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch, view);\n  };\n}\n\nfunction isList(node, schema) {\n  return node.type === schema.nodes.bullet_list || node.type === schema.nodes.ordered_list || node.type === schema.nodes.todo_list;\n}\n\nfunction toggleList(listType, itemType) {\n  return (state, dispatch, view) => {\n    const {\n      schema,\n      selection\n    } = state;\n    const {\n      $from,\n      $to\n    } = selection;\n    const range = $from.blockRange($to);\n\n    if (!range) {\n      return false;\n    }\n\n    const parentList = findParentNode(node => isList(node, schema))(selection);\n\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n      if (parentList.node.type === listType) {\n        return liftListItem(itemType)(state, dispatch, view);\n      }\n\n      if (isList(parentList.node, schema) && listType.validContent(parentList.node.content)) {\n        const {\n          tr\n        } = state;\n        tr.setNodeMarkup(parentList.pos, listType);\n\n        if (dispatch) {\n          dispatch(tr);\n        }\n\n        return false;\n      }\n    }\n\n    return wrapInList(listType)(state, dispatch, view);\n  };\n}\n\nfunction toggleWrap (type, attrs = {}) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(state, type, attrs);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type, attrs)(state, dispatch, view);\n  };\n}\n\nfunction updateMark (type, attrs) {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection,\n      doc\n    } = state;\n    const {\n      ranges,\n      empty\n    } = selection;\n\n    if (empty) {\n      const {\n        from,\n        to\n      } = getMarkRange(selection.$from, type);\n\n      if (doc.rangeHasMark(from, to, type)) {\n        tr.removeMark(from, to, type);\n      }\n\n      tr.addMark(from, to, type.create(attrs));\n    } else {\n      ranges.forEach(ref$1 => {\n        const {\n          $to,\n          $from\n        } = ref$1;\n\n        if (doc.rangeHasMark($from.pos, $to.pos, type)) {\n          tr.removeMark($from.pos, $to.pos, type);\n        }\n\n        tr.addMark($from.pos, $to.pos, type.create(attrs));\n      });\n    }\n\n    return dispatch(tr);\n  };\n}\n\nexport { insertText, markInputRule, markPasteRule, nodeInputRule, pasteRule, removeMark, replaceText, setInlineBlockType, splitToDefaultListItem, toggleBlockType, toggleList, toggleWrap, updateMark };\n","<template>\r\n    <button\r\n        class=\"PaperEditor_button\"\r\n        :class=\"{ 'is-active': isActive }\"\r\n        type=\"button\"\r\n        @click=\"$emit('click')\"\r\n    >\r\n        <i class=\"fal\" :class=\"[`fa-${icon}`]\" v-if=\"icon\"></i>\r\n\r\n        <div class=\"PaperEditor_buttonList\" v-if=\"$slots['list']\">\r\n            <slot name=\"list\"></slot>\r\n        </div>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'PaperButton',\r\n    props: {\r\n        subMenu: { type: Boolean, default: false },\r\n        isActive: { type: Boolean, default: false },\r\n        icon: { type: [String, Boolean], default: false },\r\n        currentNode: { type: Object, default: () => {} }\r\n    }\r\n}\r\n</script>","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"PaperEditor_popin\"},[_c('popin-base',_vm._b({attrs:{\"is-active\":_vm.isActive},on:{\"close\":function($event){return _vm.$emit('close')}}},'popin-base',_vm.attrs,false),[_c('template',{slot:\"content\"},[_c('div',{staticClass:\"p-30\"},[_vm._v(\" \"+_vm._s(_vm.content)+\" \"),_vm._l((_vm.form),function(input,id){return _c('div',{key:id,staticClass:\"mv-20\"},[_c(input.is ? input.is : 'input-base',_vm._b({tag:\"component\",attrs:{\"value\":input.transformer && input.transformer.get ? input.transformer.get(_vm.value[id]) : _vm.value[id]},on:{\"input\":function (v) { return _vm.value[id] = v; }}},'component',input,false))],1)})],2)]),_c('template',{slot:\"footer\"},[_c('div'),_c('button-base',{on:{\"click\":_vm.onInput}},[_vm._v(\" Valider \")])],1)],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"InputBase_errors\",class:{ 'is-active': _vm.isActive }},[_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isValid),expression:\"isValid\"}],staticClass:\"InputBase_errorValid fal fa-check\"}),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isValid),expression:\"!isValid\"}],staticClass:\"InputBase_errorInvalid fal fa-times\"}),_c('div',{staticClass:\"InputBase_errorPopin\"},[_vm._l((_vm.errors),function(error){return [_vm._v(\" \"+_vm._s(error)+\" \")]})],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Tooltip.vue?vue&type=template&id=589547ed&\"\nimport script from \"./Tooltip.vue?vue&type=script&lang=js&\"\nexport * from \"./Tooltip.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"SelectBase\",class:{ 'is-active': _vm.state.isActive },on:{\"click\":function($event){_vm.state.isActive = true}}},[(_vm.label)?_c('label',{staticClass:\"SelectBase_label\"},[_vm._v(\" \"+_vm._s(_vm.label)+\" \")]):_vm._e(),_c('input',{ref:\"search\",staticClass:\"SelectBase_value\",attrs:{\"type\":\"text\",\"placeholder\":_vm.placeholder,\"disabled\":!_vm.enableSearch},on:{\"focus\":function($event){return _vm.onFocus(true)},\"blur\":function($event){return _vm.onFocus(false)},\"input\":function (e) { return _vm.search = e.target.value; }}}),_vm._m(0),_c('div',{staticClass:\"SelectBase_options\"},[_vm._l((_vm.displayOptions),function(option){return _c('div',{key:option.id,staticClass:\"SelectBase_option\",class:{ 'is-selected': _vm.selectedOptions.includes(option) },on:{\"click\":function($event){$event.stopPropagation();_vm.onSelect(option.id, _vm.selectedOptions.includes(option))}}},[_vm._v(\" \"+_vm._s(option.label)+\" \"),(_vm.enableMultiple)?_c('i',{staticClass:\"SelectBase_optionCheck fal fa-check\"}):_vm._e(),(_vm.enableMultiple)?_c('i',{staticClass:\"SelectBase_optionRemove fal fa-times\"}):_vm._e()])}),(_vm.enableAdd && _vm.search && !_vm.searchExists)?_c('div',{staticClass:\"SelectBase_option SelectBase_option--add\",on:{\"click\":function($event){return _vm.$emit('add', _vm.search)}}},[_c('span',[_c('i',{staticClass:\"fal fa-plus mr-10\"}),_vm._v(\" \"+_vm._s(_vm.$t('component.selectBase.add', { value: _vm.search }))+\" \")])]):_vm._e(),(_vm.displayOptions.length <= 0 && !_vm.enableAdd && _vm.enableSearch)?_c('div',{staticClass:\"SelectBase_option SelectBase_option--no-results\"},[_c('span',[_c('i',{staticClass:\"fal fa-times mr-10\"}),_vm._v(\" \"+_vm._s(_vm.$t('component.selectBase.noResults'))+\" \")])]):_vm._e()],2)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"Inputbase_helpers\"},[_c('div',{staticClass:\"Inputbase_helper\"},[_c('i',{staticClass:\"fal fa-angle-down\"})])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.tooltips),function(tooltip){return _c('tooltip',_vm._b({key:tooltip.id},'tooltip',tooltip,false),[_vm._v(\" \"+_vm._s(tooltip.content)+\" \")])}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\r\n    classes: ['width-100']\r\n}\r\n\r\n","export default function () {\r\n    let options = {\r\n        id: 'link',\r\n        icon: 'link',\r\n        isMark: true,\r\n        popin: {\r\n            form: {\r\n                href: { label: 'Lien', type: 'text', value: '' },\r\n                target: {\r\n                    label: 'Ouvrir dans un nouvel onglet',\r\n                    is: 'toggle-base',\r\n                    value: '_self',\r\n                    transformer: {\r\n                        get (v) {\r\n                            return v == '_blank'\r\n                        },\r\n                        set (v) {\r\n                            return v ? '_blank' : '_self'\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            attrs: {\r\n                modifiers: ['s', 'absolute-header']\r\n            }\r\n        }\r\n    }\r\n\r\n    return options\r\n}","import { render, staticRenderFns } from \"./paper-select.vue?vue&type=template&id=2ca13bf9&\"\nimport script from \"./paper-select.vue?vue&type=script&lang=js&\"\nexport * from \"./paper-select.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"InputUpload\"},[_c('div',{staticClass:\"InputUpload_body\"},[_c('div',{staticClass:\"InputUpload_input\"},[_c('input-base',{staticClass:\"InputUpload_element\",attrs:{\"modifiers\":['file-upload'],\"type\":\"file\",\"attrs\":{ multiple: true }},on:{\"input\":_vm.addFiles}}),_vm._m(0)],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.files.length > 0),expression:\"files.length > 0\"}],staticClass:\"InputUpload_upload\",class:{ 'is-active': _vm.files.length > 0 }},_vm._l((_vm.files),function(file,i){return _c('div',{key:i,staticClass:\"InputUpload_file\",class:{ 'is-loaded': file.loaded, 'is-loading': file.loading }},[_c('div',{staticClass:\"InputUpload_title\"},[_c('span',{staticClass:\"ft-l mr-10\"},[_c('i',{staticClass:\"fal\",class:[ _vm.getTypeIcon(file.raw.type) ]})]),_vm._v(\" \"+_vm._s(file.name)+\" \")]),_c('div',{staticClass:\"InputUpload_status\"},[(!file.loading && !file.loaded && !_vm.isLoading)?_c('i',{staticClass:\"fal fa-times color-ft-weak\",on:{\"click\":function($event){$event.stopPropagation();return _vm.deleteFile(file.name)}}}):_vm._e(),(file.loading && !file.loaded)?_c('i',{staticClass:\"fal fa-spinner-third spin color-ft-weak\"}):_vm._e(),(file.loaded && !file.error)?_c('i',{staticClass:\"fal fa-check color-blueberry\"}):_vm._e(),(file.error)?_c('i',{staticClass:\"fal fa-times color-error\"}):_vm._e()])])}),0)]),_c('div',{staticClass:\"InputUpload_actions\",class:{ 'is-active': _vm.queuedFiles.length > 0 && !_vm.isLoading }},[_c('div',[_c('div',{staticClass:\"ft-s color-ft-weak p-5\",on:{\"click\":function($event){_vm.files = []}}},[_vm._v(\"Réinitialiser\")])]),_c('button-base',{attrs:{\"modifiers\":['s']},on:{\"click\":function($event){$event.stopPropagation();return _vm.upload($event)}}},[_vm._v(\" Uploader \"+_vm._s(_vm.queuedFiles.length)+\" fichier(s) \")])],1),_c('div',{staticClass:\"InputUpload_actions\",class:{ 'is-active': !_vm.isLoading && _vm.loadedFiles.length > 0 && _vm.loadedFiles.length == _vm.files.length }},[(_vm.status == 'success')?_c('div',{staticClass:\"text-center ft-s fx-grow color-blueberry ph-20\"},[_c('i',{staticClass:\"fal fa-check mr-5\"}),_vm._v(\" Les fichiers ont été chargés avec succès. Ils se trouvent dans la Bibliothèque de médias. \")]):(_vm.status == 'partial')?_c('div',{staticClass:\"text-center ft-s fx-grow color-error ph-20\"},[_c('i',{staticClass:\"fal fa-exclamation-triangle mr-5\"}),_vm._v(\" Certains fichiers n'ont pas pu être chargés, veuillez réessayer. \")]):(_vm.status == 'fail')?_c('div',{staticClass:\"text-center ft-s fx-grow color-error ph-20\"},[_c('i',{staticClass:\"fal fa-times mr-5\"}),_vm._v(\" Les fichiers n'ont pas pu être chargés, veuillez réessayer. \")]):_vm._e()])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{staticClass:\"ft-3xl\"},[_c('i',{staticClass:\"fal fa-cloud-upload color-ft-weak fa-2x mb-10\"})]),_vm._v(\" Choisir des fichiers ou les faire glisser \")])}]\n\nexport { render, staticRenderFns }","export {\r\n    validateWithConstraints\r\n}\r\n\r\nconst validateWithConstraints = (value, constraints) => {\r\n    let errors = []\r\n    constraints = { ...constraints }\r\n\r\n    if (constraints['boundsNumber']) {\r\n        let constraintErrors = boundsNumber(value, constraints['boundsNumber'])\r\n        if (constraintErrors.length > 0) errors = [ ...errors, ...constraintErrors ]\r\n    }\r\n\r\n    return { valid: errors.length == 0, errors }\r\n}\r\n\r\nconst boundsNumber = (value, constraint) => {\r\n    let errors = []\r\n    value = parseInt(value)\r\n\r\n    if (typeof constraint.value[0] !== undefined && value < constraint.value[0]) {\r\n        errors.push('boundsNumber.small')\r\n    }\r\n\r\n    if (typeof constraint.value[1] !== undefined && value > constraint.value[1]) {\r\n        errors.push('boundsNumber.big')\r\n    }\r\n\r\n    return errors\r\n}","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tag,_vm._g(_vm._b({tag:\"component\",staticClass:\"ButtonBase\",class:[ _vm.$modifiers, (_vm.node ? _vm.node.attrs.class : []) ]},'component',_vm.computedAttrs,false),_vm.$listeners),[_c('div',{staticClass:\"ButtonBase_content\"},[(_vm.iconBefore)?_c('span',{staticClass:\"ButtonBase_iconBefore\"},[_c('i',{staticClass:\"fal\",class:[(\"fa-\" + _vm.iconBefore)]})]):_vm._e(),(_vm.$slots.before)?_c('span',{staticClass:\"ButtonBase_before\"},[_vm._t(\"before\")],2):_vm._e(),_c('span',{staticClass:\"ButtonBase_text\"},[_vm._v(\" \"+_vm._s(_vm.text ? _vm.text : '')+\" \"),_vm._t(\"default\")],2),(_vm.$slots.after)?_c('span',{staticClass:\"ButtonBase_after\"},[_vm._t(\"after\")],2):_vm._e(),(_vm.iconAfter)?_c('span',{staticClass:\"ButtonBase_iconAfter\"},[_c('i',{staticClass:\"fal\",class:[(\"fa-\" + _vm.iconAfter)]})]):_vm._e()]),_c('div',{staticClass:\"ButtonBase_iconLoading\"},[_c('i',{staticClass:\"fal\",class:[(\"fa-\" + _vm.iconLoading)]})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Heading, Bold, Image, History, Italic, OrderedList, BulletList, ListItem } from 'tiptap-extensions'\r\nimport { LinkExtension, LinkMenu } from './Link'\r\nimport { ImageExtension, ImageMenu } from './Image'\r\nimport { StyledBlockExtension, StyledBlockMenu } from './StyledBlock'\r\n\r\nexport default {\r\n    menu: {\r\n        link: LinkMenu,\r\n        styledBlock: StyledBlockMenu,\r\n        image: ImageMenu\r\n    },\r\n    plugins: () => {\r\n        \r\n        return [ new Heading({ levels: [1, 2, 3] }), new Bold(), new Italic(), new OrderedList(), new BulletList(), new ListItem(), new ImageExtension(), new History(), new LinkExtension(), new StyledBlockExtension() ]\r\n    }\r\n}","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=470cb8e4&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"InputBase_minus\" @click=\"$emit('decrement')\">\r\n            <i class=\"fal fa-minus\"></i>\r\n        </div>\r\n\r\n        <div class=\"InputBase_plus\" @click=\"$emit('increment')\">\r\n            <i class=\"fal fa-plus\"></i>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'HelperNumber'\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","\n    /*!\n    * tiptap v1.29.6\n    * (c) 2020 überdosis GbR (limited liability)\n    * @license MIT\n    */\n  \nimport { EditorState, Plugin, PluginKey, TextSelection } from 'prosemirror-state';\nexport { NodeSelection, Plugin, PluginKey, TextSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Schema, DOMParser, DOMSerializer } from 'prosemirror-model';\nimport { dropCursor } from 'prosemirror-dropcursor';\nimport { gapCursor } from 'prosemirror-gapcursor';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap } from 'prosemirror-commands';\nimport { inputRules, undoInputRule } from 'prosemirror-inputrules';\nimport { getMarkRange, markIsActive, getMarkAttrs, nodeIsActive, getNodeAttrs } from 'tiptap-utils';\nimport Vue from 'vue';\nimport { setBlockType } from 'tiptap-commands';\n\nfunction camelCase (str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => index === 0 ? word.toLowerCase() : word.toUpperCase()).replace(/\\s+/g, '');\n}\n\nclass ComponentView {\n  constructor(component, {\n    editor,\n    extension,\n    parent,\n    node,\n    view,\n    decorations,\n    getPos\n  }) {\n    this.component = component;\n    this.editor = editor;\n    this.extension = extension;\n    this.parent = parent;\n    this.node = node;\n    this.view = view;\n    this.decorations = decorations;\n    this.isNode = !!this.node.marks;\n    this.isMark = !this.isNode;\n    this.getPos = this.isMark ? this.getMarkPos : getPos;\n    this.captureEvents = true;\n    this.dom = this.createDOM();\n    this.contentDOM = this.vm.$refs.content;\n  }\n\n  createDOM() {\n    const Component = Vue.extend(this.component);\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      view: this.view,\n      getPos: () => this.getPos(),\n      decorations: this.decorations,\n      selected: false,\n      options: this.extension.options,\n      updateAttrs: attrs => this.updateAttrs(attrs)\n    };\n\n    if (typeof this.extension.setSelection === 'function') {\n      this.setSelection = this.extension.setSelection;\n    }\n\n    if (typeof this.extension.update === 'function') {\n      this.update = this.extension.update;\n    }\n\n    this.vm = new Component({\n      parent: this.parent,\n      propsData: props\n    }).$mount();\n    return this.vm.$el;\n  }\n\n  update(node, decorations) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n\n    this.node = node;\n    this.decorations = decorations;\n    this.updateComponentProps({\n      node,\n      decorations\n    });\n    return true;\n  }\n\n  updateComponentProps(props) {\n    if (!this.vm._props) {\n      return;\n    } // Update props in component\n    // TODO: Avoid mutating a prop directly.\n    // Maybe there is a better way to do this?\n\n\n    const originalSilent = Vue.config.silent;\n    Vue.config.silent = true;\n    Object.entries(props).forEach(([key, value]) => {\n      this.vm._props[key] = value;\n    }); // this.vm._props.node = node\n    // this.vm._props.decorations = decorations\n\n    Vue.config.silent = originalSilent;\n  }\n\n  updateAttrs(attrs) {\n    if (!this.view.editable) {\n      return;\n    }\n\n    const {\n      state\n    } = this.view;\n    const {\n      type\n    } = this.node;\n    const pos = this.getPos();\n    const newAttrs = { ...this.node.attrs,\n      ...attrs\n    };\n    const transaction = this.isMark ? state.tr.removeMark(pos.from, pos.to, type).addMark(pos.from, pos.to, type.create(newAttrs)) : state.tr.setNodeMarkup(pos, null, newAttrs);\n    this.view.dispatch(transaction);\n  } // prevent a full re-render of the vue component on update\n  // we'll handle prop updates in `update()`\n\n\n  ignoreMutation(mutation) {\n    // allow leaf nodes to be selected\n    if (mutation.type === 'selection') {\n      return false;\n    }\n\n    if (!this.contentDOM) {\n      return true;\n    }\n\n    return !this.contentDOM.contains(mutation.target);\n  } // disable (almost) all prosemirror event listener for node views\n\n\n  stopEvent(event) {\n    if (typeof this.extension.stopEvent === 'function') {\n      return this.extension.stopEvent(event);\n    }\n\n    const draggable = !!this.extension.schema.draggable; // support a custom drag handle\n\n    if (draggable && event.type === 'mousedown') {\n      const dragHandle = event.target.closest && event.target.closest('[data-drag-handle]');\n      const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle));\n\n      if (isValidDragHandle) {\n        this.captureEvents = false;\n        document.addEventListener('dragend', () => {\n          this.captureEvents = true;\n        }, {\n          once: true\n        });\n      }\n    }\n\n    const isCopy = event.type === 'copy';\n    const isPaste = event.type === 'paste';\n    const isCut = event.type === 'cut';\n    const isDrag = event.type.startsWith('drag') || event.type === 'drop';\n\n    if (draggable && isDrag || isCopy || isPaste || isCut) {\n      return false;\n    }\n\n    return this.captureEvents;\n  }\n\n  selectNode() {\n    this.updateComponentProps({\n      selected: true\n    });\n  }\n\n  deselectNode() {\n    this.updateComponentProps({\n      selected: false\n    });\n  }\n\n  getMarkPos() {\n    const pos = this.view.posAtDOM(this.dom);\n    const resolvedPos = this.view.state.doc.resolve(pos);\n    const range = getMarkRange(resolvedPos, this.node.type);\n    return range;\n  }\n\n  destroy() {\n    this.vm.$destroy();\n  }\n\n}\n\nclass Emitter {\n  // Add an event listener for given event\n  on(event, fn) {\n    this._callbacks = this._callbacks || {}; // Create namespace for this event\n\n    if (!this._callbacks[event]) {\n      this._callbacks[event] = [];\n    }\n\n    this._callbacks[event].push(fn);\n\n    return this;\n  }\n\n  emit(event, ...args) {\n    this._callbacks = this._callbacks || {};\n    const callbacks = this._callbacks[event];\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args));\n    }\n\n    return this;\n  } // Remove event listener for given event.\n  // If fn is not provided, all event listeners for that event will be removed.\n  // If neither is provided, all event listeners will be removed.\n\n\n  off(event, fn) {\n    if (!arguments.length) {\n      this._callbacks = {};\n    } else {\n      // event listeners for the given event\n      const callbacks = this._callbacks ? this._callbacks[event] : null;\n\n      if (callbacks) {\n        if (fn) {\n          this._callbacks[event] = callbacks.filter(cb => cb !== fn); // remove specific handler\n        } else {\n          delete this._callbacks[event]; // remove all handlers\n        }\n      }\n    }\n\n    return this;\n  }\n\n}\n\nclass Extension {\n  constructor(options = {}) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n  }\n\n  init() {\n    return null;\n  }\n\n  bindEditor(editor = null) {\n    this.editor = editor;\n  }\n\n  get name() {\n    return null;\n  }\n\n  get type() {\n    return 'extension';\n  }\n\n  get defaultOptions() {\n    return {};\n  }\n\n  get plugins() {\n    return [];\n  }\n\n  inputRules() {\n    return [];\n  }\n\n  pasteRules() {\n    return [];\n  }\n\n  keys() {\n    return {};\n  }\n\n}\n\nclass ExtensionManager {\n  constructor(extensions = [], editor) {\n    extensions.forEach(extension => {\n      extension.bindEditor(editor);\n      extension.init();\n    });\n    this.extensions = extensions;\n  }\n\n  get nodes() {\n    return this.extensions.filter(extension => extension.type === 'node').reduce((nodes, {\n      name,\n      schema\n    }) => ({ ...nodes,\n      [name]: schema\n    }), {});\n  }\n\n  get options() {\n    const {\n      view\n    } = this;\n    return this.extensions.reduce((nodes, extension) => ({ ...nodes,\n      [extension.name]: new Proxy(extension.options, {\n        set(obj, prop, value) {\n          const changed = obj[prop] !== value;\n          Object.assign(obj, {\n            [prop]: value\n          });\n\n          if (changed) {\n            view.updateState(view.state);\n          }\n\n          return true;\n        }\n\n      })\n    }), {});\n  }\n\n  get marks() {\n    return this.extensions.filter(extension => extension.type === 'mark').reduce((marks, {\n      name,\n      schema\n    }) => ({ ...marks,\n      [name]: schema\n    }), {});\n  }\n\n  get plugins() {\n    return this.extensions.filter(extension => extension.plugins).reduce((allPlugins, {\n      plugins\n    }) => [...allPlugins, ...plugins], []);\n  }\n\n  keymaps({\n    schema\n  }) {\n    const extensionKeymaps = this.extensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.keys).map(extension => extension.keys({\n      schema\n    }));\n    const nodeMarkKeymaps = this.extensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.keys).map(extension => extension.keys({\n      type: schema[\"\".concat(extension.type, \"s\")][extension.name],\n      schema\n    }));\n    return [...extensionKeymaps, ...nodeMarkKeymaps].map(keys => keymap(keys));\n  }\n\n  inputRules({\n    schema,\n    excludedExtensions\n  }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n    const allowedExtensions = excludedExtensions instanceof Array ? this.extensions.filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n    const extensionInputRules = allowedExtensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.inputRules).map(extension => extension.inputRules({\n      schema\n    }));\n    const nodeMarkInputRules = allowedExtensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.inputRules).map(extension => extension.inputRules({\n      type: schema[\"\".concat(extension.type, \"s\")][extension.name],\n      schema\n    }));\n    return [...extensionInputRules, ...nodeMarkInputRules].reduce((allInputRules, inputRules) => [...allInputRules, ...inputRules], []);\n  }\n\n  pasteRules({\n    schema,\n    excludedExtensions\n  }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n    const allowedExtensions = excludedExtensions instanceof Array ? this.extensions.filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n    const extensionPasteRules = allowedExtensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.pasteRules).map(extension => extension.pasteRules({\n      schema\n    }));\n    const nodeMarkPasteRules = allowedExtensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.pasteRules).map(extension => extension.pasteRules({\n      type: schema[\"\".concat(extension.type, \"s\")][extension.name],\n      schema\n    }));\n    return [...extensionPasteRules, ...nodeMarkPasteRules].reduce((allPasteRules, pasteRules) => [...allPasteRules, ...pasteRules], []);\n  }\n\n  commands({\n    schema,\n    view\n  }) {\n    return this.extensions.filter(extension => extension.commands).reduce((allCommands, extension) => {\n      const {\n        name,\n        type\n      } = extension;\n      const commands = {};\n      const value = extension.commands({\n        schema,\n        ...(['node', 'mark'].includes(type) ? {\n          type: schema[\"\".concat(type, \"s\")][name]\n        } : {})\n      });\n\n      const apply = (cb, attrs) => {\n        if (!view.editable) {\n          return false;\n        }\n\n        view.focus();\n        return cb(attrs)(view.state, view.dispatch, view);\n      };\n\n      const handle = (_name, _value) => {\n        if (Array.isArray(_value)) {\n          commands[_name] = attrs => _value.forEach(callback => apply(callback, attrs));\n        } else if (typeof _value === 'function') {\n          commands[_name] = attrs => apply(_value, attrs);\n        }\n      };\n\n      if (typeof value === 'object') {\n        Object.entries(value).forEach(([commandName, commandValue]) => {\n          handle(commandName, commandValue);\n        });\n      } else {\n        handle(name, value);\n      }\n\n      return { ...allCommands,\n        ...commands\n      };\n    }, {});\n  }\n\n}\n\nfunction injectCSS (css) {\n  if (process.env.NODE_ENV !== 'test') {\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    style.textContent = css;\n    const {\n      head\n    } = document;\n    const {\n      firstChild\n    } = head;\n\n    if (firstChild) {\n      head.insertBefore(style, firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  }\n}\n\nclass Mark extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'mark';\n  }\n\n  get view() {\n    return null;\n  }\n\n  get schema() {\n    return null;\n  }\n\n  command() {\n    return () => {};\n  }\n\n}\n\nfunction minMax(value = 0, min = 0, max = 0) {\n  return Math.min(Math.max(parseInt(value, 10), min), max);\n}\n\nclass Node extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'node';\n  }\n\n  get view() {\n    return null;\n  }\n\n  get schema() {\n    return null;\n  }\n\n  command() {\n    return () => {};\n  }\n\n}\n\nclass Doc extends Node {\n  get name() {\n    return 'doc';\n  }\n\n  get schema() {\n    return {\n      content: 'block+'\n    };\n  }\n\n}\n\nclass Paragraph extends Node {\n  get name() {\n    return 'paragraph';\n  }\n\n  get schema() {\n    return {\n      content: 'inline*',\n      group: 'block',\n      draggable: false,\n      parseDOM: [{\n        tag: 'p'\n      }],\n      toDOM: () => ['p', 0]\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => setBlockType(type);\n  }\n\n}\n\nclass Text extends Node {\n  get name() {\n    return 'text';\n  }\n\n  get schema() {\n    return {\n      group: 'inline'\n    };\n  }\n\n}\n\nvar css = \".ProseMirror {\\n  position: relative;\\n}\\n\\n.ProseMirror {\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n  -webkit-font-variant-ligatures: none;\\n  font-variant-ligatures: none;\\n}\\n\\n.ProseMirror pre {\\n  white-space: pre-wrap;\\n}\\n\\n.ProseMirror-gapcursor {\\n  display: none;\\n  pointer-events: none;\\n  position: absolute;\\n}\\n\\n.ProseMirror-gapcursor:after {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: -2px;\\n  width: 20px;\\n  border-top: 1px solid black;\\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\\n}\\n\\n@keyframes ProseMirror-cursor-blink {\\n  to {\\n    visibility: hidden;\\n  }\\n}\\n\\n.ProseMirror-hideselection *::selection {\\n  background: transparent;\\n}\\n\\n.ProseMirror-hideselection *::-moz-selection {\\n  background: transparent;\\n}\\n\\n.ProseMirror-hideselection * {\\n  caret-color: transparent;\\n}\\n\\n.ProseMirror-focused .ProseMirror-gapcursor {\\n  display: block;\\n}\\n\";\n\nclass Editor extends Emitter {\n  constructor(options = {}) {\n    super();\n    this.defaultOptions = {\n      editorProps: {},\n      editable: true,\n      autoFocus: null,\n      extensions: [],\n      content: '',\n      topNode: 'doc',\n      emptyDocument: {\n        type: 'doc',\n        content: [{\n          type: 'paragraph'\n        }]\n      },\n      useBuiltInExtensions: true,\n      disableInputRules: false,\n      disablePasteRules: false,\n      dropCursor: {},\n      enableDropCursor: true,\n      enableGapCursor: true,\n      parseOptions: {},\n      injectCSS: true,\n      onInit: () => {},\n      onTransaction: () => {},\n      onUpdate: () => {},\n      onFocus: () => {},\n      onBlur: () => {},\n      onPaste: () => {},\n      onDrop: () => {}\n    };\n    this.events = ['init', 'transaction', 'update', 'focus', 'blur', 'paste', 'drop'];\n    this.init(options);\n  }\n\n  init(options = {}) {\n    this.setOptions({ ...this.defaultOptions,\n      ...options\n    });\n    this.focused = false;\n    this.selection = {\n      from: 0,\n      to: 0\n    };\n    this.element = document.createElement('div');\n    this.extensions = this.createExtensions();\n    this.nodes = this.createNodes();\n    this.marks = this.createMarks();\n    this.schema = this.createSchema();\n    this.plugins = this.createPlugins();\n    this.keymaps = this.createKeymaps();\n    this.inputRules = this.createInputRules();\n    this.pasteRules = this.createPasteRules();\n    this.view = this.createView();\n    this.commands = this.createCommands();\n    this.setActiveNodesAndMarks();\n\n    if (this.options.injectCSS) {\n      injectCSS(css);\n    }\n\n    if (this.options.autoFocus !== null) {\n      this.focus(this.options.autoFocus);\n    }\n\n    this.events.forEach(name => {\n      this.on(name, this.options[camelCase(\"on \".concat(name))] || (() => {}));\n    });\n    this.emit('init', {\n      view: this.view,\n      state: this.state\n    }); // give extension manager access to our view\n\n    this.extensions.view = this.view;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.options,\n      ...options\n    };\n\n    if (this.view && this.state) {\n      this.view.updateState(this.state);\n    }\n  }\n\n  get builtInExtensions() {\n    if (!this.options.useBuiltInExtensions) {\n      return [];\n    }\n\n    return [new Doc(), new Text(), new Paragraph()];\n  }\n\n  get state() {\n    return this.view ? this.view.state : null;\n  }\n\n  createExtensions() {\n    return new ExtensionManager([...this.builtInExtensions, ...this.options.extensions], this);\n  }\n\n  createPlugins() {\n    return this.extensions.plugins;\n  }\n\n  createKeymaps() {\n    return this.extensions.keymaps({\n      schema: this.schema\n    });\n  }\n\n  createInputRules() {\n    return this.extensions.inputRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disableInputRules\n    });\n  }\n\n  createPasteRules() {\n    return this.extensions.pasteRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disablePasteRules\n    });\n  }\n\n  createCommands() {\n    return this.extensions.commands({\n      schema: this.schema,\n      view: this.view\n    });\n  }\n\n  createNodes() {\n    return this.extensions.nodes;\n  }\n\n  createMarks() {\n    return this.extensions.marks;\n  }\n\n  createSchema() {\n    return new Schema({\n      topNode: this.options.topNode,\n      nodes: this.nodes,\n      marks: this.marks\n    });\n  }\n\n  createState() {\n    return EditorState.create({\n      schema: this.schema,\n      doc: this.createDocument(this.options.content),\n      plugins: [...this.plugins, inputRules({\n        rules: this.inputRules\n      }), ...this.pasteRules, ...this.keymaps, keymap({\n        Backspace: undoInputRule\n      }), keymap(baseKeymap), ...(this.options.enableDropCursor ? [dropCursor(this.options.dropCursor)] : []), ...(this.options.enableGapCursor ? [gapCursor()] : []), new Plugin({\n        key: new PluginKey('editable'),\n        props: {\n          editable: () => this.options.editable\n        }\n      }), new Plugin({\n        props: {\n          attributes: {\n            tabindex: 0\n          },\n          handleDOMEvents: {\n            focus: (view, event) => {\n              this.focused = true;\n              this.emit('focus', {\n                event,\n                state: view.state,\n                view\n              });\n              const transaction = this.state.tr.setMeta('focused', true);\n              this.view.dispatch(transaction);\n            },\n            blur: (view, event) => {\n              this.focused = false;\n              this.emit('blur', {\n                event,\n                state: view.state,\n                view\n              });\n              const transaction = this.state.tr.setMeta('focused', false);\n              this.view.dispatch(transaction);\n            }\n          }\n        }\n      }), new Plugin({\n        props: this.options.editorProps\n      })]\n    });\n  }\n\n  createDocument(content, parseOptions = this.options.parseOptions) {\n    if (content === null) {\n      return this.schema.nodeFromJSON(this.options.emptyDocument);\n    }\n\n    if (typeof content === 'object') {\n      try {\n        return this.schema.nodeFromJSON(content);\n      } catch (error) {\n        console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error);\n        return this.schema.nodeFromJSON(this.options.emptyDocument);\n      }\n    }\n\n    if (typeof content === 'string') {\n      const htmlString = \"<div>\".concat(content, \"</div>\");\n      const parser = new window.DOMParser();\n      const element = parser.parseFromString(htmlString, 'text/html').body.firstElementChild;\n      return DOMParser.fromSchema(this.schema).parse(element, parseOptions);\n    }\n\n    return false;\n  }\n\n  createView() {\n    return new EditorView(this.element, {\n      state: this.createState(),\n      handlePaste: (...args) => {\n        this.emit('paste', ...args);\n      },\n      handleDrop: (...args) => {\n        this.emit('drop', ...args);\n      },\n      dispatchTransaction: this.dispatchTransaction.bind(this)\n    });\n  }\n\n  setParentComponent(component = null) {\n    if (!component) {\n      return;\n    }\n\n    this.view.setProps({\n      nodeViews: this.initNodeViews({\n        parent: component,\n        extensions: [...this.builtInExtensions, ...this.options.extensions]\n      })\n    });\n  }\n\n  initNodeViews({\n    parent,\n    extensions\n  }) {\n    return extensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.view).reduce((nodeViews, extension) => {\n      const nodeView = (node, view, getPos, decorations) => {\n        const component = extension.view;\n        return new ComponentView(component, {\n          editor: this,\n          extension,\n          parent,\n          node,\n          view,\n          getPos,\n          decorations\n        });\n      };\n\n      return { ...nodeViews,\n        [extension.name]: nodeView\n      };\n    }, {});\n  }\n\n  dispatchTransaction(transaction) {\n    const newState = this.state.apply(transaction);\n    this.view.updateState(newState);\n    this.selection = {\n      from: this.state.selection.from,\n      to: this.state.selection.to\n    };\n    this.setActiveNodesAndMarks();\n    this.emit('transaction', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction\n    });\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return;\n    }\n\n    this.emitUpdate(transaction);\n  }\n\n  emitUpdate(transaction) {\n    this.emit('update', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction\n    });\n  }\n\n  resolveSelection(position = null) {\n    if (this.selection && position === null) {\n      return this.selection;\n    }\n\n    if (position === 'start' || position === true) {\n      return {\n        from: 0,\n        to: 0\n      };\n    }\n\n    if (position === 'end') {\n      const {\n        doc\n      } = this.state;\n      return {\n        from: doc.content.size,\n        to: doc.content.size\n      };\n    }\n\n    return {\n      from: position,\n      to: position\n    };\n  }\n\n  focus(position = null) {\n    if (this.view.focused && position === null || position === false) {\n      return;\n    }\n\n    const {\n      from,\n      to\n    } = this.resolveSelection(position);\n    this.setSelection(from, to);\n    setTimeout(() => this.view.focus(), 10);\n  }\n\n  setSelection(from = 0, to = 0) {\n    const {\n      doc,\n      tr\n    } = this.state;\n    const resolvedFrom = minMax(from, 0, doc.content.size);\n    const resolvedEnd = minMax(to, 0, doc.content.size);\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd);\n    const transaction = tr.setSelection(selection);\n    this.view.dispatch(transaction);\n  }\n\n  blur() {\n    this.view.dom.blur();\n  }\n\n  getSchemaJSON() {\n    return JSON.parse(JSON.stringify({\n      nodes: this.extensions.nodes,\n      marks: this.extensions.marks\n    }));\n  }\n\n  getHTML() {\n    const div = document.createElement('div');\n    const fragment = DOMSerializer.fromSchema(this.schema).serializeFragment(this.state.doc.content);\n    div.appendChild(fragment);\n    return div.innerHTML;\n  }\n\n  getJSON() {\n    return this.state.doc.toJSON();\n  }\n\n  setContent(content = {}, emitUpdate = false, parseOptions) {\n    const {\n      doc,\n      tr\n    } = this.state;\n    const document = this.createDocument(content, parseOptions);\n    const selection = TextSelection.create(doc, 0, doc.content.size);\n    const transaction = tr.setSelection(selection).replaceSelectionWith(document, false).setMeta('preventUpdate', !emitUpdate);\n    this.view.dispatch(transaction);\n  }\n\n  clearContent(emitUpdate = false) {\n    this.setContent(this.options.emptyDocument, emitUpdate);\n  }\n\n  setActiveNodesAndMarks() {\n    this.activeMarks = Object.entries(this.schema.marks).reduce((marks, [name, mark]) => ({ ...marks,\n      [name]: (attrs = {}) => markIsActive(this.state, mark, attrs)\n    }), {});\n    this.activeMarkAttrs = Object.entries(this.schema.marks).reduce((marks, [name, mark]) => ({ ...marks,\n      [name]: getMarkAttrs(this.state, mark)\n    }), {});\n    this.activeNodes = Object.entries(this.schema.nodes).reduce((nodes, [name, node]) => ({ ...nodes,\n      [name]: (attrs = {}) => nodeIsActive(this.state, node, attrs)\n    }), {});\n  }\n\n  getMarkAttrs(type = null) {\n    return this.activeMarkAttrs[type];\n  }\n\n  getNodeAttrs(type = null) {\n    return { ...getNodeAttrs(this.state, this.schema.nodes[type])\n    };\n  }\n\n  get isActive() {\n    return Object.entries({ ...this.activeMarks,\n      ...this.activeNodes\n    }).reduce((types, [name, value]) => ({ ...types,\n      [name]: (attrs = {}) => value(attrs)\n    }), {});\n  }\n\n  registerPlugin(plugin = null, handlePlugins) {\n    const plugins = typeof handlePlugins === 'function' ? handlePlugins(plugin, this.state.plugins) : [plugin, ...this.state.plugins];\n    const newState = this.state.reconfigure({\n      plugins\n    });\n    this.view.updateState(newState);\n  }\n\n  unregisterPlugin(name = null) {\n    if (!name || !this.view.docView) {\n      return;\n    }\n\n    const newState = this.state.reconfigure({\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(\"\".concat(name, \"$\")))\n    });\n    this.view.updateState(newState);\n  }\n\n  destroy() {\n    if (!this.view) {\n      return;\n    }\n\n    this.view.destroy();\n  }\n\n}\n\nvar EditorContent = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor && editor.element) {\n          this.$nextTick(() => {\n            this.$el.appendChild(editor.element.firstChild);\n            editor.setParentComponent(this);\n          });\n        }\n      }\n\n    }\n  },\n\n  render(createElement) {\n    return createElement('div');\n  },\n\n  beforeDestroy() {\n    this.editor.element = this.$el;\n  }\n\n};\n\nclass Menu {\n  constructor({\n    options\n  }) {\n    this.options = options;\n    this.preventHide = false; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n\n    this.blurHandler = () => {\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n\n      this.options.editor.emit('menubar:focusUpdate', false);\n    };\n\n    this.options.editor.on('blur', this.blurHandler);\n  }\n\n  handleClick() {\n    this.preventHide = true;\n  }\n\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n\n}\n\nfunction MenuBar (options) {\n  return new Plugin({\n    key: new PluginKey('menu_bar'),\n\n    view(editorView) {\n      return new Menu({\n        editorView,\n        options\n      });\n    }\n\n  });\n}\n\nvar EditorMenuBar = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n\n  data() {\n    return {\n      focused: false\n    };\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(MenuBar({\n              editor,\n              element: this.$el\n            }));\n            this.focused = editor.focused;\n            editor.on('focus', () => {\n              this.focused = true;\n            });\n            editor.on('menubar:focusUpdate', focused => {\n              this.focused = focused;\n            });\n          });\n        }\n      }\n\n    }\n  },\n\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n\n    return this.$scopedSlots.default({\n      focused: this.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor)\n    });\n  }\n\n};\n\nfunction textRange(node, from, to) {\n  const range = document.createRange();\n  range.setEnd(node, to == null ? node.nodeValue.length : to);\n  range.setStart(node, from || 0);\n  return range;\n}\n\nfunction singleRect(object, bias) {\n  const rects = object.getClientRects();\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1];\n}\n\nfunction coordsAtPos(view, pos, end = false) {\n  const {\n    node,\n    offset\n  } = view.docView.domFromPos(pos);\n  let side;\n  let rect;\n\n  if (node.nodeType === 3) {\n    if (end && offset < node.nodeValue.length) {\n      rect = singleRect(textRange(node, offset - 1, offset), -1);\n      side = 'right';\n    } else if (offset < node.nodeValue.length) {\n      rect = singleRect(textRange(node, offset, offset + 1), -1);\n      side = 'left';\n    }\n  } else if (node.firstChild) {\n    if (offset < node.childNodes.length) {\n      const child = node.childNodes[offset];\n      rect = singleRect(child.nodeType === 3 ? textRange(child) : child, -1);\n      side = 'left';\n    }\n\n    if ((!rect || rect.top === rect.bottom) && offset) {\n      const child = node.childNodes[offset - 1];\n      rect = singleRect(child.nodeType === 3 ? textRange(child) : child, 1);\n      side = 'right';\n    }\n  } else {\n    rect = node.getBoundingClientRect();\n    side = 'left';\n  }\n\n  const x = rect[side];\n  return {\n    top: rect.top,\n    bottom: rect.bottom,\n    left: x,\n    right: x\n  };\n}\n\nclass Menu$1 {\n  constructor({\n    options,\n    editorView\n  }) {\n    this.options = { ...{\n        element: null,\n        keepInBounds: true,\n        onUpdate: () => false\n      },\n      ...options\n    };\n    this.editorView = editorView;\n    this.isActive = false;\n    this.left = 0;\n    this.bottom = 0;\n    this.top = 0;\n    this.preventHide = false; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n\n    this.focusHandler = ({\n      view\n    }) => {\n      this.update(view);\n    };\n\n    this.options.editor.on('focus', this.focusHandler);\n\n    this.blurHandler = ({\n      event\n    }) => {\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n\n      this.hide(event);\n    };\n\n    this.options.editor.on('blur', this.blurHandler);\n  }\n\n  handleClick() {\n    this.preventHide = true;\n  }\n\n  update(view, lastState) {\n    const {\n      state\n    } = view;\n\n    if (view.composing) {\n      return;\n    } // Don't do anything if the document/selection didn't change\n\n\n    if (lastState && lastState.doc.eq(state.doc) && lastState.selection.eq(state.selection)) {\n      return;\n    } // Hide the tooltip if the selection is empty\n\n\n    if (state.selection.empty) {\n      this.hide();\n      return;\n    } // Otherwise, reposition it and update its content\n\n\n    const {\n      from,\n      to\n    } = state.selection; // These are in screen coordinates\n    // We can't use EditorView.cordsAtPos here because it can't handle linebreaks correctly\n    // See: https://github.com/ProseMirror/prosemirror-view/pull/47\n\n    const start = coordsAtPos(view, from);\n    const end = coordsAtPos(view, to, true); // The box in which the tooltip is positioned, to use as base\n\n    const parent = this.options.element.offsetParent;\n\n    if (!parent) {\n      this.hide();\n      return;\n    }\n\n    const box = parent.getBoundingClientRect();\n    const el = this.options.element.getBoundingClientRect(); // Find a center-ish x position from the selection endpoints (when\n    // crossing lines, end may be more to the left)\n\n    const left = (start.left + end.left) / 2 - box.left; // Keep the menuBubble in the bounding box of the offsetParent i\n\n    this.left = Math.round(this.options.keepInBounds ? Math.min(box.width - el.width / 2, Math.max(left, el.width / 2)) : left);\n    this.bottom = Math.round(box.bottom - start.top);\n    this.top = Math.round(end.bottom - box.top);\n    this.isActive = true;\n    this.sendUpdate();\n  }\n\n  sendUpdate() {\n    this.options.onUpdate({\n      isActive: this.isActive,\n      left: this.left,\n      bottom: this.bottom,\n      top: this.top\n    });\n  }\n\n  hide(event) {\n    if (event && event.relatedTarget && this.options.element.parentNode && this.options.element.parentNode.contains(event.relatedTarget)) {\n      return;\n    }\n\n    this.isActive = false;\n    this.sendUpdate();\n  }\n\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n    this.options.editor.off('focus', this.focusHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n\n}\n\nfunction MenuBubble (options) {\n  return new Plugin({\n    key: new PluginKey('menu_bubble'),\n\n    view(editorView) {\n      return new Menu$1({\n        editorView,\n        options\n      });\n    }\n\n  });\n}\n\nvar EditorMenuBubble = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    },\n    keepInBounds: {\n      default: true,\n      type: Boolean\n    }\n  },\n\n  data() {\n    return {\n      menu: {\n        isActive: false,\n        left: 0,\n        bottom: 0\n      }\n    };\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(MenuBubble({\n              editor,\n              element: this.$el,\n              keepInBounds: this.keepInBounds,\n              onUpdate: menu => {\n                // the second check ensures event is fired only once\n                if (menu.isActive && this.menu.isActive === false) {\n                  this.$emit('show', menu);\n                } else if (!menu.isActive && this.menu.isActive === true) {\n                  this.$emit('hide', menu);\n                }\n\n                this.menu = menu;\n              }\n            }));\n          });\n        }\n      }\n\n    }\n  },\n\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n\n    return this.$scopedSlots.default({\n      focused: this.editor.view.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor),\n      menu: this.menu\n    });\n  },\n\n  beforeDestroy() {\n    this.editor.unregisterPlugin('menu_bubble');\n  }\n\n};\n\nclass Menu$2 {\n  constructor({\n    options,\n    editorView\n  }) {\n    this.options = { ...{\n        resizeObserver: true,\n        element: null,\n        onUpdate: () => false\n      },\n      ...options\n    };\n    this.preventHide = false;\n    this.editorView = editorView;\n    this.isActive = false;\n    this.top = 0; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n\n    this.focusHandler = ({\n      view\n    }) => {\n      this.update(view);\n    };\n\n    this.options.editor.on('focus', this.focusHandler);\n\n    this.blurHandler = ({\n      event\n    }) => {\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n\n      this.hide(event);\n    };\n\n    this.options.editor.on('blur', this.blurHandler); // sometimes we have to update the position\n    // because of a loaded images for example\n\n    if (this.options.resizeObserver && window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        if (this.isActive) {\n          this.update(this.editorView);\n        }\n      });\n      this.resizeObserver.observe(this.editorView.dom);\n    }\n  }\n\n  handleClick() {\n    this.preventHide = true;\n  }\n\n  update(view, lastState) {\n    const {\n      state\n    } = view; // Don't do anything if the document/selection didn't change\n\n    if (lastState && lastState.doc.eq(state.doc) && lastState.selection.eq(state.selection)) {\n      return;\n    }\n\n    if (!state.selection.empty) {\n      this.hide();\n      return;\n    }\n\n    const currentDom = view.domAtPos(state.selection.anchor);\n    const isActive = currentDom.node.innerHTML === '<br>' && currentDom.node.tagName === 'P' && currentDom.node.parentNode === view.dom;\n\n    if (!isActive) {\n      this.hide();\n      return;\n    }\n\n    const parent = this.options.element.offsetParent;\n\n    if (!parent) {\n      this.hide();\n      return;\n    }\n\n    const editorBoundings = parent.getBoundingClientRect();\n    const cursorBoundings = view.coordsAtPos(state.selection.anchor);\n    const top = cursorBoundings.top - editorBoundings.top;\n    this.isActive = true;\n    this.top = top;\n    this.sendUpdate();\n  }\n\n  sendUpdate() {\n    this.options.onUpdate({\n      isActive: this.isActive,\n      top: this.top\n    });\n  }\n\n  hide(event) {\n    if (event && event.relatedTarget && this.options.element.parentNode && this.options.element.parentNode.contains(event.relatedTarget)) {\n      return;\n    }\n\n    this.isActive = false;\n    this.sendUpdate();\n  }\n\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(this.editorView.dom);\n    }\n\n    this.options.editor.off('focus', this.focusHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n\n}\n\nfunction FloatingMenu (options) {\n  return new Plugin({\n    key: new PluginKey('floating_menu'),\n\n    view(editorView) {\n      return new Menu$2({\n        editorView,\n        options\n      });\n    }\n\n  });\n}\n\nvar EditorFloatingMenu = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n\n  data() {\n    return {\n      menu: {\n        isActive: false,\n        left: 0,\n        bottom: 0\n      }\n    };\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(FloatingMenu({\n              editor,\n              element: this.$el,\n              onUpdate: menu => {\n                // the second check ensures event is fired only once\n                if (menu.isActive && this.menu.isActive === false) {\n                  this.$emit('show', menu);\n                } else if (!menu.isActive && this.menu.isActive === true) {\n                  this.$emit('hide', menu);\n                }\n\n                this.menu = menu;\n              }\n            }));\n          });\n        }\n      }\n\n    }\n  },\n\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n\n    return this.$scopedSlots.default({\n      focused: this.editor.view.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor),\n      menu: this.menu\n    });\n  },\n\n  beforeDestroy() {\n    this.editor.unregisterPlugin('floating_menu');\n  }\n\n};\n\nexport { Doc, Editor, EditorContent, EditorFloatingMenu, EditorMenuBar, EditorMenuBubble, Extension, Mark, Node, Paragraph, Text };\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"TooltipBase\",class:[].concat( _vm.$modifiers ),style:({ marginTop: _vm.top + 'px', marginLeft: _vm.left + 'px' })},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <component\r\n        :is=\"tag\"\r\n        class=\"ButtonBase\"\r\n        :class=\"[ $modifiers, (node ? node.attrs.class : []) ]\"\r\n        v-bind=\"computedAttrs\"\r\n        v-on=\"$listeners\"\r\n    >\r\n        <div class=\"ButtonBase_content\">\r\n            <span class=\"ButtonBase_iconBefore\" v-if=\"iconBefore\">\r\n                <i class=\"fal\" :class=\"[`fa-${iconBefore}`]\"></i>\r\n            </span>\r\n\r\n            <span class=\"ButtonBase_before\" v-if=\"$slots.before\">\r\n                <slot name=\"before\"></slot>\r\n            </span>\r\n            <span class=\"ButtonBase_text\">\r\n                {{ text ? text : '' }}\r\n                <slot></slot>\r\n            </span>\r\n            <span class=\"ButtonBase_after\" v-if=\"$slots.after\">\r\n                <slot name=\"after\"></slot>\r\n            </span>\r\n\r\n            <span class=\"ButtonBase_iconAfter\" v-if=\"iconAfter\">\r\n                <i class=\"fal\" :class=\"[`fa-${iconAfter}`]\"></i>\r\n            </span>\r\n        </div>\r\n\r\n        <div class=\"ButtonBase_iconLoading\">\r\n            <i class=\"fal\" :class=\"[`fa-${iconLoading}`]\"></i>\r\n        </div>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\nimport SCHEMA from './schema.js'\r\nimport ModifiersMixin from '../../helpers/mixins/ModifiersMixin'\r\n\r\nexport default {\r\n    name: 'ButtonBase',\r\n    mixins: [ ModifiersMixin ],\r\n    schema: SCHEMA,\r\n    props: {\r\n        tag: { type: String, default: 'button' },\r\n        link: { type: String },\r\n        text: { type: String },\r\n        node: { type: Object, default: () => {} },\r\n        iconBefore: { type: String, default: '' },\r\n        iconAfter: { type: String, default: '' },\r\n        iconLoading: { type: String, default: 'spinner-third' },\r\n        attrs: { type: Object, default: () => ({}) }\r\n    },\r\n    computed: {\r\n        computedAttrs () {\r\n            return {\r\n                href: this.$props.link,\r\n                ...this.$props.attrs,\r\n                ...(this.$props.node ? this.$props.node.attrs : {})\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","<template>\r\n    <div class=\"PopinBase\" :class=\"[{ 'is-active': isActive }, ...$modifiers ]\">\r\n        <div class=\"PopinBase_body\" ref=\"body\">\r\n            <div class=\"PopinBase_header\">\r\n                <slot name=\"header\">\r\n                    <div></div>\r\n                </slot>\r\n\r\n                <slot name=\"headerClose\">\r\n                    <div class=\"PopinBase_close\" @click=\"$emit('close')\">\r\n                        <i class=\"fal fa-times\"></i>\r\n                    </div>\r\n                </slot>\r\n            </div>\r\n\r\n            <div class=\"PopinBase_content\">\r\n                <slot name=\"content\"></slot>\r\n            </div>\r\n\r\n            <div class=\"PopinBase_footer\" v-if=\"$slots.footer || $slots.footerLeft || $slots.footerRight\">\r\n                <slot name=\"footer\"></slot>\r\n                <slot name=\"footerLeft\"></slot>\r\n                <slot name=\"footerRight\"></slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ModifiersMixin from '../../helpers/mixins/ModifiersMixin'\r\n\r\nexport default {\r\n    name: 'PopinBase',\r\n    mixins: [ ModifiersMixin ],\r\n    props: {\r\n        isActive: { type: Boolean, default: false },\r\n        autoClose: { type: Boolean, default: true }\r\n    },\r\n    data: () => ({\r\n        listeners: {\r\n            close: null\r\n        }\r\n    }),\r\n    watch: {\r\n        isActive: {\r\n            handler (v) {\r\n                if (!this.autoClose) return \r\n\r\n                if (v && this.$data.listeners.close) {\r\n                    setTimeout(() => {\r\n                        document.addEventListener('click', this.$data.listeners.close)\r\n                    }, 100)\r\n                } else if (this.$data.listeners.close) {\r\n                    document.removeEventListener('click', this.$data.listeners.close)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    beforeDestroy () {\r\n        document.removeEventListener('click', this.$data.listeners.close)\r\n    },\r\n    mounted () {\r\n        this.$data.listeners.close = (e) => {\r\n            if (!this.$refs.body.contains(e.target)) this.$emit('close')\r\n        }\r\n    }\r\n}\r\n</script>","<template>\r\n    <div class=\"SelectBase\" :class=\"{ 'is-active': state.isActive }\" @click=\"state.isActive = true\">\r\n        <label class=\"SelectBase_label\" v-if=\"label\">\r\n            {{ label }}\r\n        </label>\r\n\r\n        <input\r\n            type=\"text\"\r\n            class=\"SelectBase_value\"\r\n            :placeholder=\"placeholder\"\r\n            @focus=\"onFocus(true)\"\r\n            @blur=\"onFocus(false)\"\r\n            @input=\"(e) => search = e.target.value\"\r\n            :disabled=\"!enableSearch\"\r\n            ref=\"search\"\r\n        />\r\n\r\n        <div class=\"Inputbase_helpers\">\r\n            <div class=\"Inputbase_helper\">\r\n                <i class=\"fal fa-angle-down\"></i>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"SelectBase_options\">\r\n            <div\r\n                v-for=\"option in displayOptions\"\r\n                class=\"SelectBase_option\"\r\n                :class=\"{ 'is-selected': selectedOptions.includes(option) }\"\r\n                @click.stop=\"onSelect(option.id, selectedOptions.includes(option))\"\r\n                :key=\"option.id\"\r\n            >\r\n                {{ option.label }}\r\n\r\n                <i class=\"SelectBase_optionCheck fal fa-check\" v-if=\"enableMultiple\"></i>\r\n                <i class=\"SelectBase_optionRemove fal fa-times\" v-if=\"enableMultiple\"></i>\r\n            </div>\r\n\r\n            <div\r\n                class=\"SelectBase_option SelectBase_option--add\"\r\n                @click=\"$emit('add', search)\"\r\n                v-if=\"enableAdd && search && !searchExists\"\r\n            >\r\n                <span>\r\n                    <i class=\"fal fa-plus mr-10\"></i> {{ $t('component.selectBase.add', { value: search }) }}\r\n                </span>\r\n            </div>\r\n\r\n            <div class=\"SelectBase_option SelectBase_option--no-results\" v-if=\"displayOptions.length <= 0 && !enableAdd && enableSearch\">\r\n                <span>\r\n                    <i class=\"fal fa-times mr-10\"></i> {{ $t('component.selectBase.noResults') }}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'SelectBase',\r\n    props: {\r\n        label: { type: String, default: '' },\r\n        options: { type: Array, default: () => [] },\r\n        value: { type: [Number, Array, Boolean] },\r\n        constraints: { type: Array, default: () => [] },\r\n        placeholder: { type: String, default: '' },\r\n        enableMultiple: { type: Boolean, default: false },\r\n        enableSearch: { type: Boolean, default: false },\r\n        enableAdd: { type: Boolean, default: false }\r\n    },\r\n    data: () => ({\r\n        search: '',\r\n        state: {\r\n            isFocused: false,\r\n            isActive: false\r\n        },\r\n        listeners: {\r\n            active: null\r\n        }\r\n    }),\r\n    computed: {\r\n        arrayValue () {\r\n            return this.$props.value !== null ? (Array.isArray(this.$props.value) ? this.$props.value : [ this.$props.value ]) : []\r\n        },\r\n        searchExists () {\r\n            return this.$props.options.find(o => o.label == this.$data.search) ? true : false\r\n        },\r\n        selectedOptions () {\r\n            return this.$props.options.filter(o => this.arrayValue.includes(o.id))\r\n        },\r\n        displayValue () {\r\n            return this.selectedOptions.length > 0 ? this.selectedOptions.map(o => o.label).join(', ') : ''\r\n        },\r\n        displayOptions () {\r\n            let options = this.$props.options\r\n\r\n            if (this.$data.search) {\r\n                options = options.filter(o => {\r\n                    return o.label.toLowerCase().includes(this.$data.search.toLowerCase())\r\n                })\r\n            }\r\n            \r\n            return options\r\n        }\r\n    },\r\n    watch: {\r\n        displayValue (v) {\r\n            if (this.$refs.search) this.$refs.search.value = v\r\n        },\r\n        ['state.isActive'] (v) {\r\n            if (v) {\r\n                this.$listeners.active = (e) => {\r\n                    if (!this.$el.contains(e.target)) this.$data.state.isActive = false\r\n                }\r\n\r\n                document.addEventListener('click', this.$listeners.active)\r\n            } else {\r\n                document.removeEventListener('click', this.$listeners.active)\r\n                this.$listeners.active = null\r\n            }\r\n        }\r\n    },\r\n    mounted () {\r\n        if (this.displayValue) this.$refs.search.value = this.displayValue\r\n    },\r\n    methods: {\r\n        onSelect (id, deselect = false) {\r\n            if (!this.$props.enableMultiple) this.$data.state.isActive = false\r\n\r\n            let total = this.$props.enableMultiple ? this.selectedOptions.map(o => o.id) : []\r\n            \r\n            if (deselect && this.$props.enableMultiple) {\r\n                total = total.filter(o => o != id)\r\n            } else {\r\n                total.push(this.$props.options.find(o => o.id == id).id)\r\n            }\r\n            \r\n            this.$emit('input', total.length > 0 ? (this.$props.enableMultiple ? total : total[0]) : null)\r\n        },\r\n        onFocus (toggle) {\r\n            this.$data.state.isFocused = toggle\r\n\r\n            if (toggle) {\r\n                this.$refs.search.value = ''\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.$data.search = ''\r\n                    this.$refs.search.value = this.displayValue ? this.displayValue : ''\r\n                }, 100)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"InputBase_reveal\"},[(_vm.isRevealed)?_c('i',{staticClass:\"fal fa-eye-slash\"}):_c('i',{staticClass:\"fal fa-eye\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"PaperEditor\"},[_c('editor-menu-bar',{attrs:{\"editor\":_vm.editor},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar commands = ref.commands;\nvar isActive = ref.isActive;\nvar getMarkAttrs = ref.getMarkAttrs;\nvar getNodeAttrs = ref.getNodeAttrs;\nreturn [_c('div',[_c('div',{staticClass:\"PaperEditor_menu\"},_vm._l((_vm.options),function(group,i){return _c('div',{key:i,staticClass:\"PaperEditor_menuGroup\"},_vm._l((group),function(option){return _c(option.component || 'paper-button',_vm._b({key:option.id,tag:\"component\",attrs:{\"is-active\":isActive[option.id] ? isActive[option.id]() : false,\"icon\":option.icon,\"current-node\":option.isNode ? getNodeAttrs(option.id) : (option.isMark ? getMarkAttrs(option.id) : null)},on:{\"click\":function($event){option.popin ? _vm.state.current = option.id : commands[option.id]()},\"input\":function (v) { return commands[option.id](v) || undefined; }}},'component',option.attrs ? option.attrs : {},false))}),1)}),0),_vm._l((_vm.options),function(group){return _vm._l((group.filter(function (o) { return o.popin; })),function(option,i){return _c('paper-popin',_vm._b({key:i,attrs:{\"is-active\":option.id == _vm.state.current,\"current-node\":option.isNode ? getNodeAttrs(option.id) : (option.isMark ? getMarkAttrs(option.id) : null)},on:{\"close\":function($event){_vm.state.current = ''},\"input\":function (v) { return commands[option.id](v); }}},'paper-popin',option.popin,false))})})],2)]}}])}),_c('editor-view',{staticClass:\"PaperEditor_view\",attrs:{\"editor\":_vm.editor,\"editable\":true}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","function deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    // Freeze self\n    Object.freeze(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    return obj;\n}\n\nvar deepFreezeEs6 = deepFreeze;\nvar _default = deepFreeze;\ndeepFreezeEs6.default = _default;\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n  }\n\n  ignoreMatch() {\n    this.ignore = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/* Stream merging */\n\n/**\n * @typedef Event\n * @property {'start'|'stop'} event\n * @property {number} offset\n * @property {Node} node\n */\n\n/**\n * @param {Node} node\n */\nfunction tag(node) {\n  return node.nodeName.toLowerCase();\n}\n\n/**\n * @param {Node} node\n */\nfunction nodeStream(node) {\n  /** @type Event[] */\n  const result = [];\n  (function _nodeStream(node, offset) {\n    for (let child = node.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType === 3) {\n        offset += child.nodeValue.length;\n      } else if (child.nodeType === 1) {\n        result.push({\n          event: 'start',\n          offset: offset,\n          node: child\n        });\n        offset = _nodeStream(child, offset);\n        // Prevent void elements from having an end tag that would actually\n        // double them in the output. There are more void elements in HTML\n        // but we list only those realistically expected in code display.\n        if (!tag(child).match(/br|hr|img|input/)) {\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: child\n          });\n        }\n      }\n    }\n    return offset;\n  })(node, 0);\n  return result;\n}\n\n/**\n * @param {any} original - the original stream\n * @param {any} highlighted - stream of the highlighted source\n * @param {string} value - the original source itself\n */\nfunction mergeStreams(original, highlighted, value) {\n  let processed = 0;\n  let result = '';\n  const nodeStack = [];\n\n  function selectStream() {\n    if (!original.length || !highlighted.length) {\n      return original.length ? original : highlighted;\n    }\n    if (original[0].offset !== highlighted[0].offset) {\n      return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n    }\n\n    /*\n    To avoid starting the stream just before it should stop the order is\n    ensured that original always starts first and closes last:\n\n    if (event1 == 'start' && event2 == 'start')\n      return original;\n    if (event1 == 'start' && event2 == 'stop')\n      return highlighted;\n    if (event1 == 'stop' && event2 == 'start')\n      return original;\n    if (event1 == 'stop' && event2 == 'stop')\n      return highlighted;\n\n    ... which is collapsed to:\n    */\n    return highlighted[0].event === 'start' ? original : highlighted;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function open(node) {\n    /** @param {Attr} attr */\n    function attributeString(attr) {\n      return ' ' + attr.nodeName + '=\"' + escapeHTML(attr.value) + '\"';\n    }\n    // @ts-ignore\n    result += '<' + tag(node) + [].map.call(node.attributes, attributeString).join('') + '>';\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function close(node) {\n    result += '</' + tag(node) + '>';\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function render(event) {\n    (event.event === 'start' ? open : close)(event.node);\n  }\n\n  while (original.length || highlighted.length) {\n    let stream = selectStream();\n    result += escapeHTML(value.substring(processed, stream[0].offset));\n    processed = stream[0].offset;\n    if (stream === original) {\n      /*\n      On any opening or closing tag of the original markup we first close\n      the entire highlighted node stack, then render the original tag along\n      with all the following original tags at the same offset and then\n      reopen all the tags on the highlighted stack.\n      */\n      nodeStack.reverse().forEach(close);\n      do {\n        render(stream.splice(0, 1)[0]);\n        stream = selectStream();\n      } while (stream === original && stream.length && stream[0].offset === processed);\n      nodeStack.reverse().forEach(open);\n    } else {\n      if (stream[0].event === 'start') {\n        nodeStack.push(stream[0].node);\n      } else {\n        nodeStack.pop();\n      }\n      render(stream.splice(0, 1)[0]);\n    }\n  }\n  return result + escapeHTML(value.substr(processed));\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    escapeHTML: escapeHTML,\n    inherit: inherit,\n    nodeStream: nodeStream,\n    mergeStreams: mergeStreams\n});\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = node.kind;\n    if (!node.sublanguage) {\n      className = `${this.classPrefix}${className}`;\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\nfunction escape(value) {\n  return new RegExp(value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param {RegExp} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {string} separator\n * @returns {string}\n */\nfunction join(regexps, separator = \"|\") {\n  // backreferenceRe matches an open parenthesis or backreference. To avoid\n  // an incorrect parse, it additionally matches the following:\n  // - [...] elements, where the meaning of parentheses and escapes change\n  // - other escape sequences, so we do not misparse escape sequences as\n  //   interesting elements\n  // - non-matching or lookahead parentheses, which do not capture. These\n  //   follow the '(' with a '?'.\n  const backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n  let numCaptures = 0;\n  let ret = '';\n  for (let i = 0; i < regexps.length; i++) {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regexps[i]);\n    if (i > 0) {\n      ret += separator;\n    }\n    ret += \"(\";\n    while (re.length > 0) {\n      const match = backreferenceRe.exec(re);\n      if (match == null) {\n        ret += re;\n        break;\n      }\n      ret += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        ret += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        ret += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    ret += \")\";\n  }\n  return ret;\n}\n\n// Common regexps\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit({\n    className: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  className: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  className: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit(\n    {\n      className: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push(PHRASAL_WORDS_MODE);\n  mode.contains.push({\n    className: 'doctag',\n    begin: '(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):',\n    relevance: 0\n  });\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  className: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  className: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst CSS_NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE + '(' +\n    '%|em|ex|ch|rem' +\n    '|vw|vh|vmin|vmax' +\n    '|cm|mm|in|pt|pc|px' +\n    '|deg|grad|rad|turn' +\n    '|s|ms' +\n    '|Hz|kHz' +\n    '|dpi|dpcm|dppx' +\n    ')?',\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  className: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  className: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    IDENT_RE: IDENT_RE,\n    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n    NUMBER_RE: NUMBER_RE,\n    C_NUMBER_RE: C_NUMBER_RE,\n    BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n    RE_STARTERS_RE: RE_STARTERS_RE,\n    SHEBANG: SHEBANG,\n    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n    APOS_STRING_MODE: APOS_STRING_MODE,\n    QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n    COMMENT: COMMENT,\n    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n    HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n    NUMBER_MODE: NUMBER_MODE,\n    C_NUMBER_MODE: C_NUMBER_MODE,\n    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n    CSS_NUMBER_MODE: CSS_NUMBER_MODE,\n    REGEXP_MODE: REGEXP_MODE,\n    TITLE_MODE: TITLE_MODE,\n    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n    METHOD_GUARD: METHOD_GUARD,\n    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensativility of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(join(terminators), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminator_end) {\n      mm.addRule(mode.terminator_end, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  // TODO: We need negative look-behind support to do this properly\n  /**\n   * Skip a match if it has a preceding dot\n   *\n   * This is used for `beginKeywords` to prevent matching expressions such as\n   * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n   * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n   * @param {RegExpMatchArray} match\n   * @param {CallbackResponse} response\n   */\n  function skipIfhasPrecedingDot(match, response) {\n    const before = match.input[match.index - 1];\n    if (before === \".\") {\n      response.ignoreMatch();\n    }\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.compiled) return cmode;\n    mode.compiled = true;\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    mode.keywords = mode.keywords || mode.beginKeywords;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\") {\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    // both are not allowed\n    if (mode.lexemes && keywordPattern) {\n      throw new Error(\"ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) \");\n    }\n\n    // `mode.lexemes` was the old standard before we added and now recommend\n    // using `keywords.$pattern` to pass the keyword pattern\n    cmode.keywordPatternRe = langRe(mode.lexemes || keywordPattern || /\\w+/, true);\n\n    if (parent) {\n      if (mode.beginKeywords) {\n        // for languages with keywords that include non-word characters checking for\n        // a word boundary is not sufficient, so instead we check for a word boundary\n        // or whitespace - this does no harm in any case since our keyword engine\n        // doesn't allow spaces in keywords anyways and we still check for the boundary\n        // first\n        mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n        mode.__beforeBegin = skipIfhasPrecedingDot;\n      }\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(mode.begin);\n      if (mode.endSameAsBegin) mode.end = mode.begin;\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(mode.end);\n      cmode.terminator_end = source(mode.end) || '';\n      if (mode.endsWithParent && parent.terminator_end) {\n        cmode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(mode.illegal);\n    // eslint-disable-next-line no-undefined\n    if (mode.relevance === undefined) mode.relevance = 1;\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cached_variants) {\n    mode.cached_variants = mode.variants.map(function(variant) {\n      return inherit(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cached_variants) {\n    return mode.cached_variants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\n/***********************************************\n  Keywords\n***********************************************/\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive) {\n  /** @type KeywordDict */\n  const compiledKeywords = {};\n\n  if (typeof rawKeywords === 'string') { // string\n    splitAndCompile('keyword', rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(className) {\n      splitAndCompile(className, rawKeywords[className]);\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} className\n   * @param {string} keywordList\n   */\n  function splitAndCompile(className, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.toLowerCase();\n    }\n    keywordList.split(' ').forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\nvar version = \"10.4.1\";\n\n// @ts-nocheck\n\nfunction hasValueOrEmptyAttribute(value) {\n  return Boolean(value || value === \"\");\n}\n\nfunction BuildVuePlugin(hljs) {\n  const Component = {\n    props: [\"language\", \"code\", \"autodetect\"],\n    data: function() {\n      return {\n        detectedLanguage: \"\",\n        unknownLanguage: false\n      };\n    },\n    computed: {\n      className() {\n        if (this.unknownLanguage) return \"\";\n  \n        return \"hljs \" + this.detectedLanguage;\n      },\n      highlighted() {\n        // no idea what language to use, return raw code\n        if (!this.autoDetect && !hljs.getLanguage(this.language)) {\n          console.warn(`The language \"${this.language}\" you specified could not be found.`);\n          this.unknownLanguage = true;\n          return escapeHTML(this.code);\n        }\n  \n        let result;\n        if (this.autoDetect) {\n          result = hljs.highlightAuto(this.code);\n          this.detectedLanguage = result.language;\n        } else {\n          result = hljs.highlight(this.language, this.code, this.ignoreIllegals);\n          this.detectedLanguage = this.language;\n        }\n        return result.value;\n      },\n      autoDetect() {\n        return !this.language || hasValueOrEmptyAttribute(this.autodetect);\n      },\n      ignoreIllegals() {\n        return true;\n      }\n    },\n    // this avoids needing to use a whole Vue compilation pipeline just\n    // to build Highlight.js\n    render(createElement) {\n      return createElement(\"pre\", {}, [\n        createElement(\"code\", {\n          class: this.className,\n          domProps: { innerHTML: this.highlighted }})\n      ]);\n    }\n    // template: `<pre><code :class=\"className\" v-html=\"highlighted\"></code></pre>`\n  };\n  \n  const VuePlugin = {\n    install(Vue) {\n      Vue.component('highlightjs', Component);\n    }\n  };\n\n  return { Component, VuePlugin };\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\nconst escape$1 = escapeHTML;\nconst inherit$1 = inherit;\n\nconst { nodeStream: nodeStream$1, mergeStreams: mergeStreams$1 } = utils;\nconst NO_MATCH = Symbol(\"nomatch\");\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Convenience variables for build-in objects\n  /** @type {unknown[]} */\n  const ArrayProto = [];\n\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const fixMarkupRe = /(^(<[^>]+>|\\t|)+|\\n)/gm;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        console.warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        console.warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode} [continuation] - current continuation mode, if any\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(languageName, code, ignoreIllegals, continuation) {\n    /** @type {{ code: string, language: string, result?: any }} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result ?\n      context.result :\n      _highlight(context.language, context.code, ignoreIllegals, continuation);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, code, ignoreIllegals, continuation) {\n    const codeToHighlight = code;\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {RegExpMatchArray} match - regexp match data\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, match) {\n      const matchText = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return Object.prototype.hasOwnProperty.call(mode.keywords, matchText) && mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const data = keywordData(top, match);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          relevance += keywordRelevance;\n          const cssClass = language.classNameAliases[kind] || kind;\n          emitter.addKeyword(match[0], cssClass);\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substr(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result.top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result.emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {Mode} mode - new mode to start\n     */\n    function startNewMode(mode) {\n      if (mode.className) {\n        emitter.openNode(language.classNameAliases[mode.className] || mode.className);\n      }\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.ignore) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexs to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.ignore) return doIgnore(lexeme);\n      }\n\n      if (newMode && newMode.endSameAsBegin) {\n        newMode.endRe = escape(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode);\n      // if (mode[\"after:begin\"]) {\n      //   let resp = new Response(mode);\n      //   mode[\"after:begin\"](match, resp);\n      // }\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.className) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        if (endMode.endSameAsBegin) {\n          endMode.starts.endRe = endMode.endRe;\n        }\n        startNewMode(endMode.starts);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.className) {\n          list.unshift(current.className);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceeding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error('0 width match regex');\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  Only one occasion now.  An end match that was\n      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`\n      rule sets the end rule to a specific match.  Since the overall mode termination rule that's\n      being used to scan the text isn't recompiled that means that any match that LOOKS like\n      the end (but is not, because it is not an exact match to the beginning) will\n      end up here.  A definite end match, but when `doEndMatch` tries to \"reapply\"\n      the end rule and fails to match, we wind up here, and just silently ignore the end.\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      console.error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: languageName,\n        illegal: false,\n        emitter: emitter,\n        top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          illegal: true,\n          illegalBy: {\n            msg: err.message,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode\n          },\n          sofar: result,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          illegal: false,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter,\n          language: languageName,\n          top: top,\n          errorRaised: err\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      relevance: 0,\n      emitter: new options.__emitter(options),\n      value: escape$1(code),\n      illegal: false,\n      top: PLAINTEXT_LANGUAGE\n    };\n    result.emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.second_best = secondBest;\n\n    return result;\n  }\n\n  /**\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n    @param {string} html\n    @returns {string}\n  */\n  function fixMarkup(html) {\n    if (!(options.tabReplace || options.useBR)) {\n      return html;\n    }\n\n    return html.replace(fixMarkupRe, match => {\n      if (match === '\\n') {\n        return options.useBR ? '<br>' : match;\n      } else if (options.tabReplace) {\n        return match.replace(/\\t/g, options.tabReplace);\n      }\n      return match;\n    });\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {string} prevClassName\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    const language = currentLang ? aliases[currentLang] : resultLang;\n    const result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (!prevClassName.includes(language)) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code. Accepts a DOM node and\n   * two optional parameters for fixMarkup.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightBlock(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightBlock\",\n      { block: element, language: language });\n\n    if (options.useBR) {\n      node = document.createElement('div');\n      node.innerHTML = element.innerHTML.replace(/\\n/g, '').replace(/<br[ /]*>/g, '\\n');\n    } else {\n      node = element;\n    }\n    const text = node.textContent;\n    const result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    const originalStream = nodeStream$1(node);\n    if (originalStream.length) {\n      const resultNode = document.createElement('div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams$1(originalStream, nodeStream$1(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    fire(\"after:highlightBlock\", { block: element, result: result });\n\n    element.innerHTML = result.value;\n    element.className = buildClassName(element.className, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relavance: result.relevance\n    };\n    if (result.second_best) {\n      element.second_best = {\n        language: result.second_best.language,\n        // TODO: remove with version 11.0\n        re: result.second_best.relevance,\n        relavance: result.second_best.relevance\n      };\n    }\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    if (userOptions.useBR) {\n      console.warn(\"'useBR' option is deprecated and will be removed entirely in v11.0\");\n      console.warn(\"Please see https://github.com/highlightjs/highlight.js/issues/2559\");\n    }\n    options = inherit$1(options, userOptions);\n  }\n\n  /**\n   * Highlights to all <pre><code> blocks on a page\n   *\n   * @type {Function & {called?: boolean}}\n   */\n  const initHighlighting = () => {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n\n    const blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  };\n\n  // Higlights all when DOMContentLoaded fires\n  function initHighlightingOnLoad() {\n    // @ts-ignore\n    window.addEventListener('DOMContentLoaded', initHighlighting, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error) {\n      console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error; } else { console.error(error); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n    intended usage: When one language truly requires another\n\n    Unlike `getLanguage`, this will throw when the requested language\n    is not available.\n\n    @param {string} name - name of the language to fetch/require\n    @returns {Language | never}\n  */\n  function requireLanguage(name) {\n    console.warn(\"requireLanguage is deprecated and will be removed entirely in the future.\");\n    console.warn(\"Please see https://github.com/highlightjs/highlight.js/pull/2844\");\n\n    const lang = getLanguage(name);\n    if (lang) { return lang; }\n\n    const err = new Error('The \\'{}\\' language is required, but not loaded.'.replace('{}', name));\n    throw err;\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n  Note: fixMarkup is deprecated and will be removed entirely in v11\n\n  @param {string} arg\n  @returns {string}\n  */\n  function deprecateFixMarkup(arg) {\n    console.warn(\"fixMarkup is deprecated and will be removed entirely in v11.0\");\n    console.warn(\"Please see https://github.com/highlightjs/highlight.js/issues/2534\");\n\n    return fixMarkup(arg);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    fixMarkup: deprecateFixMarkup,\n    highlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    requireLanguage,\n    autoDetection,\n    inherit: inherit$1,\n    addPlugin,\n    // plugins for frameworks\n    vuePlugin: BuildVuePlugin(hljs).VuePlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreezeEs6(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexs into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\n","import { Mark } from 'tiptap'\r\nimport { updateMark, removeMark } from 'tiptap-commands'\r\n\r\nimport LinkBase from '../../../ButtonBase/index.vue'\r\n\r\nexport default class Link extends Mark {\r\n\r\n    get name() {\r\n        return 'link'\r\n    }\r\n\r\n    get schema() {\r\n        return {\r\n            attrs: {\r\n                href: { default: null },\r\n                is: { default: 'a' },\r\n                target: { default: '_self' },\r\n                class: { default: ['ButtonBase--link'] }\r\n            },\r\n            inclusive: false,\r\n            parseDOM: [{\r\n                tag: 'a',\r\n                priority: 9,\r\n                getAttrs: dom => ({\r\n                    href: dom.getAttribute('href'),\r\n                    target: dom.hasAttribute('target') ? dom.getAttribute('target') : '_self'\r\n                }),\r\n            }],\r\n            toDOM: node => ['a', {\r\n                href: node.attrs.href\r\n            }, 0]\r\n        }\r\n    }\r\n\r\n    commands({ type }) {\r\n        return attrs => {\r\n            if (attrs.href) return updateMark(type, attrs)\r\n            return removeMark(type)\r\n        }\r\n    }\r\n\r\n    get view() {\r\n        return LinkBase\r\n    }\r\n}","<template>\r\n    <div class=\"InputBase\" :class=\"[ $modifiers, ...classes ]\">\r\n        <label class=\"InputBase_label\" v-if=\"label\">\r\n            {{ label }}\r\n        </label>\r\n\r\n        <template v-if=\"type == 'file'\">\r\n            <button-base class=\"InputBase_fileSelect\">\r\n                {{ label ||  \"Choisir un fichier\" }}\r\n            </button-base>\r\n\r\n            <label class=\"InputBase_fileLabel\">\r\n                {{ value.length > 0 ? (value.length == 1 ? value[0].name : value.length + ' fichiers sélectionnés') : 'Aucun fichier sélectionné' }}\r\n            </label>\r\n\r\n            <input\r\n                class=\"InputBase_element\"\r\n                :type=\"type\"\r\n                v-bind=\"attrs\"\r\n                @input=\"(e) => onInput(Object.keys(e.target.files).map(key => e.target.files[key]))\"\r\n            >\r\n        </template>\r\n\r\n        <template v-else>\r\n            <input\r\n                class=\"InputBase_element\"\r\n                :value=\"value\"\r\n                :type=\"computedType\"\r\n                v-bind=\"attrs\"\r\n                @focus=\"state.isFocused = true\"\r\n                @blur=\"state.isFocused = false\"\r\n                @input=\"(e) => onInput(e.target.value)\"\r\n            >\r\n        </template>\r\n\r\n        <div class=\"Inputbase_helpers\" v-if=\"helpers.length > 0 || Object.keys(constraints).length > 0\">\r\n            <helper-number\r\n                class=\"Inputbase_helper\"\r\n                @increment=\"increment(1)\"\r\n                @decrement=\"increment(-1)\"\r\n                v-if=\"helpers.includes('number')\"\r\n            />\r\n\r\n            <helper-reset\r\n                class=\"Inputbase_helper\"\r\n                :is-active=\"state.isValue\"\r\n                @click=\"reset\"\r\n                v-if=\"helpers.includes('reset')\"\r\n            />\r\n\r\n            <helper-reveal\r\n                class=\"Inputbase_helper\"\r\n                @click.native=\"reveal = !reveal\"\r\n                :is-revealed=\"reveal\"\r\n                v-if=\"helpers.includes('reveal')\"\r\n            />\r\n\r\n            <helper-errors\r\n                class=\"Inputbase_helper\"\r\n                :errors=\"errors\"\r\n                :is-valid=\"state.isValid\"\r\n                :is-active=\"errors.length > 0 && state.isFocused\"\r\n                v-show=\"state.isValue\"\r\n                v-if=\"Object.keys(constraints).length > 0\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport SCHEMA from './schema'\r\nimport HelperErrors from './components/HelperErrors'\r\nimport HelperNumber from './components/HelperNumber'\r\nimport HelperReset from './components/HelperReset'\r\nimport HelperReveal from './components/HelperReveal'\r\nimport { validateWithConstraints } from '../../helpers/InputValidators'\r\nimport ModifiersMixin from '../../helpers/mixins/ModifiersMixin'\r\n\r\nexport default {\r\n    name: 'InputBase',\r\n    schema: SCHEMA,\r\n    mixins: [ ModifiersMixin ],\r\n    components: { HelperErrors, HelperNumber, HelperReset, HelperReveal },\r\n    props: {\r\n        label: { type: String, default: '' },\r\n        type: { type: String, default: 'text' },\r\n        value: { type: [String, Number, Boolean, Object, Array] },\r\n        helpers: { type: Array, default: () => [] },\r\n        constraints: { type: Object, default: () => ({}) },\r\n        default: { type: [String, Number] },\r\n        attrs: { type: Object, default: () => ({}) },\r\n    },\r\n    data: () => ({\r\n        state: {\r\n            isFocused: false,\r\n            isValue: false,\r\n            isValid: false\r\n        },\r\n        reveal: false,\r\n        errors: []\r\n    }),\r\n    computed: {\r\n        classes () {\r\n            let classes = {}\r\n\r\n            if (this.$props.type == 'file') classes['InputBase--file'] = true\r\n            if (this.$data.state.isValue) classes['is-value'] = true\r\n            if (this.$data.state.isFocused) classes['is-focused'] = true\r\n            \r\n            return classes\r\n        },\r\n        computedType () {\r\n            return this.reveal ? 'text' : this.type\r\n        }\r\n    },\r\n    watch: {\r\n        value: {\r\n            immediate: true,\r\n            deep: true,\r\n            handler (v) {\r\n                this.$data.state.isValue = typeof v !== undefined && v !== ''\r\n                this.validate(v)\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        onInput (v) {\r\n            this.validate(v)\r\n            this.$emit('input', v)\r\n        },\r\n        increment (v) {\r\n            let value = parseInt(this.$props.value)\r\n\r\n            if (Number.isNaN(value)) value = this.$props.default ? this.$props.default : 0\r\n\r\n            this.onInput(value + v)\r\n        },\r\n        validate (v) {\r\n            if (Object.keys(this.$props.constraints).length <= 0) return\r\n            \r\n            const result = validateWithConstraints(v, this.$props.constraints)\r\n            \r\n            this.$data.state.isValid = result.valid\r\n            this.$data.errors = result.errors\r\n        },\r\n        reset () {\r\n            this.onInput(this.$props.default)\r\n        }\r\n    }\r\n}\r\n</script>","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"InputBase_minus\",on:{\"click\":function($event){return _vm.$emit('decrement')}}},[_c('i',{staticClass:\"fal fa-minus\"})]),_c('div',{staticClass:\"InputBase_plus\",on:{\"click\":function($event){return _vm.$emit('increment')}}},[_c('i',{staticClass:\"fal fa-plus\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./paper-button.vue?vue&type=template&id=26f87e48&\"\nimport script from \"./paper-button.vue?vue&type=script&lang=js&\"\nexport * from \"./paper-button.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"InputBase_reset\" @click=\"$emit('click')\" v-show=\"isActive\">\r\n        <i class=\"fal fa-redo fa-sm\"></i>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'HelperReset',\r\n    props: {\r\n        isActive: { type: Boolean, default: false }\r\n    }\r\n}\r\n</script>","\n    /*!\n    * tiptap-extensions v1.33.1\n    * (c) 2020 überdosis GbR (limited liability)\n    * @license MIT\n    */\n  \nimport { Node, Plugin, PluginKey, Mark, Extension } from 'tiptap';\nimport { toggleWrap, wrappingInputRule, toggleList, toggleBlockType, setBlockType, textblockTypeInputRule, chainCommands, exitCode, nodeInputRule, splitListItem, sinkListItem, liftListItem, insertText, replaceText, splitToDefaultListItem, toggleMark, markInputRule, markPasteRule, updateMark, removeMark, pasteRule } from 'tiptap-commands';\nimport low from 'lowlight/lib/core';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\nimport { findBlockNodes, createTable } from 'prosemirror-utils';\nimport { Fragment } from 'prosemirror-model';\nimport { Plugin as Plugin$1, PluginKey as PluginKey$1, TextSelection } from 'prosemirror-state';\nimport { tableNodes, addColumnBefore, addColumnAfter, deleteColumn, addRowBefore, addRowAfter, deleteRow, deleteTable, mergeCells, splitCell, toggleHeaderColumn, toggleHeaderRow, toggleHeaderCell, setCellAttr, fixTables, goToNextCell, columnResizing, tableEditing } from 'prosemirror-tables';\nimport { getMarkAttrs, nodeEqualsType } from 'tiptap-utils';\nimport { Step } from 'prosemirror-transform';\nimport { sendableSteps, getVersion, receiveTransaction, collab } from 'prosemirror-collab';\nimport { history, undo, redo, undoDepth, redoDepth } from 'prosemirror-history';\n\nclass Blockquote extends Node {\n  get name() {\n    return 'blockquote';\n  }\n\n  get schema() {\n    return {\n      content: 'block*',\n      group: 'block',\n      defining: true,\n      draggable: false,\n      parseDOM: [{\n        tag: 'blockquote'\n      }],\n      toDOM: () => ['blockquote', 0]\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => toggleWrap(type);\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Ctrl->': toggleWrap(type)\n    };\n  }\n\n  inputRules({\n    type\n  }) {\n    return [wrappingInputRule(/^\\s*>\\s$/, type)];\n  }\n\n}\n\nclass BulletList extends Node {\n  get name() {\n    return 'bullet_list';\n  }\n\n  get schema() {\n    return {\n      content: 'list_item+',\n      group: 'block',\n      parseDOM: [{\n        tag: 'ul'\n      }],\n      toDOM: () => ['ul', 0]\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return () => toggleList(type, schema.nodes.list_item);\n  }\n\n  keys({\n    type,\n    schema\n  }) {\n    return {\n      'Shift-Ctrl-8': toggleList(type, schema.nodes.list_item)\n    };\n  }\n\n  inputRules({\n    type\n  }) {\n    return [wrappingInputRule(/^\\s*([-+*])\\s$/, type)];\n  }\n\n}\n\nclass CodeBlock extends Node {\n  get name() {\n    return 'code_block';\n  }\n\n  get schema() {\n    return {\n      content: 'text*',\n      marks: '',\n      group: 'block',\n      code: true,\n      defining: true,\n      draggable: false,\n      parseDOM: [{\n        tag: 'pre',\n        preserveWhitespace: 'full'\n      }],\n      toDOM: () => ['pre', ['code', 0]]\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return () => toggleBlockType(type, schema.nodes.paragraph);\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Shift-Ctrl-\\\\': setBlockType(type)\n    };\n  }\n\n  inputRules({\n    type\n  }) {\n    return [textblockTypeInputRule(/^```$/, type)];\n  }\n\n}\n\nfunction getDecorations({\n  doc,\n  name\n}) {\n  const decorations = [];\n  const blocks = findBlockNodes(doc).filter(item => item.node.type.name === name);\n\n  const flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\n  function parseNodes(nodes, className = []) {\n    return nodes.map(node => {\n      const classes = [...className, ...(node.properties ? node.properties.className : [])];\n\n      if (node.children) {\n        return parseNodes(node.children, classes);\n      }\n\n      return {\n        text: node.value,\n        classes\n      };\n    });\n  }\n\n  blocks.forEach(block => {\n    let startPos = block.pos + 1;\n    const nodes = low.highlightAuto(block.node.textContent).value;\n    flatten(parseNodes(nodes)).map(node => {\n      const from = startPos;\n      const to = from + node.text.length;\n      startPos = to;\n      return { ...node,\n        from,\n        to\n      };\n    }).forEach(node => {\n      const decoration = Decoration.inline(node.from, node.to, {\n        class: node.classes.join(' ')\n      });\n      decorations.push(decoration);\n    });\n  });\n  return DecorationSet.create(doc, decorations);\n}\n\nfunction HighlightPlugin({\n  name\n}) {\n  return new Plugin({\n    name: new PluginKey('highlight'),\n    state: {\n      init: (_, {\n        doc\n      }) => getDecorations({\n        doc,\n        name\n      }),\n      apply: (transaction, decorationSet, oldState, newState) => {\n        // TODO: find way to cache decorations\n        // https://discuss.prosemirror.net/t/how-to-update-multiple-inline-decorations-on-node-change/1493\n        const oldNodeName = oldState.selection.$head.parent.type.name;\n        const newNodeName = newState.selection.$head.parent.type.name;\n        const oldNodes = findBlockNodes(oldState.doc).filter(item => item.node.type.name === name);\n        const newNodes = findBlockNodes(newState.doc).filter(item => item.node.type.name === name); // Apply decorations if selection includes named node, or transaction changes named node.\n\n        if (transaction.docChanged && ([oldNodeName, newNodeName].includes(name) || newNodes.length !== oldNodes.length)) {\n          return getDecorations({\n            doc: transaction.doc,\n            name\n          });\n        }\n\n        return decorationSet.map(transaction.mapping, transaction.doc);\n      }\n    },\n    props: {\n      decorations(state) {\n        return this.getState(state);\n      }\n\n    }\n  });\n}\n\nclass CodeBlockHighlight extends Node {\n  constructor(options = {}) {\n    super(options);\n\n    try {\n      Object.entries(this.options.languages).forEach(([name, mapping]) => {\n        low.registerLanguage(name, mapping);\n      });\n    } catch (err) {\n      throw new Error('Invalid syntax highlight definitions: define at least one highlight.js language mapping');\n    }\n  }\n\n  get name() {\n    return 'code_block';\n  }\n\n  get defaultOptions() {\n    return {\n      languages: {}\n    };\n  }\n\n  get schema() {\n    return {\n      content: 'text*',\n      marks: '',\n      group: 'block',\n      code: true,\n      defining: true,\n      draggable: false,\n      parseDOM: [{\n        tag: 'pre',\n        preserveWhitespace: 'full'\n      }],\n      toDOM: () => ['pre', ['code', 0]]\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return () => toggleBlockType(type, schema.nodes.paragraph);\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Shift-Ctrl-\\\\': setBlockType(type)\n    };\n  }\n\n  inputRules({\n    type\n  }) {\n    return [textblockTypeInputRule(/^```$/, type)];\n  }\n\n  get plugins() {\n    return [HighlightPlugin({\n      name: this.name\n    })];\n  }\n\n}\n\nclass HardBreak extends Node {\n  get name() {\n    return 'hard_break';\n  }\n\n  get schema() {\n    return {\n      inline: true,\n      group: 'inline',\n      selectable: false,\n      parseDOM: [{\n        tag: 'br'\n      }],\n      toDOM: () => ['br']\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => chainCommands(exitCode, (state, dispatch) => {\n      dispatch(state.tr.replaceSelectionWith(type.create()).scrollIntoView());\n      return true;\n    });\n  }\n\n  keys({\n    type\n  }) {\n    const command = chainCommands(exitCode, (state, dispatch) => {\n      dispatch(state.tr.replaceSelectionWith(type.create()).scrollIntoView());\n      return true;\n    });\n    return {\n      'Mod-Enter': command,\n      'Shift-Enter': command\n    };\n  }\n\n}\n\nclass Heading extends Node {\n  get name() {\n    return 'heading';\n  }\n\n  get defaultOptions() {\n    return {\n      levels: [1, 2, 3, 4, 5, 6]\n    };\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        level: {\n          default: 1\n        }\n      },\n      content: 'inline*',\n      group: 'block',\n      defining: true,\n      draggable: false,\n      parseDOM: this.options.levels.map(level => ({\n        tag: \"h\".concat(level),\n        attrs: {\n          level\n        }\n      })),\n      toDOM: node => [\"h\".concat(node.attrs.level), 0]\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return attrs => toggleBlockType(type, schema.nodes.paragraph, attrs);\n  }\n\n  keys({\n    type\n  }) {\n    return this.options.levels.reduce((items, level) => ({ ...items,\n      ...{\n        [\"Shift-Ctrl-\".concat(level)]: setBlockType(type, {\n          level\n        })\n      }\n    }), {});\n  }\n\n  inputRules({\n    type\n  }) {\n    return this.options.levels.map(level => textblockTypeInputRule(new RegExp(\"^(#{1,\".concat(level, \"})\\\\s$\")), type, () => ({\n      level\n    })));\n  }\n\n}\n\nclass HorizontalRule extends Node {\n  get name() {\n    return 'horizontal_rule';\n  }\n\n  get schema() {\n    return {\n      group: 'block',\n      parseDOM: [{\n        tag: 'hr'\n      }],\n      toDOM: () => ['hr']\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => (state, dispatch) => dispatch(state.tr.replaceSelectionWith(type.create()));\n  }\n\n  inputRules({\n    type\n  }) {\n    return [nodeInputRule(/^(?:---|___\\s|\\*\\*\\*\\s)$/, type)];\n  }\n\n}\n\n/**\n * Matches following attributes in Markdown-typed image: [, alt, src, title]\n *\n * Example:\n * ![Lorem](image.jpg) -> [, \"Lorem\", \"image.jpg\"]\n * ![](image.jpg \"Ipsum\") -> [, \"\", \"image.jpg\", \"Ipsum\"]\n * ![Lorem](image.jpg \"Ipsum\") -> [, \"Lorem\", \"image.jpg\", \"Ipsum\"]\n */\n\nconst IMAGE_INPUT_REGEX = /!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\)/;\nclass Image extends Node {\n  get name() {\n    return 'image';\n  }\n\n  get schema() {\n    return {\n      inline: true,\n      attrs: {\n        src: {},\n        alt: {\n          default: null\n        },\n        title: {\n          default: null\n        }\n      },\n      group: 'inline',\n      draggable: true,\n      parseDOM: [{\n        tag: 'img[src]',\n        getAttrs: dom => ({\n          src: dom.getAttribute('src'),\n          title: dom.getAttribute('title'),\n          alt: dom.getAttribute('alt')\n        })\n      }],\n      toDOM: node => ['img', node.attrs]\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return attrs => (state, dispatch) => {\n      const {\n        selection\n      } = state;\n      const position = selection.$cursor ? selection.$cursor.pos : selection.$to.pos;\n      const node = type.create(attrs);\n      const transaction = state.tr.insert(position, node);\n      dispatch(transaction);\n    };\n  }\n\n  inputRules({\n    type\n  }) {\n    return [nodeInputRule(IMAGE_INPUT_REGEX, type, match => {\n      const [, alt, src, title] = match;\n      return {\n        src,\n        alt,\n        title\n      };\n    })];\n  }\n\n  get plugins() {\n    return [new Plugin({\n      props: {\n        handleDOMEvents: {\n          drop(view, event) {\n            const hasFiles = event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length;\n\n            if (!hasFiles) {\n              return;\n            }\n\n            const images = Array.from(event.dataTransfer.files).filter(file => /image/i.test(file.type));\n\n            if (images.length === 0) {\n              return;\n            }\n\n            event.preventDefault();\n            const {\n              schema\n            } = view.state;\n            const coordinates = view.posAtCoords({\n              left: event.clientX,\n              top: event.clientY\n            });\n            images.forEach(image => {\n              const reader = new FileReader();\n\n              reader.onload = readerEvent => {\n                const node = schema.nodes.image.create({\n                  src: readerEvent.target.result\n                });\n                const transaction = view.state.tr.insert(coordinates.pos, node);\n                view.dispatch(transaction);\n              };\n\n              reader.readAsDataURL(image);\n            });\n          }\n\n        }\n      }\n    })];\n  }\n\n}\n\nclass ListItem extends Node {\n  get name() {\n    return 'list_item';\n  }\n\n  get schema() {\n    return {\n      content: 'paragraph block*',\n      defining: true,\n      draggable: false,\n      parseDOM: [{\n        tag: 'li'\n      }],\n      toDOM: () => ['li', 0]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      Enter: splitListItem(type),\n      Tab: sinkListItem(type),\n      'Shift-Tab': liftListItem(type)\n    };\n  }\n\n}\n\nfunction triggerCharacter({\n  char = '@',\n  allowSpaces = false,\n  startOfLine = false\n}) {\n  return $position => {\n    // cancel if top level node\n    if ($position.depth <= 0) {\n      return false;\n    } // Matching expressions used for later\n\n\n    const escapedChar = \"\\\\\".concat(char);\n    const suffix = new RegExp(\"\\\\s\".concat(escapedChar, \"$\"));\n    const prefix = startOfLine ? '^' : '';\n    const regexp = allowSpaces ? new RegExp(\"\".concat(prefix).concat(escapedChar, \".*?(?=\\\\s\").concat(escapedChar, \"|$)\"), 'gm') : new RegExp(\"\".concat(prefix, \"(?:^)?\").concat(escapedChar, \"[^\\\\s\").concat(escapedChar, \"]*\"), 'gm'); // Lookup the boundaries of the current node\n\n    const textFrom = $position.before();\n    const textTo = $position.end();\n    const text = $position.doc.textBetween(textFrom, textTo, '\\0', '\\0');\n    let match = regexp.exec(text);\n    let position;\n\n    while (match !== null) {\n      // JavaScript doesn't have lookbehinds; this hacks a check that first character is \" \"\n      // or the line beginning\n      const matchPrefix = match.input.slice(Math.max(0, match.index - 1), match.index);\n\n      if (/^[\\s\\0]?$/.test(matchPrefix)) {\n        // The absolute position of the match in the document\n        const from = match.index + $position.start();\n        let to = from + match[0].length; // Edge case handling; if spaces are allowed and we're directly in between\n        // two triggers\n\n        if (allowSpaces && suffix.test(text.slice(to - 1, to + 1))) {\n          match[0] += ' ';\n          to += 1;\n        } // If the $position is located within the matched substring, return that range\n\n\n        if (from < $position.pos && to >= $position.pos) {\n          position = {\n            range: {\n              from,\n              to\n            },\n            query: match[0].slice(char.length),\n            text: match[0]\n          };\n        }\n      }\n\n      match = regexp.exec(text);\n    }\n\n    return position;\n  };\n}\n\nfunction SuggestionsPlugin({\n  matcher = {\n    char: '@',\n    allowSpaces: false,\n    startOfLine: false\n  },\n  appendText = null,\n  suggestionClass = 'suggestion',\n  command = () => false,\n  items = [],\n  onEnter = () => false,\n  onChange = () => false,\n  onExit = () => false,\n  onKeyDown = () => false,\n  onFilter = (searchItems, query) => {\n    if (!query) {\n      return searchItems;\n    }\n\n    return searchItems.filter(item => JSON.stringify(item).toLowerCase().includes(query.toLowerCase()));\n  }\n}) {\n  return new Plugin$1({\n    key: new PluginKey$1('suggestions'),\n\n    view() {\n      return {\n        update: async (view, prevState) => {\n          const prev = this.key.getState(prevState);\n          const next = this.key.getState(view.state); // See how the state changed\n\n          const moved = prev.active && next.active && prev.range.from !== next.range.from;\n          const started = !prev.active && next.active;\n          const stopped = prev.active && !next.active;\n          const changed = !started && !stopped && prev.query !== next.query;\n          const handleStart = started || moved;\n          const handleChange = changed && !moved;\n          const handleExit = stopped || moved; // Cancel when suggestion isn't active\n\n          if (!handleStart && !handleChange && !handleExit) {\n            return;\n          }\n\n          const state = handleExit ? prev : next;\n          const decorationNode = document.querySelector(\"[data-decoration-id=\\\"\".concat(state.decorationId, \"\\\"]\")); // build a virtual node for popper.js or tippy.js\n          // this can be used for building popups without a DOM node\n\n          const virtualNode = decorationNode ? {\n            getBoundingClientRect() {\n              return decorationNode.getBoundingClientRect();\n            },\n\n            clientWidth: decorationNode.clientWidth,\n            clientHeight: decorationNode.clientHeight\n          } : null;\n          const props = {\n            view,\n            range: state.range,\n            query: state.query,\n            text: state.text,\n            decorationNode,\n            virtualNode,\n            items: handleChange || handleStart ? await onFilter(Array.isArray(items) ? items : await items(), state.query) : [],\n            command: ({\n              range,\n              attrs\n            }) => {\n              command({\n                range,\n                attrs,\n                schema: view.state.schema\n              })(view.state, view.dispatch, view);\n\n              if (appendText) {\n                insertText(appendText)(view.state, view.dispatch, view);\n              }\n            }\n          }; // Trigger the hooks when necessary\n\n          if (handleExit) {\n            onExit(props);\n          }\n\n          if (handleChange) {\n            onChange(props);\n          }\n\n          if (handleStart) {\n            onEnter(props);\n          }\n        }\n      };\n    },\n\n    state: {\n      // Initialize the plugin's internal state.\n      init() {\n        return {\n          active: false,\n          range: {},\n          query: null,\n          text: null\n        };\n      },\n\n      // Apply changes to the plugin state from a view transaction.\n      apply(tr, prev) {\n        const {\n          selection\n        } = tr;\n        const next = { ...prev\n        }; // We can only be suggesting if there is no selection\n\n        if (selection.from === selection.to) {\n          // Reset active state if we just left the previous suggestion range\n          if (selection.from < prev.range.from || selection.from > prev.range.to) {\n            next.active = false;\n          } // Try to match against where our cursor currently is\n\n\n          const $position = selection.$from;\n          const match = triggerCharacter(matcher)($position);\n          const decorationId = (Math.random() + 1).toString(36).substr(2, 5); // If we found a match, update the current state to show it\n\n          if (match) {\n            next.active = true;\n            next.decorationId = prev.decorationId ? prev.decorationId : decorationId;\n            next.range = match.range;\n            next.query = match.query;\n            next.text = match.text;\n          } else {\n            next.active = false;\n          }\n        } else {\n          next.active = false;\n        } // Make sure to empty the range if suggestion is inactive\n\n\n        if (!next.active) {\n          next.decorationId = null;\n          next.range = {};\n          next.query = null;\n          next.text = null;\n        }\n\n        return next;\n      }\n\n    },\n    props: {\n      // Call the keydown hook if suggestion is active.\n      handleKeyDown(view, event) {\n        const {\n          active,\n          range\n        } = this.getState(view.state);\n        if (!active) return false;\n        return onKeyDown({\n          view,\n          event,\n          range\n        });\n      },\n\n      // Setup decorator on the currently active suggestion.\n      decorations(editorState) {\n        const {\n          active,\n          range,\n          decorationId\n        } = this.getState(editorState);\n        if (!active) return null;\n        return DecorationSet.create(editorState.doc, [Decoration.inline(range.from, range.to, {\n          nodeName: 'span',\n          class: suggestionClass,\n          'data-decoration-id': decorationId\n        })]);\n      }\n\n    }\n  });\n}\n\nclass Mention extends Node {\n  get name() {\n    return 'mention';\n  }\n\n  get defaultOptions() {\n    return {\n      matcher: {\n        char: '@',\n        allowSpaces: false,\n        startOfLine: false\n      },\n      mentionClass: 'mention',\n      suggestionClass: 'mention-suggestion'\n    };\n  }\n\n  getLabel(dom) {\n    return dom.innerText.split(this.options.matcher.char).join('');\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        id: {},\n        label: {}\n      },\n      group: 'inline',\n      inline: true,\n      content: 'inline*',\n      selectable: false,\n      atom: true,\n      toDOM: node => ['span', {\n        class: this.options.mentionClass,\n        'data-mention-id': node.attrs.id\n      }, \"\".concat(this.options.matcher.char).concat(node.attrs.label)],\n      parseDOM: [{\n        tag: 'span[data-mention-id]',\n        getAttrs: dom => {\n          const id = dom.getAttribute('data-mention-id');\n          const label = this.getLabel(dom);\n          return {\n            id,\n            label\n          };\n        },\n        getContent: (dom, schema) => {\n          const label = this.getLabel(dom);\n          return Fragment.fromJSON(schema, [{\n            type: 'text',\n            text: \"\".concat(this.options.matcher.char).concat(label)\n          }]);\n        }\n      }]\n    };\n  }\n\n  commands({\n    schema\n  }) {\n    return attrs => replaceText(null, schema.nodes[this.name], attrs);\n  }\n\n  get plugins() {\n    return [SuggestionsPlugin({\n      command: ({\n        range,\n        attrs,\n        schema\n      }) => replaceText(range, schema.nodes[this.name], attrs),\n      appendText: ' ',\n      matcher: this.options.matcher,\n      items: this.options.items,\n      onEnter: this.options.onEnter,\n      onChange: this.options.onChange,\n      onExit: this.options.onExit,\n      onKeyDown: this.options.onKeyDown,\n      onFilter: this.options.onFilter,\n      suggestionClass: this.options.suggestionClass\n    })];\n  }\n\n}\n\nclass OrderedList extends Node {\n  get name() {\n    return 'ordered_list';\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        order: {\n          default: 1\n        }\n      },\n      content: 'list_item+',\n      group: 'block',\n      parseDOM: [{\n        tag: 'ol',\n        getAttrs: dom => ({\n          order: dom.hasAttribute('start') ? +dom.getAttribute('start') : 1\n        })\n      }],\n      toDOM: node => node.attrs.order === 1 ? ['ol', 0] : ['ol', {\n        start: node.attrs.order\n      }, 0]\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return () => toggleList(type, schema.nodes.list_item);\n  }\n\n  keys({\n    type,\n    schema\n  }) {\n    return {\n      'Shift-Ctrl-9': toggleList(type, schema.nodes.list_item)\n    };\n  }\n\n  inputRules({\n    type\n  }) {\n    return [wrappingInputRule(/^(\\d+)\\.\\s$/, type, match => ({\n      order: +match[1]\n    }), (match, node) => node.childCount + node.attrs.order === +match[1])];\n  }\n\n}\n\nvar TableNodes = tableNodes({\n  tableGroup: 'block',\n  cellContent: 'block+',\n  cellAttributes: {\n    background: {\n      default: null,\n\n      getFromDOM(dom) {\n        return dom.style.backgroundColor || null;\n      },\n\n      setDOMAttr(value, attrs) {\n        if (value) {\n          const style = {\n            style: \"\".concat(attrs.style || '', \"background-color: \").concat(value, \";\")\n          };\n          Object.assign(attrs, style);\n        }\n      }\n\n    }\n  }\n});\n\nclass Table extends Node {\n  get name() {\n    return 'table';\n  }\n\n  get defaultOptions() {\n    return {\n      resizable: false\n    };\n  }\n\n  get schema() {\n    return TableNodes.table;\n  }\n\n  commands({\n    schema\n  }) {\n    return {\n      createTable: ({\n        rowsCount,\n        colsCount,\n        withHeaderRow\n      }) => (state, dispatch) => {\n        const offset = state.tr.selection.anchor + 1;\n        const nodes = createTable(schema, rowsCount, colsCount, withHeaderRow);\n        const tr = state.tr.replaceSelectionWith(nodes).scrollIntoView();\n        const resolvedPos = tr.doc.resolve(offset);\n        tr.setSelection(TextSelection.near(resolvedPos));\n        dispatch(tr);\n      },\n      addColumnBefore: () => addColumnBefore,\n      addColumnAfter: () => addColumnAfter,\n      deleteColumn: () => deleteColumn,\n      addRowBefore: () => addRowBefore,\n      addRowAfter: () => addRowAfter,\n      deleteRow: () => deleteRow,\n      deleteTable: () => deleteTable,\n      toggleCellMerge: () => (state, dispatch) => {\n        if (mergeCells(state, dispatch)) {\n          return;\n        }\n\n        splitCell(state, dispatch);\n      },\n      mergeCells: () => mergeCells,\n      splitCell: () => splitCell,\n      toggleHeaderColumn: () => toggleHeaderColumn,\n      toggleHeaderRow: () => toggleHeaderRow,\n      toggleHeaderCell: () => toggleHeaderCell,\n      setCellAttr: () => setCellAttr,\n      fixTables: () => fixTables\n    };\n  }\n\n  keys() {\n    return {\n      Tab: goToNextCell(1),\n      'Shift-Tab': goToNextCell(-1)\n    };\n  }\n\n  get plugins() {\n    return [...(this.options.resizable ? [columnResizing()] : []), tableEditing()];\n  }\n\n}\n\nclass TableHeader extends Node {\n  get name() {\n    return 'table_header';\n  }\n\n  get schema() {\n    return TableNodes.table_header;\n  }\n\n}\n\nclass TableCell extends Node {\n  get name() {\n    return 'table_cell';\n  }\n\n  get schema() {\n    return TableNodes.table_cell;\n  }\n\n}\n\nclass TableRow extends Node {\n  get name() {\n    return 'table_row';\n  }\n\n  get schema() {\n    return TableNodes.table_row;\n  }\n\n}\n\nclass TodoItem extends Node {\n  get name() {\n    return 'todo_item';\n  }\n\n  get defaultOptions() {\n    return {\n      nested: false\n    };\n  }\n\n  get view() {\n    return {\n      props: ['node', 'updateAttrs', 'view'],\n      methods: {\n        onChange() {\n          this.updateAttrs({\n            done: !this.node.attrs.done\n          });\n        }\n\n      },\n      template: \"\\n        <li :data-type=\\\"node.type.name\\\" :data-done=\\\"node.attrs.done.toString()\\\" data-drag-handle>\\n          <span class=\\\"todo-checkbox\\\" contenteditable=\\\"false\\\" @click=\\\"onChange\\\"></span>\\n          <div class=\\\"todo-content\\\" ref=\\\"content\\\" :contenteditable=\\\"view.editable.toString()\\\"></div>\\n        </li>\\n      \"\n    };\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        done: {\n          default: false\n        }\n      },\n      draggable: true,\n      content: this.options.nested ? '(paragraph|todo_list)+' : 'paragraph+',\n      toDOM: node => {\n        const {\n          done\n        } = node.attrs;\n        return ['li', {\n          'data-type': this.name,\n          'data-done': done.toString()\n        }, ['span', {\n          class: 'todo-checkbox',\n          contenteditable: 'false'\n        }], ['div', {\n          class: 'todo-content'\n        }, 0]];\n      },\n      parseDOM: [{\n        priority: 51,\n        tag: \"[data-type=\\\"\".concat(this.name, \"\\\"]\"),\n        getAttrs: dom => ({\n          done: dom.getAttribute('data-done') === 'true'\n        })\n      }]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      Enter: splitToDefaultListItem(type),\n      Tab: this.options.nested ? sinkListItem(type) : () => {},\n      'Shift-Tab': liftListItem(type)\n    };\n  }\n\n}\n\nclass TodoList extends Node {\n  get name() {\n    return 'todo_list';\n  }\n\n  get schema() {\n    return {\n      group: 'block',\n      content: 'todo_item+',\n      toDOM: () => ['ul', {\n        'data-type': this.name\n      }, 0],\n      parseDOM: [{\n        priority: 51,\n        tag: \"[data-type=\\\"\".concat(this.name, \"\\\"]\")\n      }]\n    };\n  }\n\n  commands({\n    type,\n    schema\n  }) {\n    return () => toggleList(type, schema.nodes.todo_item);\n  }\n\n  inputRules({\n    type\n  }) {\n    return [wrappingInputRule(/^\\s*(\\[ \\])\\s$/, type)];\n  }\n\n}\n\nclass Bold extends Mark {\n  get name() {\n    return 'bold';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{\n        tag: 'strong'\n      }, {\n        tag: 'b',\n        getAttrs: node => node.style.fontWeight !== 'normal' && null\n      }, {\n        style: 'font-weight',\n        getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null\n      }],\n      toDOM: () => ['strong', 0]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Mod-b': toggleMark(type)\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => toggleMark(type);\n  }\n\n  inputRules({\n    type\n  }) {\n    return [markInputRule(/(?:\\*\\*|__)([^*_]+)(?:\\*\\*|__)$/, type)];\n  }\n\n  pasteRules({\n    type\n  }) {\n    return [markPasteRule(/(?:\\*\\*|__)([^*_]+)(?:\\*\\*|__)/g, type)];\n  }\n\n}\n\nclass Code extends Mark {\n  get name() {\n    return 'code';\n  }\n\n  get schema() {\n    return {\n      excludes: '_',\n      parseDOM: [{\n        tag: 'code'\n      }],\n      toDOM: () => ['code', 0]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Mod-`': toggleMark(type)\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => toggleMark(type);\n  }\n\n  inputRules({\n    type\n  }) {\n    return [markInputRule(/(?:`)([^`]+)(?:`)$/, type)];\n  }\n\n  pasteRules({\n    type\n  }) {\n    return [markPasteRule(/(?:`)([^`]+)(?:`)/g, type)];\n  }\n\n}\n\nclass Italic extends Mark {\n  get name() {\n    return 'italic';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{\n        tag: 'i'\n      }, {\n        tag: 'em'\n      }, {\n        style: 'font-style=italic'\n      }],\n      toDOM: () => ['em', 0]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Mod-i': toggleMark(type)\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => toggleMark(type);\n  }\n\n  inputRules({\n    type\n  }) {\n    return [markInputRule(/(?:^|[^_])(_([^_]+)_)$/, type), markInputRule(/(?:^|[^*])(\\*([^*]+)\\*)$/, type)];\n  }\n\n  pasteRules({\n    type\n  }) {\n    return [markPasteRule(/_([^_]+)_/g, type), markPasteRule(/\\*([^*]+)\\*/g, type)];\n  }\n\n}\n\nclass Link extends Mark {\n  get name() {\n    return 'link';\n  }\n\n  get defaultOptions() {\n    return {\n      openOnClick: true,\n      target: null\n    };\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        href: {\n          default: null\n        },\n        target: {\n          default: null\n        }\n      },\n      inclusive: false,\n      parseDOM: [{\n        tag: 'a[href]',\n        getAttrs: dom => ({\n          href: dom.getAttribute('href'),\n          target: dom.getAttribute('target')\n        })\n      }],\n      toDOM: node => ['a', { ...node.attrs,\n        rel: 'noopener noreferrer nofollow',\n        target: this.options.target\n      }, 0]\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return attrs => {\n      if (attrs.href) {\n        return updateMark(type, attrs);\n      }\n\n      return removeMark(type);\n    };\n  }\n\n  pasteRules({\n    type\n  }) {\n    return [pasteRule(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z]{2,}\\b([-a-zA-Z0-9@:%_+.~#?&//=,]*)/gi, type, url => ({\n      href: url\n    }))];\n  }\n\n  get plugins() {\n    if (!this.options.openOnClick) {\n      return [];\n    }\n\n    return [new Plugin({\n      props: {\n        handleClick: (view, pos, event) => {\n          const {\n            schema\n          } = view.state;\n          const attrs = getMarkAttrs(view.state, schema.marks.link);\n\n          if (attrs.href && event.target instanceof HTMLAnchorElement) {\n            event.stopPropagation();\n            window.open(attrs.href, attrs.target);\n          }\n        }\n      }\n    })];\n  }\n\n}\n\nclass Strike extends Mark {\n  get name() {\n    return 'strike';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{\n        tag: 's'\n      }, {\n        tag: 'del'\n      }, {\n        tag: 'strike'\n      }, {\n        style: 'text-decoration',\n        getAttrs: value => value === 'line-through'\n      }],\n      toDOM: () => ['s', 0]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Mod-d': toggleMark(type)\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => toggleMark(type);\n  }\n\n  inputRules({\n    type\n  }) {\n    return [markInputRule(/~([^~]+)~$/, type)];\n  }\n\n  pasteRules({\n    type\n  }) {\n    return [markPasteRule(/~([^~]+)~/g, type)];\n  }\n\n}\n\nclass Underline extends Mark {\n  get name() {\n    return 'underline';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{\n        tag: 'u'\n      }, {\n        style: 'text-decoration',\n        getAttrs: value => value === 'underline'\n      }],\n      toDOM: () => ['u', 0]\n    };\n  }\n\n  keys({\n    type\n  }) {\n    return {\n      'Mod-u': toggleMark(type)\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => toggleMark(type);\n  }\n\n}\n\nclass Collaboration extends Extension {\n  get name() {\n    return 'collaboration';\n  }\n\n  init() {\n    this.getSendableSteps = this.debounce(state => {\n      const sendable = sendableSteps(state);\n\n      if (sendable) {\n        this.options.onSendable({\n          editor: this.editor,\n          sendable: {\n            version: sendable.version,\n            steps: sendable.steps.map(step => step.toJSON()),\n            clientID: sendable.clientID\n          }\n        });\n      }\n    }, this.options.debounce);\n    this.editor.on('transaction', ({\n      state\n    }) => {\n      this.getSendableSteps(state);\n    });\n  }\n\n  get defaultOptions() {\n    return {\n      version: 0,\n      clientID: Math.floor(Math.random() * 0xFFFFFFFF),\n      debounce: 250,\n      onSendable: () => {},\n      update: ({\n        steps,\n        version\n      }) => {\n        const {\n          state,\n          view,\n          schema\n        } = this.editor;\n\n        if (getVersion(state) > version) {\n          return;\n        }\n\n        view.dispatch(receiveTransaction(state, steps.map(item => Step.fromJSON(schema, item.step)), steps.map(item => item.clientID)));\n      }\n    };\n  }\n\n  get plugins() {\n    return [collab({\n      version: this.options.version,\n      clientID: this.options.clientID\n    })];\n  }\n\n  debounce(fn, delay) {\n    let timeout;\n    return function (...args) {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      timeout = setTimeout(() => {\n        fn(...args);\n        timeout = null;\n      }, delay);\n    };\n  }\n\n}\n\nclass Focus extends Extension {\n  get name() {\n    return 'focus';\n  }\n\n  get defaultOptions() {\n    return {\n      className: 'has-focus',\n      nested: false\n    };\n  }\n\n  get plugins() {\n    return [new Plugin({\n      props: {\n        decorations: ({\n          doc,\n          plugins,\n          selection\n        }) => {\n          const editablePlugin = plugins.find(plugin => plugin.key.startsWith('editable$'));\n          const editable = editablePlugin.props.editable();\n          const active = editable && this.options.className;\n          const {\n            focused\n          } = this.editor;\n          const {\n            anchor\n          } = selection;\n          const decorations = [];\n\n          if (!active || !focused) {\n            return false;\n          }\n\n          doc.descendants((node, pos) => {\n            const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize;\n\n            if (hasAnchor && !node.isText) {\n              const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                class: this.options.className\n              });\n              decorations.push(decoration);\n            }\n\n            return this.options.nested;\n          });\n          return DecorationSet.create(doc, decorations);\n        }\n      }\n    })];\n  }\n\n}\n\nclass History extends Extension {\n  get name() {\n    return 'history';\n  }\n\n  get defaultOptions() {\n    return {\n      depth: '',\n      newGroupDelay: ''\n    };\n  }\n\n  keys() {\n    const keymap = {\n      'Mod-z': undo,\n      'Mod-y': redo,\n      'Shift-Mod-z': redo,\n      // Russian language\n      'Mod-я': undo,\n      'Shift-Mod-я': redo\n    };\n    return keymap;\n  }\n\n  get plugins() {\n    return [history({\n      depth: this.options.depth,\n      newGroupDelay: this.options.newGroupDelay\n    })];\n  }\n\n  commands() {\n    return {\n      undo: () => undo,\n      redo: () => redo,\n      undoDepth: () => undoDepth,\n      redoDepth: () => redoDepth\n    };\n  }\n\n}\n\nclass Placeholder extends Extension {\n  get name() {\n    return 'placeholder';\n  }\n\n  get defaultOptions() {\n    return {\n      emptyEditorClass: 'is-editor-empty',\n      emptyNodeClass: 'is-empty',\n      emptyNodeText: 'Write something …',\n      showOnlyWhenEditable: true,\n      showOnlyCurrent: true\n    };\n  }\n\n  get plugins() {\n    return [new Plugin({\n      props: {\n        decorations: ({\n          doc,\n          plugins,\n          selection\n        }) => {\n          const editablePlugin = plugins.find(plugin => plugin.key.startsWith('editable$'));\n          const editable = editablePlugin.props.editable();\n          const active = editable || !this.options.showOnlyWhenEditable;\n          const {\n            anchor\n          } = selection;\n          const decorations = [];\n          const isEditorEmpty = doc.textContent.length === 0;\n\n          if (!active) {\n            return false;\n          }\n\n          doc.descendants((node, pos) => {\n            const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize;\n            const isNodeEmpty = node.content.size === 0;\n\n            if ((hasAnchor || !this.options.showOnlyCurrent) && isNodeEmpty) {\n              const classes = [this.options.emptyNodeClass];\n\n              if (isEditorEmpty) {\n                classes.push(this.options.emptyEditorClass);\n              }\n\n              const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                class: classes.join(' '),\n                'data-empty-text': typeof this.options.emptyNodeText === 'function' ? this.options.emptyNodeText(node) : this.options.emptyNodeText\n              });\n              decorations.push(decoration);\n            }\n\n            return false;\n          });\n          return DecorationSet.create(doc, decorations);\n        }\n      }\n    })];\n  }\n\n}\n\nclass Search extends Extension {\n  constructor(options = {}) {\n    super(options);\n    this.results = [];\n    this.searchTerm = null;\n    this._updating = false;\n  }\n\n  get name() {\n    return 'search';\n  }\n\n  get defaultOptions() {\n    return {\n      autoSelectNext: true,\n      findClass: 'find',\n      searching: false,\n      caseSensitive: false,\n      disableRegex: true,\n      alwaysSearch: false\n    };\n  }\n\n  commands() {\n    return {\n      find: attrs => this.find(attrs),\n      replace: attrs => this.replace(attrs),\n      replaceAll: attrs => this.replaceAll(attrs),\n      clearSearch: () => this.clear()\n    };\n  }\n\n  get findRegExp() {\n    return RegExp(this.searchTerm, !this.options.caseSensitive ? 'gui' : 'gu');\n  }\n\n  get decorations() {\n    return this.results.map(deco => Decoration.inline(deco.from, deco.to, {\n      class: this.options.findClass\n    }));\n  }\n\n  _search(doc) {\n    this.results = [];\n    const mergedTextNodes = [];\n    let index = 0;\n\n    if (!this.searchTerm) {\n      return;\n    }\n\n    doc.descendants((node, pos) => {\n      if (node.isText) {\n        if (mergedTextNodes[index]) {\n          mergedTextNodes[index] = {\n            text: mergedTextNodes[index].text + node.text,\n            pos: mergedTextNodes[index].pos\n          };\n        } else {\n          mergedTextNodes[index] = {\n            text: node.text,\n            pos\n          };\n        }\n      } else {\n        index += 1;\n      }\n    });\n    mergedTextNodes.forEach(({\n      text,\n      pos\n    }) => {\n      const search = this.findRegExp;\n      let m; // eslint-disable-next-line no-cond-assign\n\n      while (m = search.exec(text)) {\n        if (m[0] === '') {\n          break;\n        }\n\n        this.results.push({\n          from: pos + m.index,\n          to: pos + m.index + m[0].length\n        });\n      }\n    });\n  }\n\n  replace(replace) {\n    return (state, dispatch) => {\n      const firstResult = this.results[0];\n\n      if (!firstResult) {\n        return;\n      }\n\n      const {\n        from,\n        to\n      } = this.results[0];\n      dispatch(state.tr.insertText(replace, from, to));\n      this.editor.commands.find(this.searchTerm);\n    };\n  }\n\n  rebaseNextResult(replace, index, lastOffset = 0) {\n    const nextIndex = index + 1;\n\n    if (!this.results[nextIndex]) {\n      return null;\n    }\n\n    const {\n      from: currentFrom,\n      to: currentTo\n    } = this.results[index];\n    const offset = currentTo - currentFrom - replace.length + lastOffset;\n    const {\n      from,\n      to\n    } = this.results[nextIndex];\n    this.results[nextIndex] = {\n      to: to - offset,\n      from: from - offset\n    };\n    return offset;\n  }\n\n  replaceAll(replace) {\n    return ({\n      tr\n    }, dispatch) => {\n      let offset;\n\n      if (!this.results.length) {\n        return;\n      }\n\n      this.results.forEach(({\n        from,\n        to\n      }, index) => {\n        tr.insertText(replace, from, to);\n        offset = this.rebaseNextResult(replace, index, offset);\n      });\n      dispatch(tr);\n      this.editor.commands.find(this.searchTerm);\n    };\n  }\n\n  find(searchTerm) {\n    return (state, dispatch) => {\n      this.searchTerm = this.options.disableRegex ? searchTerm.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') : searchTerm;\n      this.updateView(state, dispatch);\n    };\n  }\n\n  clear() {\n    return (state, dispatch) => {\n      this.searchTerm = null;\n      this.updateView(state, dispatch);\n    };\n  }\n\n  updateView({\n    tr\n  }, dispatch) {\n    this._updating = true;\n    dispatch(tr);\n    this._updating = false;\n  }\n\n  createDeco(doc) {\n    this._search(doc);\n\n    return this.decorations ? DecorationSet.create(doc, this.decorations) : [];\n  }\n\n  get plugins() {\n    return [new Plugin({\n      state: {\n        init() {\n          return DecorationSet.empty;\n        },\n\n        apply: (tr, old) => {\n          if (this._updating || this.options.searching || tr.docChanged && this.options.alwaysSearch) {\n            return this.createDeco(tr.doc);\n          }\n\n          if (tr.docChanged) {\n            return old.map(tr.mapping, tr.doc);\n          }\n\n          return old;\n        }\n      },\n      props: {\n        decorations(state) {\n          return this.getState(state);\n        }\n\n      }\n    })];\n  }\n\n}\n\nclass TrailingNode extends Extension {\n  get name() {\n    return 'trailing_node';\n  }\n\n  get defaultOptions() {\n    return {\n      node: 'paragraph',\n      notAfter: ['paragraph']\n    };\n  }\n\n  get plugins() {\n    const plugin = new PluginKey(this.name);\n    const disabledNodes = Object.entries(this.editor.schema.nodes).map(([, value]) => value).filter(node => this.options.notAfter.includes(node.name));\n    return [new Plugin({\n      key: plugin,\n      view: () => ({\n        update: view => {\n          const {\n            state\n          } = view;\n          const insertNodeAtEnd = plugin.getState(state);\n\n          if (!insertNodeAtEnd) {\n            return;\n          }\n\n          const {\n            doc,\n            schema,\n            tr\n          } = state;\n          const type = schema.nodes[this.options.node];\n          const transaction = tr.insert(doc.content.size, type.create());\n          view.dispatch(transaction);\n        }\n      }),\n      state: {\n        init: (_, state) => {\n          const lastNode = state.tr.doc.lastChild;\n          return !nodeEqualsType({\n            node: lastNode,\n            types: disabledNodes\n          });\n        },\n        apply: (tr, value) => {\n          if (!tr.docChanged) {\n            return value;\n          }\n\n          const lastNode = tr.doc.lastChild;\n          return !nodeEqualsType({\n            node: lastNode,\n            types: disabledNodes\n          });\n        }\n      }\n    })];\n  }\n\n}\n\nexport { Blockquote, Bold, BulletList, Code, CodeBlock, CodeBlockHighlight, Collaboration, Focus, HardBreak, Heading, HighlightPlugin as Highlight, History, HorizontalRule, Image, Italic, Link, ListItem, Mention, OrderedList, Placeholder, Search, Strike, SuggestionsPlugin as Suggestions, Table, TableCell, TableHeader, TableRow, TodoItem, TodoList, TrailingNode, Underline };\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=47c321c6&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperReset.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--13!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelperReset.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--13!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import {Plugin} from \"prosemirror-state\"\n\n// ::- Input rules are regular expressions describing a piece of text\n// that, when typed, causes something to happen. This might be\n// changing two dashes into an emdash, wrapping a paragraph starting\n// with `\"> \"` into a blockquote, or something entirely different.\nexport class InputRule {\n  // :: (RegExp, union<string, (state: EditorState, match: [string], start: number, end: number) → ?Transaction>)\n  // Create an input rule. The rule applies when the user typed\n  // something and the text directly in front of the cursor matches\n  // `match`, which should probably end with `$`.\n  //\n  // The `handler` can be a string, in which case the matched text, or\n  // the first matched group in the regexp, is replaced by that\n  // string.\n  //\n  // Or a it can be a function, which will be called with the match\n  // array produced by\n  // [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n  // as well as the start and end of the matched range, and which can\n  // return a [transaction](#state.Transaction) that describes the\n  // rule's effect, or null to indicate the input was not handled.\n  constructor(match, handler) {\n    this.match = match\n    this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler\n  }\n}\n\nfunction stringHandler(string) {\n  return function(state, match, start, end) {\n    let insert = string\n    if (match[1]) {\n      let offset = match[0].lastIndexOf(match[1])\n      insert += match[0].slice(offset + match[1].length)\n      start += offset\n      let cutOff = start - end\n      if (cutOff > 0) {\n        insert = match[0].slice(offset - cutOff, offset) + insert\n        start = end\n      }\n    }\n    return state.tr.insertText(insert, start, end)\n  }\n}\n\nconst MAX_MATCH = 500\n\n// :: (config: {rules: [InputRule]}) → Plugin\n// Create an input rules plugin. When enabled, it will cause text\n// input that matches any of the given rules to trigger the rule's\n// action.\nexport function inputRules({rules}) {\n  let plugin = new Plugin({\n    state: {\n      init() { return null },\n      apply(tr, prev) {\n        let stored = tr.getMeta(this)\n        if (stored) return stored\n        return tr.selectionSet || tr.docChanged ? null : prev\n      }\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            let {$cursor} = view.state.selection\n            if ($cursor) run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin)\n          })\n        }\n      }\n    },\n\n    isInputRules: true\n  })\n  return plugin\n}\n\nfunction run(view, from, to, text, rules, plugin) {\n  if (view.composing) return false\n  let state = view.state, $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code) return false\n  let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset,\n                                            null, \"\\ufffc\") + text\n  for (let i = 0; i < rules.length; i++) {\n    let match = rules[i].match.exec(textBefore)\n    let tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to)\n    if (!tr) continue\n    view.dispatch(tr.setMeta(plugin, {transform: tr, from, to, text}))\n    return true\n  }\n  return false\n}\n\n// :: (EditorState, ?(Transaction)) → bool\n// This is a command that will undo an input rule, if applying such a\n// rule was the last thing that the user did.\nexport function undoInputRule(state, dispatch) {\n  let plugins = state.plugins\n  for (let i = 0; i < plugins.length; i++) {\n    let plugin = plugins[i], undoable\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        let tr = state.tr, toUndo = undoable.transform\n        for (let j = toUndo.steps.length - 1; j >= 0; j--)\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        let marks = tr.doc.resolve(undoable.from).marks()\n        dispatch(tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks)))\n      }\n      return true\n    }\n  }\n  return false\n}\n","import {InputRule} from \"./inputrules\"\nimport {findWrapping, canJoin} from \"prosemirror-transform\"\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>, ?([string], Node) → bool) → InputRule\n// Build an input rule for automatically wrapping a textblock when a\n// given string is typed. The `regexp` argument is\n// directly passed through to the `InputRule` constructor. You'll\n// probably want the regexp to start with `^`, so that the pattern can\n// only occur at the start of a textblock.\n//\n// `nodeType` is the type of node to wrap in. If it needs attributes,\n// you can either pass them directly, or pass a function that will\n// compute them from the regular expression match.\n//\n// By default, if there's a node with the same type above the newly\n// wrapped node, the rule will try to [join](#transform.Transform.join) those\n// two nodes. You can pass a join predicate, which takes a regular\n// expression match and the node before the wrapped node, and can\n// return a boolean to indicate whether a join should happen.\nexport function wrappingInputRule(regexp, nodeType, getAttrs, joinPredicate) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    let tr = state.tr.delete(start, end)\n    let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return null\n    tr.wrap(range, wrapping)\n    let before = tr.doc.resolve(start - 1).nodeBefore\n    if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n        (!joinPredicate || joinPredicate(match, before)))\n      tr.join(start - 1)\n    return tr\n  })\n}\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>) → InputRule\n// Build an input rule that changes the type of a textblock when the\n// matched text is typed into it. You'll usually want to start your\n// regexp with `^` to that it is only matched at the start of a\n// textblock. The optional `getAttrs` parameter can be used to compute\n// the new node's attributes, and works the same as in the\n// `wrappingInputRule` function.\nexport function textblockTypeInputRule(regexp, nodeType, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let $start = state.doc.resolve(start)\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType)) return null\n    return state.tr\n      .delete(start, end)\n      .setBlockType(start, start, nodeType, attrs)\n  })\n}\n","import {InputRule} from \"./inputrules\"\n\n// :: InputRule Converts double dashes to an emdash.\nexport const emDash = new InputRule(/--$/, \"—\")\n// :: InputRule Converts three dots to an ellipsis character.\nexport const ellipsis = new InputRule(/\\.\\.\\.$/, \"…\")\n// :: InputRule “Smart” opening double quotes.\nexport const openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\")\n// :: InputRule “Smart” closing double quotes.\nexport const closeDoubleQuote = new InputRule(/\"$/, \"”\")\n// :: InputRule “Smart” opening single quotes.\nexport const openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\")\n// :: InputRule “Smart” closing single quotes.\nexport const closeSingleQuote = new InputRule(/'$/, \"’\")\n\n// :: [InputRule] Smart-quote related input rules.\nexport const smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote]\n","import './setPublicPath'\nexport * from '~entry'\n","import { Node, Plugin } from 'tiptap'\r\nimport { nodeInputRule } from 'tiptap-commands'\r\n\r\n/**\r\n * Matches following attributes in Markdown-typed image: [, alt, src, title]\r\n *\r\n * Example:\r\n * ![Lorem](image.jpg) -> [, \"Lorem\", \"image.jpg\"]\r\n * ![](image.jpg \"Ipsum\") -> [, \"\", \"image.jpg\", \"Ipsum\"]\r\n * ![Lorem](image.jpg \"Ipsum\") -> [, \"Lorem\", \"image.jpg\", \"Ipsum\"]\r\n */\r\nconst IMAGE_INPUT_REGEX = /!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\)/\r\n\r\nexport default class Image extends Node {\r\n\r\n  get name() {\r\n    return 'image'\r\n  }\r\n\r\n  get schema() {\r\n    return {\r\n      attrs: {\r\n        src: {},\r\n        alt: {\r\n          default: null,\r\n        },\r\n        title: {\r\n          default: null,\r\n        },\r\n      },\r\n      group: 'block',\r\n      draggable: true,\r\n      parseDOM: [\r\n        {\r\n          tag: 'img[src]',\r\n          getAttrs: dom => ({\r\n            src: dom.getAttribute('src'),\r\n            title: dom.getAttribute('title'),\r\n            alt: dom.getAttribute('alt'),\r\n          }),\r\n        },\r\n      ],\r\n      toDOM: node => ['img', node.attrs],\r\n    }\r\n  }\r\n\r\n  commands({ type }) {\r\n    return attrs => (state, dispatch) => {\r\n      const { selection } = state\r\n      const position = selection.$cursor ? selection.$cursor.pos : selection.$to.pos\r\n      const node = type.create(attrs)\r\n      const transaction = state.tr.insert(position, node)\r\n      dispatch(transaction)\r\n    }\r\n  }\r\n\r\n  inputRules({ type }) {\r\n    return [\r\n      nodeInputRule(IMAGE_INPUT_REGEX, type, match => {\r\n        const [, alt, src, title] = match\r\n        return {\r\n          src,\r\n          alt,\r\n          title,\r\n        }\r\n      }),\r\n    ]\r\n  }\r\n\r\n  get plugins() {\r\n    return [\r\n      new Plugin({\r\n        props: {\r\n          handleDOMEvents: {\r\n            drop(view, event) {\r\n              const hasFiles = event.dataTransfer\r\n              && event.dataTransfer.files\r\n              && event.dataTransfer.files.length\r\n\r\n              if (!hasFiles) {\r\n                return\r\n              }\r\n\r\n              const images = Array\r\n                .from(event.dataTransfer.files)\r\n                .filter(file => (/image/i).test(file.type))\r\n\r\n              if (images.length === 0) {\r\n                return\r\n              }\r\n\r\n              event.preventDefault()\r\n\r\n              const { schema } = view.state\r\n              const coordinates = view.posAtCoords({ left: event.clientX, top: event.clientY })\r\n\r\n              images.forEach(image => {\r\n                const reader = new FileReader()\r\n\r\n                reader.onload = readerEvent => {\r\n                  const node = schema.nodes.image.create({\r\n                    src: readerEvent.target.result,\r\n                  })\r\n                  const transaction = view.state.tr.insert(coordinates.pos, node)\r\n                  view.dispatch(transaction)\r\n                }\r\n                reader.readAsDataURL(image)\r\n              })\r\n            },\r\n          },\r\n        },\r\n      }),\r\n    ]\r\n  }\r\n\r\n}"],"sourceRoot":""}